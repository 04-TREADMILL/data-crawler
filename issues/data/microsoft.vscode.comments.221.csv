22001|By analyzing the blame information on this pull request, we identified @egamma and @alexandrudima to be potential reviewers
22002|Hi **@kisstkondoros**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
22003|Is this happening consistently for you?
22004|I have not come across the bug today. Note that when I did this issue I did check if I had the latest TypeScript version and updated it to `1.8.10`.  Maybe that fixed it ? I'll come back to you tomorrow at the end of the day to tell you if it ocurred or it seems fixed.  `TypeScript` release note :   > This release fixes an issue in React 15.0 and later by removing a dependency on an internal React API when emitting JSX spread attributes. As a result, TypeScript now emits its own standalone helper function for spread attributes.
22005|This happens every time I open it up it just freezes.
22006|Can you paste in the output of this?  ``` /usr/share/code/code --verbose ```
22007|A first step would be to at least have a Configure Language item under the File > Preferences menu.
22008|"Ideally, I would like to see VSCode keybindings to have the option to be context based and allow key-chords and key-chains. If these keybinding options are built in to VSCode keybinding support, most vim support could be configured into using only keybindings themselves.  For example, something like:  ``` yaml [     {         ""key"": ""l"",         ""command"": ""cursorRight"",         ""when"": ""editorTextFocus && normalMode""     },     {         // press and release 'd', then press and release 'd'         ""key"": ""dd"",          ""command"": ""editor.action.deleteLines"",         ""when"": ""editorTextFocus && normalMode""     },     {         // press and release the chord 'ctrl+a', then press and release 'ctrl+d'         ""key"": ""ctrl+a; ctrl+d"",          ""command"": ""editor.action.deleteLines"",         ""when"": ""editorTextFocus && insertMode""     } ] ```  I know this doesn't cover all of the bases but it would certainly help to be built into VSCode itself.  If amount of fancyness is no issue, supporting regex based mappings too would be amazing:  ``` yaml [     {         ""regex_key"": ""([0-9]+); d"",         ""command"": ""editor.action.delete(\1)"",         ""when"": ""editorTextFocus && normalMode""     } ] ```"
22009|Likely dupe of #5179
22010|@vaishnav4226 [these uninstall/re-install steps](https://www.microsoft.com/net/core#macosx) worked for me.
22011|No used yast to install git. I did get the ZIP file version working though. However the installer clearly didn't recognize my installed version of git.  Dave
22012|@isidorn @weinand  Hi - I have been able to fix the source display on my implementation by following means: I set sourceReference to the pointer address of the source string, and store a list of sourceReference to stack depth mapping in the debugger. So when the front-end sends a Source request I lookup the stack depth using the sourceReference.  I only need to know the stack depth to locate the source - as the source is available in the Lua VM. But since stack depth is not unique - my original solution of passing this as sourceReference would not work.   Is it possible to do following:  a) Add a stack frameId to the Source request - can the front end supply this? b) Ensure that sourceReference is sized such that it can hold pointer values (as integers). This seems to work but I am not sure what the 'number' JSON value can hold and whether it is large enough to hold a pointer value.  The stack frameId is all I need to return the source. But this may not be true for other debug adapters of course.
22013|Moved to [#337](https://github.com/Microsoft/vscode-go/issues/337)
22014|Here is what I got  $ /usr/share/code/code --verbose bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell (8:02:53 PM) ### VSCode main.js ### (8:02:53 PM) /usr/share/code/resources/app { pathArguments: [],   programStart: 0,   enablePerformance: false,   verboseLogging: true,   debugExtensionHostPort: undefined,   debugBrkExtensionHost: false,   logExtensionHostCommunication: false,   debugBrkFileWatcherPort: undefined,   openNewWindow: false,   openInSameWindow: false,   gotoLineMode: false,   diffMode: false,   extensionsHomePath: undefined,   extensionDevelopmentPath: undefined,   extensionTestsPath: undefined,   disableExtensions: false,   locale: undefined,   waitForWindowClose: false } [3783:0519/200255:ERROR:texture_manager.cc(2278)] [.CommandBufferContext.Compositor-0x3cf63f8ff000]GL ERROR :GL_INVALID_ENUM : glTexImage2D: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_ENUM : GLES2DecoderImpl::DoBindTexImage2DCHROMIUM: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200255:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command (8:02:59 PM) IPC#vscode:startCrashReporter [3783:0519/200301:ERROR:texture_manager.cc(2278)] [.CommandBufferContext.RenderCompositor-0x135e78c53c60]GL ERROR :GL_INVALID_ENUM : glTexImage2D: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_ENUM : GLES2DecoderImpl::DoBindTexImage2DCHROMIUM: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2113)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_OPERATION : ScopedTextureBinder::ctor: was unhandled [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200301:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command (8:03:01 PM) IPC#vscode-workbenchLoaded [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200302:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200303:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200304:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200304:ERROR:gles2_cmd_decoder.cc(2113)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_OPERATION : ScopedTextureBinder::ctor: was unhandled [3783:0519/200304:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200304:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200304:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200304:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200305:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200305:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200306:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200306:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200307:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200307:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200308:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200308:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200309:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200309:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200310:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200310:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200311:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200311:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200312:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200312:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200313:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200313:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.RenderWorker-0x135e78c536e0]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200313:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200313:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200313:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command [3783:0519/200313:ERROR:gles2_cmd_decoder.cc(2109)] [.CommandBufferContext.CompositorWorker-0x3cf63ef3ac60]GL ERROR :GL_INVALID_VALUE : ScopedTextureBinder::dtor: <- error from previous GL command ^A^C(8:03:22 PM) Lifecycle#before-quit (8:03:22 PM) Lifecycle#window-before-close 1 (8:03:22 PM) Lifecycle#unload() 1 (8:03:22 PM) Lifecycle#window-before-close 1 (8:03:22 PM) Lifecycle#window-close 1 (8:03:22 PM) Lifecycle#window-all-closed (8:03:22 PM) Lifecycle#before-quit (8:03:22 PM) App#will-quit: disposing resources
22015|"@bpasero for the 4 Fareast languages, the pattern is like `Translation String(<letter>)`, with the `<letter>` denoted with ""&&""."
22016|vscode default use --debug-brk to enable the debug support which block the child process at beginning.
22017|The console always output messy code  and I do not know where to set it correctly
22018|Looks like an upstream issue that's fixed. It should be fixed eventually when we update Electron https://bugs.chromium.org/p/chromium/issues/detail?id=580259
22019|By analyzing the blame information on this pull request, we identified @egamma and @aeschli to be potential reviewers
22020|Hi **@huangenyan**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
22021|**@huangenyan**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
22022|.tar.xz might be a better way to go, 30% file saving for significantly slower compression time and slightly slower decompression time.  ``` ❯ time tar -cJf vscode.tar.xz VSCode-linux-x64/  real    0m48.358s user    0m48.396s sys 0m0.276s  ❯ time tar -xJf vscode.tar.xz  real    0m2.161s user    0m2.172s sys 0m0.180s  ❯ time tar -czf vscode.tar.gz VSCode-linux-x64/  real    0m4.808s user    0m4.732s sys 0m0.148s  ❯ time tar -xzf vscode.tar.gz  real    0m0.845s user    0m0.800s sys 0m0.164s  ❯ ls -l --block-size=M ... -rw-rw-r--  1 daniel daniel 44M May 19 22:36 vscode.tar.gz -rw-rw-r--  1 daniel daniel 31M May 19 22:35 vscode.tar.xz ```
22023|I am from windows environment and VS Code provides the same option there. I do not know why the hell it is doing discrimination with osx and not providing the same here.  it is not impossible and we need it
22024|This issue was moved to OmniSharp/omnisharp-vscode#354
22025|@sincsc what console are you talking about? What do you mean by 'messy code'?  Please provide more details about your problem.
22026|Thanks :)
22027|Hi, is this a problem of electron packager ?
22028|http://tmtheme-editor.herokuapp.com/#!/editor/theme/Solarized%20(dark) i think this color is fine
22029|+1
22030|"What we plan to do:  We will extend the concept of system variables with a mechanism to trigger commands. This makes it possible to add something like ${action.PickProcess} to a launch configuration, e.g.:  ``` json        {             ""name"": "".NET Core Attach"",             ""type"": ""coreclr"",             ""request"": ""attach"",             ""processName"": ""${action.PickProcess}""         } ```  Starting a debug session with this launch config will run the 'PickProcess' command where the user can select a process. The result is a string that becomes the value of the variable. Cancelling the command will cancel the launch of the debug session.   The implementation of the PickProcess command will live in the debugger extension and most likely is  based on the QuickPick UI. But an extension is free to use whatever UI is available for an extension.   The package.json of the debugger extension will contribute a mapping between the system variable (‘PickProcess’) and the command implemented by the extension, e.g. something like:  ``` json ""variables"": {     ""PickProcess"": ""extension.pickProcess"" } ```  At a later point we can decide to provide a default picker action in VS Core and the debugger extensions are free to remove their implementations.  /cc @isidorn @chrisdias"
22031|"@niceb5y  Please, is it possible to add ENU/KOR screenshot with mentioned string ""Later"" ?"
22032|@aeschli   Yeah this branch has got messed up.. Looks like I did a sync and it merged all from master.. I created a new branch sandy/css-variables and made a new pull request.. I will delete this branch and please do review in the new one..  Sorry for inconvenience
22033|By analyzing the blame information on this pull request, we identified @alexandrudima and @egamma to be potential reviewers
22034|Hi **@sandy081**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Sandeep Somavarapu). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
22035|By analyzing the blame information on this pull request, we identified @egamma and @bpasero to be potential reviewers
22036|Hi **@fusion809**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
22037|**@fusion809**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
22038|"@lukaschal  <img width=""1099"" alt=""2016-05-17 3 11 21"" src=""https://cloud.githubusercontent.com/assets/1621389/15424691/026d6c2c-1ebf-11e6-80b3-700d2a1b2ef5.png"">"
22039|@believe0815 please report against https://github.com/atom/electron
22040|I will close this one as upstream. The fix has to come from TS team and is target for 2.0 TS release.
22041|+1 Have same problem.  VScode Version 1.1.1 (1.1.1) MacOS X El Capitan  ![screen shot 2016-05-20 at 2 59 21 pm](https://cloud.githubusercontent.com/assets/8107129/15428400/784d4c2e-1e9b-11e6-99cc-fc31fb4b2332.png)
22042|A new marker story will be implemented in June.
22043|@hbenl so far we have identified two use cases for the StoppedEvent: - if `allThreadsStopped` is false (or if this attribute is missing) the thread with id `threadId` has stopped and all other threads continue to run. - if `allThreadsStopped` is true all threads have stopped and the thread with id `threadId` is the one in 'focus', that is the UI will auto expand it.  Yes, in the second case we could make `threadId` optional. In the 'all threads stopped' model there is no need to send StoppedEvents for every thread. Just set `allThreadsStopped` to true instead.
22044|Update on this, it looks like the link did finally work if I right-clicked while holding ctrl instead of left-click
22045|The problem is that some of the arguments are paths and under Mac / Linux they need to be entered with forward slashes. I could also look into converting these.
22046|This will be addressed with a new marker story that is targeted for June.
22047|@chrisdias & @egamma Is this something we should still investigate / work on. I haven't received an external request to have this in menu entries.
22048|I looked into it again and the behavior is actually expected. The task that got started is a watching task. We only show the spinner when the watching task is actually doing work. If it is waiting on file events we don't. There is no 'started task' indication in the status line.
22049|"I noticed that the project TypeScript-tmLanguage is not ""actively"" maintained, can I assume that TypeScript will be one of the first gainer on this set of API?"
22050|@waderyan is this extension still working? nothing shows up in my gutter even though it's installed
22051|@carlkenne that extension sadly does not show the blame status in the gutter, but in the status bar like this ![http://i.imgur.com/5cVA7y3.png](http://i.imgur.com/5cVA7y3.png)
22052|I also get the same issue but it is inconsistent (1.1.1 Windows)
22053|I think we are good here
22054|@jsloyer thanks for the PR, but as @bpasero pointed out we would not merge code in that is not being used. We use native select elements in these two places: https://github.com/Microsoft/vscode/blob/master/src/vs/base/browser/ui/actionbar/actionbar.ts#L724 https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/debugActionItems.ts#L18  I do not see the exact value of replacing the native select with the contributed one in this PR for our use case. Though if I am missing something feel free to adopt it in those places and then we can potentially merge this PR in.  I appologize for the slow response, somehow this fell under my radar. Setting to June milestone
22055|Hovering over should not announce anything since hover is not accessible anyways. Setting a breakpoint is an explicit user action, and to be concise we do not repeat to the user what action he just executed.  Closing this as designed.  @zersiax can correct me if I am wrong and I can change the behavior
22056|@dbaeumer I have come across an error. This is not the errors I normally get (they seems gone with the new typescript version).  The code that got an error on is :  `this.someAngularFactory.someFunction(param1, param2).then...`   Giving me this error on mouse hover : `Supplied parameters do not match any signature of call target`. However, the function name is perfectly fine, same for the parameters number and their types.  Restarting vscode fixed the issue ...  Here is the trace : http://pastebin.com/raw/dXqXQdsD
22057|@vsccarl let me see if I understand you correctly because I think there's two things you could be meaning here: - You want a verbal confirmation right after you have set the breakpoint, something like 'Breakpoint set'. There's two sides of this one, @isidorn thinks to not give any representation at the moment of setting a breakpoint. While I do understand the reasoning, I'm wondering if being concise is in this case impeding user experience. Setting a breakpoint is indeed an explicit action, but how easy is it to fat-finger? E.G., how easy is it to press either the wrong hotkey for it, or pressing it by mistake?  ALso, what happens visually when you set a breakpoint, will a visual indicator be shown briefly or will it appear to the left of the line, in the margin? - My questions have to do with the second thing you could be meaning, that is, somehow detecting  while going through the code where breakpoints have actually been set.  If there is no message about a breakpoint having been set, and there is no way to check if a line has a breakpoint on it, it is indeed an accessibility problem that a blind developer cannot see where breakpoints are in the code.  Checking for the existence of a breakpoint, if a breakpoint shows up as a visual icon next to a line, is part of a bigger issue that encompasses all visually apparent live information being unavailable to screenreaders. Think of squiggles for errors as well, for example. Would like to hear more thoughts on this one.
22058|"I think this is intentional. The message being posted is different. The one with the smiley face includes the phrase ""#HappyCoding "" -> 13 chars.  The one with the frown face doesn't include this hashtag.  Can you confirm this @joaomoreno?"
22059|Motivation: I would like to create an extension which would show image previews on the glyph margin  ![image](https://cloud.githubusercontent.com/assets/14231157/15433663/89eb4b12-1eb3-11e6-9f88-2fd1e93ccc64.png)  The only thing which prevents this is that there is no way to define the background size property. The proposed change should cover most of the practical use cases.
22060|@zersiax thanks a lot for the feedback!  When you set a breakpoint there is a visual indicator shown on the left of the line, in the margin. Due to the reasons you mentioned I am reopening this bug and we will announce once a user sets a breakpoint.  Currently a user can check the state of his breakpoints by navigating all the way to the breakpoint pane inside the debug viewlet - and he can navigate all the breakpoint items in the tree.  I agree that we should improve more on making the ux state accessible. Pinging @stevencl so he can read your comment.
22061|如果可以。。希望能中文回复。。不行的话。。。英文也可以。。。我可以慢慢查翻译。。
22062|I thought it would be something like that. I recommend creating a new issue to report visual indicators on a per-line basis to assistive technology. Ramifications of this would be huge, major accessibility improvement if we pull this off. Proposed flow (feel free to copy to separate issue): - use code for spawning visual indicator next to line for assistive technology logic to determine what lines to flag. Guessing medium difficulty. - Create short, descriptive strings  to indicate the function of the indicator. 'has breakpoint' ;has error' 'has warning', 'has monkey'...whatever other indicators exist within Code. I'd be the last person to know which ones exist ;) This isn't all that difficult, but don't make them longer than 2, maybe 3 words.  Now this is where it gets interesting, because there's a number of things we can do here. What comes to mind, from most favorable to least favorable. Please chip in if anyone has other ideas: - Append the string to the end of the line being read by the screenreader. I don't know if this is even possible since you are going to somehow have to track focus within the multiline edit field the code is in and do some ARIA magic to append the string to the end of what is being read, maybe through an invisible live region of some kind. - Play a short sound when a particular indicator is required. A click, a short blip or ding, not entire symphonies please. We are trying to stay productive here :) Again, not sure how technically feasible this is. My JS isn't that advanced yet ;) For this approach the short strings as I suggested above would not be required - Add a hotkey that cycles between the various visual indicators that are present, speak the type of indicator and add a third hotkey to query what for example the error contents are. Perhaps the hotkey for querying error messages is a universal concept to all these ideas, I don't know what the visual flow for this is. D you hover over the indicator and it pops up or is it more involved? The reason this is lower down the list is because we would lose the 'live' aspect. Ideally this is added in after idea 1 or 2 has already been implemented. - Modify the line's formatting and make clear on the accessibility documentation page that screenreaders need to be set to read formatting changes. A lot of users have these settings disabled, and for good reason because it can get quite spammy. Screenreaders can query a line or character's formatting with a hotkey but only do so if they know some useful info might be gleaned from this. This will of course affect sighted users as well though, this is therefore an 'if all else fails' solution.   What are your thoughts on all this? Implementing one of these solutions would fix this issue and a myriad of others,  while shooting Code's accessibility up into the stratosphere.
22063|Thanks a lot for feedback! For clearity , I have created a seperate issue #6583
22064|thanks @isidorn
22065|@jrieken I can take an unofficial stab at this. If that's alright, what would be an ideal package name?
22066|I suppose the correct writing should be   ``` filter: alpha(opacity=50); ```  Use `=` inside `alpha` rather than `:`.  Close it as won't fix IMHO.
22067|OK, I had missed the addition of the `allThreadsStopped` attribute. Thanks for clarifying.
22068|"Here's a smile Doc Feedback verbatim from 4/15/2016: ""You have to implement an interface menu item to change the locale settings, like this: File -> Preferences -> Display Settings as it done for ""User Settings"".""  I would use File > Preferences > Display Language for the menu item since ""Display Settings"" implies monitor settings on Windows."
22069|Just go an error I normally got when fetching from another branch on git. Seems like git operations screw up the TypeScript intellisense.  I just lost all my references to `angular` and other classes I use.  The only trace that it gives is :  `Sending request: quickinfo (568). Response expected: yes. Current queue length: 0` `Response received: quickinfo (568). Request took 2 ms. Success: false . Message: No content available.`
22070|Im still having the same problem the on a windows computer. Is there anyone else with this problem on a windows computer??
22071|@MLefebvreICO thanks a lot for the trace. The trace shows that the tsserver returns failed responses due to a length < 1 violation. Moving to TS team.
22072|I also opened https://github.com/Microsoft/TypeScript/issues/8716 to make tracing this more easy.
22073|This issue was moved to Microsoft/TypeScript#8717
22074|By analyzing the blame information on this pull request, we identified @joaomoreno and @bpasero to be potential reviewers
22075|so i wonder would it be possible to use keyboard shortcuts instead of snippets?
22076|Horizontal split would be nice for people who use portrait monitors.
22077|I just tried it out and that is the reason for the discrepancy. Thanks @eklavyamirani!
22078|Hi all, prefer :+1: reactions on the original issue comment as that helps us with prioritization.
22079|I think this is an old <=IE8 filter so I don't think we would want to tweak the grammar for that when it's long deprecated. https://developer.mozilla.org/en-US/docs/Web/CSS/opacity#Different_opacity_with_hover
22080|See https://github.com/Microsoft/vscode/pull/6588
22081|I am experiencing a similar issue, just the opposite...I can run: - `su root` -> `/opt/vsc/code` - `sudo /opt/svc/code` - `sudo -u non-root /opt/svc/code`  but I cannot simply run from any user,   ``` TypeError: Bad argument     at TypeError (native)     at ChildProcess.spawn (internal/child_process.js:278:26)     at Object.exports.spawn (child_process.js:379:9)     at /opt/visual-studio-code/resources/app/out/vs/workbench/electron-main/main.js:6:4539     at new __dirname.undefined.t.Class.derive._oncancel (/opt/visual-studio-code/resources/app/out/vs/workbench/electron-main/main.js:5:9667)     at Object.o [as getUnixUserEnvironment] (/opt/visual-studio-code/resources/app/out/vs/workbench/electron-main/main.js:6:4502)     at I (/opt/visual-studio-code/resources/app/out/vs/workbench/electron-main/main.js:10:15570)     at Object.<anonymous> (/opt/visual-studio-code/resources/app/out/vs/workbench/electron-main/main.js:10:16109)     at e._invokeFactory (/opt/visual-studio-code/resources/app/out/vs/loader.js:4:13697)     at e._complete (/opt/visual-studio-code/resources/app/out/vs/loader.js:4:14014) ```  ...but as I said, If I use sudo and specify a non-root user it works.
22082|"Windows only, works on linux using:  ``` bash ln -s /bin/bash /home/daimms/bash\ symlink ```  ``` json ""externalTerminal.linuxExec"": ""/home/daimms/bash symlink"" ```"
22083|"I'm curious on what you guys think the best way to handle this is. I spend most of my time in Ubuntu so running as root is not usually a thing I'm allowed to do (`su` is locked down on Ubuntu). The recent change was specifically targeting `sudo` only as previously it hung when launched.  Here's the current situation: - The code bin command enforces a `--user-data-dir` when `id -u` is `0`, see https://github.com/Microsoft/vscode/blob/master/resources/linux/bin/code.sh#L9 - This was done because when running as sudo, the current user data directory is stored within `~/.config` which has restrictive permissions:      ```   ❯ ls -la ~ | grep .config   drwx------  33 daimms daimms  4096 May 16 11:35 .config   ```      The need for this will go away post-https://github.com/Microsoft/vscode/pull/5570 where the --user-data-dir is specified automatically as a sibling to the regular user's data dir. - When running as root, do not attempt to open the welcome page. This is due to a bug in `xdg-open`, see https://github.com/Microsoft/vscode/commit/ad7e861dbb9127e919bc686da162b19cbb7e2391 (this may be fixed now https://github.com/electron/electron/issues/4916, created https://github.com/Microsoft/vscode/issues/6594 to follow up). - When in a sudo session of vscode, you can only open root-owned files. I'm sure you can get around this, I didn't invest enough time in this though since people should not be using sudo in general as it will mess up file perms which may be confusing to newer users.  It's a very bare-bones support situation at the moment, plus it focuses around running as sudo instead of root, which I don't think `id -u` differentiates between. So I believe the fixes I did may have made the situation worse when running as the root user instead of `sudo` on a non-root user.  Any input from the community would be greatly appreciated :smiley:"
22084|Seems to be a problem with the bin command, `code-alpha a\ b\ c` doesn't work but `/usr/share/code-alpha/code-alpha a\ b\ c` does.
22085|"Tested using:  ``` ./bin/code-oss ""a b c"" ./bin/code-oss a\ b\ c ./bin/code-oss --locale=ja-JP ""a b c"" ./bin/code-oss --locale=ja-JP a\ b\ c ./bin/code-oss --help a\ b\ c #opens help ./scripts/code-cli.sh a\ b\ c ./scripts/code-cli.sh --wait a\ b\ c # --locale doesn't seem to work on code-cli.sh ```  @weinand please verify when you get a chance"
22086|I can confirm this bug is present in VSC Version 1.1.1-insider.  I have a 15.4 inch display with a resolution of 2880 x 1800. As mentioned, all decorations (cursor position, selection highlights, etc.) in the overview ruler are blurry. VSC renders everything else crisp and perfect. Thanks.
22087|I have tried out building VSCode 1.1.1 with these changes on Linux and they work. So there's no obvious issues with this pull request.
22088|"@stevencl @bgashler1 actually ""Close All Editors"" would actually close every editor across all groups and not just within the group. I would say it is equally a destructive change of layout as ""Close All Editors in Group"" is as long as we do not have support for empty groups.  Honestly we did not prompt for closing editors and layouts before and people did not ask for it, I wonder why we would change this now?"
22089|@bgashler1 actually you are not seeing 2 preview editors, there is still just one. But we do not close the preview editor when it is being saved as another file, which is arguably the bug.
22090|Known issue, not sure scrollbars are going to happen unless we fork term.js.
22091|"It works now. It was a problem with an ""WideCap"" proxyfier app i had installed . Which made this and some other software (office) not work ."
22092|hi, @asednev  I also encountered  this problem. How do you solve？
22093|@lifetin sorry, but I don't understand your first problem because I cannot read your language. Please explain in English.  Your second problem: are you asking for 'tabs'?  Third problem: no, there is no way to hide the action bar.
22094|"@jeffyoung make sure that the ""postinstall"" script runs because it pulls in the correct version of the 'vscode' node module."
22095|This issue was moved to OmniSharp/omnisharp-vscode#361
22096|This issue was moved to OmniSharp/omnisharp-vscode#362
22097|@andysaini What exactly are you asking? Are you wanting to submit a PR?
22098|+1
22099|Hmmm, I was having some issues building it. But it's building fine now. I'll try and send a PR within a 5 or 6 days.
22100|> Some might would prefer all instances maximized  If I right-click on the taskbar icon and select `New Window` when I already have a maximized window open, the new window is not opened in a maximized state, which is really not helpful, as I then have to manually maximize it each time.
