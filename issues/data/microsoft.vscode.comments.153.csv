15201|Assigning @dbaeumer  to see if we do anything wrong here. It might be the TypeScript language server we use
15202|Doesn't seems like it. If it is linter, it would have prefix with `[eslint] ...`. Let me double check.
15203|As designed, this translations are coming from the debug adapter. Thus they are updated only once a debug session starts, since that is when the debug adapter is started. VSCode has no knowledge of these strings, so we can only update them when we start the debug adapter - thus the session starts.  There is nothing we can do here
15204|Argh... it is. `tslint` prefix with `[tslint]...` but `eslint` does not. The `eslint` for `atom` does prefix. Will file TWO issues there.   Sorry for the invalid issue.
15205|Currently OOF, will check this next week.
15206|This is coming in March. Duplicate of #2835.
15207|Extensions are installed in `%HOME%\.vscode\extensions`, not `%APPDATA%`.
15208|https://github.com/Microsoft/vscode-eslint/issues/58 https://github.com/Microsoft/vscode-eslint/issues/59
15209|Closing - answer has been provided.
15210|@egamma Yes, I upgraded to recent Version 0.10.11 and it is still there.  @jrieken  yes while viewing the diff editor. Just viewing file is fine. But when in diff mode editor gets stuck on Loading which I think is running git commands in background. PC freezes after few minutes.  @joaomoreno I assume delayer of 500 ms is functional because it doesn't freeze at first. But it still can fire 120 procs a minute and if each one lingers as more are added, your PC dies within minutes.  There should be a max of git processes spawned.
15211|Thanks for getting back to me
15212|Thanks for listening to my mumbo....to the wrong group! :rose:
15213|Seems like the editor could not be opened
15214|Thanks @f111fei
15215|For some language services the extra info is a second (and more expensive call) and the detail information isn't only loaded on the second Ctrl+Space but on focus (it shows more info). Since the backend cannot blindly fetch details for each and every item and since the backend doesn't know what item the UI will focus first it's not that easy.
15216|@sahas- Did the heap readings provide any interesting insights so far?
15217|Very strange. I tried your snippet in a 0.10.10 release, and all worked fine. Are you using a custom color theme? Also, can you open the Dev tooks (F1 -> Toggle Developper Tools), go to the console tab and see if there is anything special?
15218|@bpasero Any chance this is the leak-fix-issue you were talking about?
15219|@alexandrudima assigning to you that it doesn't get lost.  Doesn't the screen reader reads the sentence on focus change in the complete widget?
15220|There's a fix for this in the coming March release. The Dark/Light (Visual Studio) now show these keywords blue, Dark+/Light+ turquoise (color used for type references). (It's questionable if 'var' should be considered a type reference, but that's the decision of the C# grammar. To file an issue against the grammar go to https://github.com/atom/language-csharp)
15221|duplicate of #2037
15222|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/96
15223|Closing for now. You can try a March release preview at https://code.visualstudio.com/insiders
15224|Here is what I see on latest:  ![bug](https://cloud.githubusercontent.com/assets/1931590/14012363/993dfad2-f1a5-11e5-91d2-2bf1c76fce34.gif)  So it looks the that params hints come correctly from the tsserver however our highlighting is off since it doesn't know anything about ...  Moving to @joaomoreno who owns the widget.
15225|@jrieken My suggestion is simple. The suggestions should contain a boolean field if they have details or not.  The backend does not need to fetch details for each and every item, but say that it has such details. In many ASTs I suppose that would be an if stmt on the node?  If a backend really does not know then it should say it has details for all suggestions and then fail when asked for those details (as it works today).
15226|@johnliu2016
15227|It should win and it does win (tested on latest). But please note that if there is a running code then the command line arg is ignored due to the discussionin #4596.
15228|that's how it works. they never really know if there more data or not unless the provider doesn't offer the resolveDetails call - I can reflect that in the API
15229|@Treri For that there is a setting to remove trailing whitespace on save
15230|Looks like it, will verify.
15231|ported to loc
15232|@jrieken Yeah, I know this setting.  But Suppose we are editing a very simple markdown file. Two trailing space will make a new line(will create  a `<br />` tag). If we set Code to remove trailing space on save, the wanted trailing spaces will also be removed.
15233|Yes, fixed.
15234|<none> is shown in the debug viewlet configuration dropdown when there is no `launch.json` present
15235|"This change brings back the ""role"" attribute to undo, redo and selectAll. From my testing this is not causing any harm because it seems to me using the keybindings within the workbench never reaches the menu. However, when you are in dev tools or in the native file dialog and invoke the keybindings, the menu to the top quickly flashes blue and indicates the action is used from there. Suggest we run with this change for a sprint and watch out for regressions."
15236|@weinand can you please give this a try now, it should behave nicer. I tried it out and works for me. @joaomoreno can you quickly give this a review? I am just canceling all the promises, even the ones which finished - which works fine in practice. Just in the console I get a warning that my promises do not implement onCancel - not sure if it is mandatory that I implement this if I plan to cancel my promise
15237|It isn't just the highlighting, but the description text, too. I don't know if it boils down to the same feature. This this will be solved internally...?
15238|Since the translation will be correct after the next session start (and sessions are short lived anyway), we can live with that minor problem.
15239|"@isidorn do we have a better word than ""none""? It will be difficult for the translators to find good a translation without any additional context. What's about ""no launch config"" or ""create launch config""."
15240|"I can reproduce this. Debugging shows that the tsserver returns:  ""Error processing request. Cannot read property 'lineCount' of undefined""  VSCode when deleteing the file send a close request to the server. On recreating we send a open with an empty content and when pasting in the content a content change event.  Moving to TS."
15241|This issue was moved to Microsoft/TypeScript#7668
15242|@bill-mybiz good to hear that the issue is fixed in 1.8.9. And thanks a lot for your detailed reports and your patience with this.
15243|@weinand you need to put a comment into the localize call as you did for the node usage. The comment you have in the call will then be translated to the lci file referenced by @johnliu2016 in his last comment.
15244|> Error seems related to the shellshock bug, probably not that though since upgrading to the latest bash didn't change it (bash-4.3.42-3)  Yes, this new format of environment variables has been introduced due to ShellShock.  Before, it was  ``` name=() {…} ```  now it is  ``` BASH_FUNC_name()=() {…} ```  To see the difference, you would probably have to _downgrade_ to bash-4.3.24-1 or earlier.
15245|I have posted this text here: https://github.com/Microsoft/vscode/issues/101  It is also valid for this discussion. I would be glad to see @bpasero response.  I want this feature. End of discussion. Fuck your opinions @bpasero I don't care what you think is right and what not. The same is about tabs #224. You are trying to convince us that your solution is better. Once again fuck your solution. We all do stuff differently and nobody cares what you think. I'm using vscode just becasue of great support of typescript and angular2. Otherwise I hate it because it lacks features that normal editors have e.g SublimeText, Atom, Brackets
15246|@egamma I think we should reopen this and target for April. The makes sense comment was meant to 'Let's look into it together'. I still see the issue on my machine.
15247|> The env variables are added by the environment-modules package  `environment-modules` can be used for switching between several available implementations of the same/related interface/library; it is not used very frequently, but Fedora’s OpenMPI packages drag them in.  And `environment-modules` is required by `scl-utils` for [Software Collections](https://www.softwarecollections.org/en/), another, this time quite popular, way to install different incompatible versions of libraries and languages side by side.  (While these two packages are a likely reason why the functions are in the environment, as a matter of principle, anything can export a shell function. This would be nice to fix generically, I’m afraid I just don’t even know where to start looking.)
15248|> I’m afraid I just don’t even know where to start looking.  Is there a way to debug the build/test tasks, to see exactly the full environment and the exact commands being run for them, or perhaps even to override them with extra debugging code?
15249|The language selection dialog is currently only for the Setup wizard. The question is whether we should create a locale.json file based on this information. I opt to do so.  @chrisdias, @egamma  what is your opinion @joaomoreno would that be possible from the InnoSetup installer.
15250|This issue was moved to Microsoft/vscode-languageserver-node#29
15251|This should be done in the LanguageServerClient in deactivate.
15252|@squarerootfury we are currently working on this. For the meantime the only thing you can do is to open an issue here.   @johnliu2016 I assign this to you. Can you please feed the corrections back into the translation repository.
15253|@akamud we are working on the details to allow to contribute additional languages. We aren't there yet.
15254|@egamma what is your take on this?
15255|I mean I can change the sting so that the UI says Configure Language. The json file would still talk about locale.
15256|@lukefan6 since I don't know your files layout hard to tell. All I can say is that the filesGlob will not work with VSCode. It is not supported. And since you list files directly I suspect that your typings will not be included in the project defined by the tsconfig.json file.Can you share your project ?
15257|Works for me on latest (the next upcoming build)  ![bug](https://cloud.githubusercontent.com/assets/1931590/14015780/d0efb522-f1bb-11e5-9ce8-05aeff47835e.gif)
15258|@joelday the idea is actually to provide API and extension could use in the extension host. So you would not know that there is a server running.
15259|@aeschli thanks, now I understand.
15260|OK. The problem is your tsconfig.json files section. This only list three files which makes the ts project only consist of these three files and the files they reference using /// references. All other files are treated as separate virtual projects. So if you for example open users.ts it will be its own TS project. It will not be together with the project defined by your tsconfig.json file.   I would recommend to remove the files section and to exclude the dist folder instead.  The reason why your gulp is working is that you in that setup pipe all src/*.ts files into the compiler.
15261|Moving to @alexandrudima. This should be a general editor feature.
15262|Ah I see, thanks @dbaeumer
15263|related to #2990
15264|"Haven't seen that crash after but here is what I got this morning..  # garbage collected  {     ""pause"": 4160290,     ""pauseMS"": 4,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 38409232,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 28204288,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 38409232     },     ""after"": {         ""totalHeapSize"": 39441168,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 22390312,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 39441168     },     ""diff"": {         ""totalHeapSize"": 1031936,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -5813976,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1031936     } }  # garbage collected  {     ""pause"": 2464733,     ""pauseMS"": 2,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 35313424,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24027496,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 35313424     },     ""after"": {         ""totalHeapSize"": 37377296,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 22625192,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 37377296     },     ""diff"": {         ""totalHeapSize"": 2063872,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -1402304,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 2063872     } }  # garbage collected  {     ""pause"": 364196,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 29121808,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23460720,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 29121808     },     ""after"": {         ""totalHeapSize"": 29121808,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 22711232,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 29121808     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -749488,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 313037,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 26042640,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23674536,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 26042640     },     ""after"": {         ""totalHeapSize"": 27057936,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 22818336,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27057936     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -856200,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 330872,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 26042640,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23760072,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 26042640     },     ""after"": {         ""totalHeapSize"": 27057936,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 22915440,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27057936     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -844632,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 283504,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 26042640,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23856608,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 26042640     },     ""after"": {         ""totalHeapSize"": 27057936,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23011456,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27057936     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -845152,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 364659,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 26042640,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23972304,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 26042640     },     ""after"": {         ""totalHeapSize"": 27057936,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23127648,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27057936     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -844656,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 316962,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 26042640,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24074632,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 26042640     },     ""after"": {         ""totalHeapSize"": 27057936,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23232424,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27057936     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -842208,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 267838,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 29121808,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24177896,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 29121808     },     ""after"": {         ""totalHeapSize"": 29121808,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23338696,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 29121808     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -839200,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 421694,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 26042640,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24326144,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 26042640     },     ""after"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23475864,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""diff"": {         ""totalHeapSize"": 2047232,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -850280,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 2047232     } }  # garbage collected  {     ""pause"": 288071,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 27074576,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24423208,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27074576     },     ""after"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23577768,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -845440,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 259141,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 27074576,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24517920,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 27074576     },     ""after"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23672456,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""diff"": {         ""totalHeapSize"": 1015296,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -845464,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 1015296     } }  # garbage collected  {     ""pause"": 208300,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24627376,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""after"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23778640,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -848736,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 220852,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 24590544,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""after"": {         ""totalHeapSize"": 28089872,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23865624,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 28089872     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -724920,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 133848,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 30153744,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23865624,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 30153744     },     ""after"": {         ""totalHeapSize"": 30153744,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 23865624,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 30153744     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": 0,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 620660,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 30153744,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 25909848,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 30153744     },     ""after"": {         ""totalHeapSize"": 30153744,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 25908920,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 30153744     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -928,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 1187496,     ""pauseMS"": 1,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 34281488,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 25908920,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 34281488     },     ""after"": {         ""totalHeapSize"": 36345360,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 25889264,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 36345360     },     ""diff"": {         ""totalHeapSize"": 2063872,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -19656,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 2063872     } }  # garbage collected  {     ""pause"": 8468,     ""pauseMS"": 0,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 37463568,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 29140016,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 37463568     },     ""after"": {         ""totalHeapSize"": 37463568,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 29140016,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 37463568     },     ""diff"": {         ""totalHeapSize"": 0,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": 0,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": 0     } }  # garbage collected  {     ""pause"": 4323699,     ""pauseMS"": 4,     ""gctype"": 2,     ""before"": {         ""totalHeapSize"": 37463568,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 29898728,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 37463568     },     ""after"": {         ""totalHeapSize"": 35268112,         ""totalHeapExecutableSize"": 9437184,         ""usedHeapSize"": 21253376,         ""heapSizeLimit"": 1535115264,         ""totalPhysicalSize"": 35268112     },     ""diff"": {         ""totalHeapSize"": -2195456,         ""totalHeapExecutableSize"": 0,         ""usedHeapSize"": -8645352,         ""heapSizeLimit"": 0,         ""totalPhysicalSize"": -2195456     } }"
15265|Haha @PeterMtj , thanks for saying what we're all thinking :)  @bpasero seems to have a habit of voting down and discrediting any feature that he would not personally use himself and doesn't fit his personal workflow.  People use Microsoft software mostly because they have to , rarely because they like it, and when you see that Microsoft staff have attitudes like his it just goes to show why they can't design a decent piece of software like Sublime Text. I have tried my hardest with VS Code but I am very close to uninstalling it.
15266|@weinand it has to be short in order to fit in the select drop down nicely. create launch config is too wide for that. I am open for suggestions
15267|@dbaeumer this is currently not supported but I find the notation of 2-times $(basename) interesting. As a workaround for now I suggest you just use `**/*.js.map: true`
15268|I think this should be a separate setting because a font that works for code might not work for reading text.
15269|marking as duplicate of https://github.com/Microsoft/vscode/issues/4642
15270|looks like there is plenty of heap-space left
15271|@dbaeumer the alternative idea i had was to introduce something like $(filename) that is really the portion of a file without extension.
15272|Type is now case insensitive. Please note that a warning will still appear in user's `launch.json` if he enters a type with wrong casing. The reason for this is that our json schema currently do not support having a set of case insensitive values, only a set of values. I think this limitation is fine
15273|Actually not a regression. I think it is really time to review this with UX, the message list has never had any UX input and is literally unchanged for many years now.  ![image](https://cloud.githubusercontent.com/assets/900690/14018943/93f9c92c-f1d0-11e5-9db6-b90654db92bd.png)  Would love to get some ideas on it @stevencl @bgashler1
15274|Closing in favour of #4452
15275|I opt to keep Configure Language to avoid any problem with Change Language Mode. In addition Change is currently hot. Configuring the language will never be.
15276|Due to #3006 I was removing all ansi escape codes, now I am no longer doing that. There is a workaounrd for #3006 - use an external console so I decided to not remove any ansi escape code now
15277|Thanks, ported this issue to loc side for translation fix
15278|Yeah, don't remove them all, we support the colors at least!
15279|It was a stupid regression - maybe I should push this on top of 1.0 branch since it is a regression and it is a low risk fix? Or I just put candidate - and we discuss in standup?
15280|OK. I fixed this for March and pushed to release/1.0.0.   Discussed the naming with @egamma  and we agreed on 'Configure Language'
15281|@digeff I can not reproduce this, or I am just not fast enough. Can you reproduce with any repository. On what platform do you see this?  @weinand can you repro this?
15282|:+1:
15283|I think its not a 1.0 candidate since the user does not loose anything from the regression.
15284|I decided to just open an empty workspace in this case. The issue with showing 2 dirty files should be fixed by that.
15285|@isidorn we should prevent this independent from how quickly you press the F5 button.
15286|Yup we are protecting with our state changes - in theory somebody could be fater than the state changes thus being able to start two times. But I was unsuccessfull. Can you repro?
15287|@dbaeumer sorry, your test (at least on the screenshot) is wrong. You have a _previously_ saved file test.js. I was talking about unsaved buffers, before you save the content of a new tab.  Just repeat the exact repro steps I described.
15288|It doesn't count if I cannot reproduce this, since there will be always a faster computer where this can be reproduced. We should make our 'protection' robust against this. If the 'state change' comes too late, then we will have to introduce a 'state change pending' lock.
15289|After talking to @dbaeumer there is a limitation in the task framework for this.  We need API to provide functionality of running a watch task that would return a TaskSummary both in the success and error case.  Once @dbaeumer adds API I can use it to address this issue, until then -> backlog.
15290|Related: https://github.com/Microsoft/vscode/issues/4438  @EdDore did vscode crash or did you only see the extension host terminated message at the top?
15291|we have a state for that, it is 'initializing'. Previously I was setting this state too late (after running preLaunchTask), this state is now set asap.
15292|@isidorn that sounds like a great fix. But I will have a hard time verifying this ;-) I need the faster computer now!
15293|@weinand Actually, I think that the slower the computer, the easiest it'll be to reproduce this (because the human needs to be faster than your code changing the state). I originally reproduce this in a very slow Mac.
15294|@felixfbecker threads have underwent a refactoring, do you stil see this issue with the latest insiders build?
15295|@digeff of course, you are right. But getting a faster computer is always a good idea ;-)
15296|Stack:  ``` /vs/editor/contrib/codelens/browser/codelens.ts#298:17 (symbol)  /vs/editor/contrib/codelens/browser/codelens.ts#605:24 (computeIfNecessary)  /vs/editor/contrib/codelens/browser/codelens.ts#604:15 (forEach)  /vs/editor/contrib/codelens/browser/codelens.ts#427:8 (_onViewportChanged)  /vs/base/common/async.ts#566:8 (runner)  ```
15297|"Updating this ticket with the additional information that any semicolon within double quotes will do that. I found the issue also to be triggered by statements such as   sprintf(options, ""STYLE=Keramik;TITLE=%s;THEME=%s"", ...);"
15298|Thanks for the info @mtrmac. For simplicity I'm actually testing by swapping in `gnome-terminal` in place of `x-terminal-emulator` in the Open in Terminal context menu. This allows be to reproduce the issue using a very simple command.
15299|"What's the most puzzling about this issue is that it's only when `gnome-terminal` is launched via vscode, not regular node.  Environment of regular node process:  ``` [daniel@netfxsvc-2k3-1 scl]$ node > process.env { XDG_VTNR: '2',   XDG_SESSION_ID: '1',   HOSTNAME: 'netfxsvc-2k3-1.ntdev.corp.microsoft.com',   VTE_VERSION: '4201',   SHELL: '/bin/bash',   TERM: 'xterm-256color',   XDG_MENU_PREFIX: 'gnome-',   HISTSIZE: '1000',   GJS_DEBUG_OUTPUT: 'stderr',   WINDOWID: '37748742',   OLDPWD: '/usr/share',   GJS_DEBUG_TOPICS: 'JS ERROR;JS LOG',   QT_GRAPHICSSYSTEM_CHECKED: '1',   USER: 'daniel',   LS_COLORS: 'rs=0:di=38;5;33:ln=38;5;51:mh=00:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=01;05;37;41:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;40:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.m4a=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.oga=38;5;45:*.opus=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:',   SSH_AUTH_SOCK: '/run/user/1000/keyring/ssh',   SESSION_MANAGER: 'local/unix:@/tmp/.ICE-unix/1893,unix/unix:/tmp/.ICE-unix/1893',   USERNAME: 'daniel',   PATH: '/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/daniel/.local/bin:/home/daniel/bin',   MAIL: '/var/spool/mail/daniel',   DESKTOP_SESSION: 'gnome',   QT_IM_MODULE: 'ibus',   XDG_SESSION_TYPE: 'x11',   PWD: '/etc/scl',   XMODIFIERS: '@im=ibus',   LANG: 'en_US.UTF-8',   MODULEPATH: '/etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles',   GDM_LANG: 'en_US.UTF-8',   LOADEDMODULES: '',   GDMSESSION: 'gnome',   SSH_ASKPASS: '/usr/libexec/openssh/gnome-ssh-askpass',   HISTCONTROL: 'ignoredups',   HOME: '/home/daniel',   SHLVL: '2',   XDG_SEAT: 'seat0',   GNOME_DESKTOP_SESSION_ID: 'this-is-deprecated',   XDG_SESSION_DESKTOP: 'gnome',   LOGNAME: 'daniel',   DBUS_SESSION_BUS_ADDRESS: 'unix:abstract=/tmp/dbus-5nWQHFAb5q,guid=0a2092687f34712ad7997abd56f401ea',   MODULESHOME: '/usr/share/Modules',   LESSOPEN: '|/usr/bin/lesspipe.sh %s',   WINDOWPATH: '2',   XDG_RUNTIME_DIR: '/run/user/1000',   DISPLAY: ':1',   XDG_CURRENT_DESKTOP: 'GNOME',   XAUTHORITY: '/run/user/1000/gdm/Xauthority',   'BASH_FUNC_module()': '() {  eval `/usr/bin/modulecmd bash $*`\n}',   'BASH_FUNC_scl()': '() {  local CMD=$1;\n if [ ""$CMD"" = ""load"" -o ""$CMD"" = ""unload"" ]; then\n eval ""module $@"";\n else\n /usr/bin/scl ""$@"";\n fi\n}',   _: '/usr/bin/node' } ```  Environment in vscode, extracted using:  ``` js for (var key in process.env) {   console.log('key=""'+key+'"", val=""'+process.env[key]+'""'); } ```  ``` key=""XDG_VTNR"", val=""2"" key=""XDG_SESSION_ID"", val=""1"" key=""HOSTNAME"", val=""netfxsvc-2k3-1.ntdev.corp.microsoft.com"" key=""XDG_MENU_PREFIX"", val=""gnome-"" key=""TERM"", val=""xterm-256color"" key=""SHELL"", val=""/bin/bash"" key=""VTE_VERSION"", val=""4201"" key=""HISTSIZE"", val=""1000"" key=""GJS_DEBUG_OUTPUT"", val=""stderr"" key=""WINDOWID"", val=""37748742"" key=""GJS_DEBUG_TOPICS"", val=""JS ERROR;JS LOG"" key=""QT_GRAPHICSSYSTEM_CHECKED"", val=""1"" key=""USER"", val=""daniel"" key=""LS_COLORS"", val=""rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:"" key=""SSH_AUTH_SOCK"", val=""/run/user/1000/keyring/ssh"" key=""USERNAME"", val=""daniel"" key=""SESSION_MANAGER"", val=""local/unix:@/tmp/.ICE-unix/1893,unix/unix:/tmp/.ICE-unix/1893"" key=""DESKTOP_SESSION"", val=""gnome"" key=""MAIL"", val=""/var/spool/mail/daniel"" key=""PATH"", val=""/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/home/daniel/.local/bin:/home/daniel/bin:/home/daniel/.local/bin:/home/daniel/bin"" key=""QT_IM_MODULE"", val=""ibus"" key=""PWD"", val=""/usr/share/code-insiders"" key=""XDG_SESSION_TYPE"", val=""x11"" key=""XMODIFIERS"", val=""@im=ibus"" key=""LANG"", val=""en_US.UTF-8"" key=""GDM_LANG"", val=""en_US.UTF-8"" key=""MODULEPATH"", val=""/etc/scl/modulefiles:/etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles"" key=""LOADEDMODULES"", val="""" key=""GDMSESSION"", val=""gnome"" key=""HISTCONTROL"", val=""ignoredups"" key=""SSH_ASKPASS"", val=""/usr/libexec/openssh/gnome-ssh-askpass"" key=""XDG_SEAT"", val=""seat0"" key=""SHLVL"", val=""4"" key=""HOME"", val=""/home/daniel"" key=""GNOME_DESKTOP_SESSION_ID"", val=""this-is-deprecated"" key=""LOGNAME"", val=""daniel"" key=""XDG_SESSION_DESKTOP"", val=""gnome"" key=""DBUS_SESSION_BUS_ADDRESS"", val=""unix:abstract=/tmp/dbus-5nWQHFAb5q,guid=0a2092687f34712ad7997abd56f401ea"" key=""MODULESHOME"", val=""/usr/share/Modules"" key=""LESSOPEN"", val=""|/usr/bin/lesspipe.sh %s"" key=""WINDOWPATH"", val=""2"" key=""DISPLAY"", val="":1"" key=""XDG_RUNTIME_DIR"", val=""/run/user/1000"" key=""XDG_CURRENT_DESKTOP"", val=""GNOME"" key=""XAUTHORITY"", val=""/run/user/1000/gdm/Xauthority"" key=""BASH_FUNC_module()"", val=""() {  eval `/usr/bin/modulecmd bash $*`"" key=""BASH_FUNC_scl()"", val=""() {  local CMD=$1;"" key=""_"", val=""/usr/bin/env"" key=""GOOGLE_API_KEY"", val=""AIzaSyAQfxPJiounkhOjODEO5ZieffeBv6yft2Q"" key=""VSCODE_SHARED_IPC_HOOK"", val=""/tmp/Code - Insiders-bd3dae-shared.sock"" key=""CHROME_DESKTOP"", val=""Code - Insiders.desktop"" key=""VSCODE_NLS_CONFIG"", val=""{""locale"":""en-US"",""availableLanguages"":{}}"" key="" if [ ""$CMD"" "", val="" ""load"" -o ""$CMD"" = ""unload"" ]; then"" ```"
15300|"Looks like the env becomes corrupt somehow, the `BASH_FUNC_` keys only take the first lines:  ``` key=""BASH_FUNC_module()"", val=""() {  eval `/usr/bin/modulecmd bash $*`"" key=""BASH_FUNC_scl()"", val=""() {  local CMD=$1;"" ... key="" if [ ""$CMD"" "", val="" ""load"" -o ""$CMD"" = ""unload"" ]; then"" ```"
