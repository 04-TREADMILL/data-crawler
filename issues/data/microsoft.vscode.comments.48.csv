4701|Is there any extra debug information I can get/provide ? It works fine when I use sudo to run it
4702|The sorter we use don't honour the sortText-property...
4703|I have the same problem. Is there a workaround?
4704|I think I have the same thing.  Omnisharp keeps restarting for me whilst I'm typing (every time I add a new line) - it's very annoying as the lines jump up and down as references are found. Makes VSCode pretty much unusable.   Any suggestions on how to debug this?
4705|:+1: we should improve this, I will look into how to make this experience nicer
4706|"Can confirm the same issue with VSCode + C# + Unity. Omnisharp keeps restarting.  This is what I managed to get from embedded developer tools: https://gist.github.com/BazIdle/df424cb5cd2b065a2618  (""potentially unhandled rejected promise"" and ""Error: Canceled: Error: Canceled"" are looping on every Omnisharp restart)"
4707|@BazIdle good find. Which Unity version are you on?   Figured a downgrade might fix it. I've tried to find previous versions of vscode for OSX with no joy. Any ideas where to find one?   (The builds on the Wiki are auto-trashed by OSX claiming they're corrupted - so I have to look elsewhere...)
4708|@VinditCo 5.2.3f1  Are you, perchance, getting the same errors in Dev. Tools?
4709|Looks like it ! Like 91 of Workbench causing an issue   ``` Error: Canceled: Error: Canceled     at /Applications/Visual Studio Code.app/Contents/Resources/app/extensions/jrieken.vscode-omnisharp/out/omnisharpServer.js:235:31     at e.invoke (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:7:20571)     at e.fire (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:7:21929)     at e.cancel (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:7:22756)     at e.cancel (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:7:23366)     at DiagnosticsProvider._validateDocument (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/jrieken.vscode-omnisharp/out/features/diagnosticsProvider.js:129:44)     at DiagnosticsProvider._onDocumentAddOrChange (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/jrieken.vscode-omnisharp/out/features/diagnosticsProvider.js:101:18)     at DiagnosticsProvider.<anonymous> (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/jrieken.vscode-omnisharp/out/features/diagnosticsProvider.js:86:93)     at e.invoke (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:7:20571)     at e.fire (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:7:21929) ```
4710|After this and the disastrous Unity update I'm going to have a new rule: Don't download _any_ software updates pushed during December.   All devs are on the egg-nog...
4711|That stack trace is unhappy but won't be the cause of this issue. Can check your omnisharp log (Cmd+L, L) and paste it here?
4712|duplicate of #140
4713|behind gfw, desperately need socks proxy support in order to install extension!
4714|We have made the default intellisense provider less aggressive. There is currently no plan to extract that in it's own plugin but when that happens user can decided to install or not. Not planning further work on this.
4715|Sticking with my recommendation of using TSD for that. No work planned.
4716|@egamma Hey Erich, thanks for the reply. Unfortunately we're not using GitHub, we're using Stash. It would be great if VSCode has inbuilt support for viewing source control history, like Visual Studio, although I can appreciate it would be a large effort!  It also enables viewing history offline, which is great and leverages one of the main benefits of distributed source control.
4717|Should be done as outlined in my previous comment.
4718|I've actually moved to Windows 10, where this does not reproduce, so I'm happy to leave this closed.
4719|We should add an option to control is `open` does focus or not. Internally we already have that notion.
4720|## Here is my omnisharp log. I don't know why there are some strange characters. I'm not using any Chinese characters in the directory names and project names.  There are only Chinese characters in comments.  [INFO] Starting OmniSharp at 'd:\Work\AlienTown\AlienTown.sln'... [INFO] Started OmniSharp from 'c:\Program Files (x86)\Microsoft VS Code\resources\app\extensions\jrieken.vscode-omnisharp\bin\omnisharp.cmd' with process id 15484... [INFORMATION:OmniSharp.Startup] Omnisharp server running using stdio at location 'd:\Work\AlienTown' on host 4100. [INFORMATION:OmniSharp.Dnx.DnxPaths] Using runtime 'C:\Users\Luochong.dnx\runtimes\dnx-clr-win-x86.1.0.0-beta8'. [INFORMATION:OmniSharp.Dnx.DnxProjectSystem] Scanning 'd:\Work\AlienTown' for DNX projects [INFORMATION:OmniSharp.Dnx.DnxProjectSystem] No project.json based projects found [INFORMATION:OmniSharp.MSBuild.MSBuildProjectSystem] Detecting projects in 'd:\Work\AlienTown\AlienTown.sln'. [INFORMATION:OmniSharp.MSBuild.MSBuildProjectSystem] Loading project from 'd:\Work\AlienTown\Assembly-CSharp.csproj'. [INFORMATION:OmniSharp.MSBuild.MSBuildProjectSystem] Using toolset 2.0 for d:\Work\AlienTown\Assembly-CSharp.csproj [INFORMATION:OmniSharp.MSBuild.MSBuildProjectSystem] Loading project from 'd:\Work\AlienTown\Assembly-CSharp-Editor-firstpass.csproj'. [INFORMATION:OmniSharp.MSBuild.MSBuildProjectSystem] Using toolset 2.0 for d:\Work\AlienTown\Assembly-CSharp-Editor-firstpass.csproj [INFORMATION:OmniSharp.ScriptCs.ScriptCsProjectSystem] Detecting CSX files in 'd:\Work\AlienTown'. [INFORMATION:OmniSharp.ScriptCs.ScriptCsProjectSystem] Could not find any CSX files [INFORMATION:OmniSharp.Startup] Solution has finished loading [ERROR:Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware] An unhandled exception has occurred: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index System.ArgumentOutOfRangeException: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index    �� Microsoft.CodeAnalysis.Text.SourceText.LineInfo.get_Item(Int32 index)    �� Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(LinePosition position)    �� OmniSharp.Roslyn.CSharp.Services.Intellisense.IntellisenseService.<Handle>d__3.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<HandleSingleRequest>d__18.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<Process>d__16.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.EndpointMiddleware.<Invoke>d__7.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware.<Invoke>d__4.MoveNext() [INFORMATION:OmniSharp.Middleware.LoggingMiddleware] /autocomplete: 500 32ms [ERROR:Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware] An unhandled exception has occurred: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index System.ArgumentOutOfRangeException: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index    �� Microsoft.CodeAnalysis.Text.SourceText.LineInfo.get_Item(Int32 index)    �� Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(LinePosition position)    �� OmniSharp.Roslyn.CSharp.Services.Intellisense.IntellisenseService.<Handle>d__3.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<HandleSingleRequest>d__18.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<Process>d__16.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.EndpointMiddleware.<Invoke>d__7.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware.<Invoke>d__4.MoveNext() [INFORMATION:OmniSharp.Middleware.LoggingMiddleware] /autocomplete: 500 1ms [ERROR:Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware] An unhandled exception has occurred: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index System.ArgumentOutOfRangeException: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index    �� Microsoft.CodeAnalysis.Text.SourceText.LineInfo.get_Item(Int32 index)    �� Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(LinePosition position)    �� OmniSharp.Roslyn.CSharp.Services.Intellisense.IntellisenseService.<Handle>d__3.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<HandleSingleRequest>d__18.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<Process>d__16.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.EndpointMiddleware.<Invoke>d__7.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware.<Invoke>d__4.MoveNext() [INFORMATION:OmniSharp.Middleware.LoggingMiddleware] /autocomplete: 500 1ms [ERROR:Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware] An unhandled exception has occurred: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index System.ArgumentOutOfRangeException: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index    �� Microsoft.CodeAnalysis.Text.SourceText.LineInfo.get_Item(Int32 index)    �� Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(LinePosition position)    �� OmniSharp.Roslyn.CSharp.Services.Navigation.FindUsagesService.<Handle>d__2.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<HandleSingleRequest>d__18.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<Process>d__16.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.EndpointMiddleware.<Invoke>d__7.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware.<Invoke>d__4.MoveNext() [INFORMATION:OmniSharp.Middleware.LoggingMiddleware] /findusages: 500 28ms [ERROR:Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware] An unhandled exception has occurred: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index System.ArgumentOutOfRangeException: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ�� ������: index    �� Microsoft.CodeAnalysis.Text.SourceText.LineInfo.get_Item(Int32 index)    �� Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(LinePosition position)    �� OmniSharp.Roslyn.CSharp.Services.Intellisense.IntellisenseService.<Handle>d__3.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<HandleSingleRequest>d__18.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.Endpoint.EndpointHandler`2.<Process>d__16.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� OmniSharp.Middleware.EndpointMiddleware.<Invoke>d__7.MoveNext() --- �����쳣����һλ���ж�ջ���ٵ�ĩβ ---    �� System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    �� System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    �� Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware.<Invoke>d__4.MoveNext() [INFORMATION:OmniSharp.Middleware.LoggingMiddleware] /autocomplete: 500 1ms [ERROR:Microsoft.AspNet.Diagnostics.ErrorHandlerMiddleware] An unhandled exception has occurred: ָ���Ĳ����ѳ�����Чֵ�ķ�Χ��
4721|@jrieken here you go: https://gist.github.com/BazIdle/c1aae81f1fc6d6e0122d (I copied only the error)
4722|This seems to be an issue with omnisharp. Moving there and see what we can do
4723|This issue was moved to OmniSharp/omnisharp-roslyn#371
4724|@SteveLasker, @PeterJausovec Is it that you guys want to contribute a language service for docker files or do you want to add specific features for certain docker files - those that match a name pattern? Can you provide some samples, like `filename` -> [feature set] etc?
4725|related to #272. Idea goes like this: 1. extension creates a virtual document with Uri & content 2. have command to _preview_ html/md from Uri
4726|"Idea is to allow to contribute content (?) provider, like so  ``` interface TextDocumentContentProvider {   open(uri:Uri):Thenable<string|Buffer>;   close(uri:Uri):Thenable<any>; }  registerTextDocumentProvider(scheme | pattern, provider); ```"
4727|"@igorvaschuk I've installed MEAN and created a first app with ""mean init yourNewApp"". Since I'm unfamiliar with MEAN could you please guide me how to create an app that lives in ./bin/www so that I can reproduce the problem.  BTW, I could not reproduce the attach problem with an express app."
4728|"Same her. As of 0.10.5 ElectronHelper misbehaves and eats up all of my cpu cycles. Happens on a small Ember project with a fairly big nodes_module directory. node_module and bower_components are already excluded from search. Is there a way to turn back to 0.10.3 without building it by yourself? I am running on  OS X 10.11.2.  Update: ""files.ignore"" does not help. Looks like ElectronHelper is trying to allocate all the memory it can get! Once its done eating up all memory it crashes. Incompatibility to Node 5.2.0?  brew upgrade node (to 5.3.0) does not help either...  <snip> Process:               Electron Helper [1700] Path:                  /Applications/Visual Studio Code.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper Identifier:            Electron Helper Version:               0 Code Type:             X86-64 (Native) Parent Process:        Electron Helper [1696] Responsible:           Electron Helper [1700] User ID:               501  Date/Time:             2015-12-21 15:18:30.508 +0100 OS Version:            Mac OS X 10.11.2 (15C50) Report Version:        11 Anonymous UUID:        41A4E3F5-2072-E603-8E66-FF147EECEDD3  Time Awake Since Boot: 7100 seconds  System Integrity Protection: disabled  Crashed Thread:        0  Dispatch queue: com.apple.main-thread  Exception Type:        EXC_CRASH (SIGABRT) Exception Codes:       0x0000000000000000, 0x0000000000000000 Exception Note:        EXC_CORPSE_NOTIFY  Application Specific Information: abort() called  Thread 0 Crashed:: Dispatch queue: com.apple.main-thread 0   libsystem_kernel.dylib          0x00007fff8f973002 __pthread_kill + 10 1   libsystem_pthread.dylib         0x00007fff90caf5c5 pthread_kill + 90 2   libsystem_c.dylib               0x00007fff869d16e7 abort + 129 3   libnode.dylib                   0x00000001049b2189 0x1049a4000 + 57737 4   libnode.dylib                   0x0000000104cf2d12 v8::internal::V8::FatalProcessOutOfMemory(char const_, bool) + 594 5   libnode.dylib                   0x0000000104e8c788 v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationSpace) + 408 6   libnode.dylib                   0x00000001050de89d v8::internal::Runtime_AllocateInTargetSpace(int, v8::internal::Object__, v8::internal::Isolate_) + 109 7   ???                             0x000016c575e06355 0 + 25037342008149  </snip>"
4729|I saw it. Works a lot better now and is more helpful. Thanks for looking into this.
4730|Open would require a uri? Does that mean I'd need to save the text locally first?
4731|Agreed.  This is very annoying.  Would be nice if find next just went to the next location and let you keep typing in the editor.
4732|same here. OSX 10.11.2 , vs code 0.10.5
4733|Really happy to see this feature made it in! Thanks!
4734|My OS is Windows 8.1 and I create the file with VSCode. I forgot to mention that my workingdirectory is a samba network share mounted as a network drive. When I create a file on my harddrive, it shows up directy in Code.
4735|no, it's more to allow to define your own _space_ using a scheme, like so `myextension://project1/path/to/fake/resource` would be a valid Uri and it would be up to you to resolve that somehow, like deriving info from a dll-file or generated markup.
4736|"Same here @msiniscalchi on Ubuntu 14.04. I can't follow instructions to configure. There is no ""Configure Task Runner"" and no ""task"", just nothing related to tasks."
4737|Ok... I kinda get it. :) I'd love to test this when possible. Let me know.
4738|"Can you attach a screenshot of what you see. Here is what I see:  <img width=""623"" alt=""screen shot 2015-12-22 at 17 53 59"" src=""https://cloud.githubusercontent.com/assets/172399/11960870/1aca0920-a8d5-11e5-9417-963c32e97f94.png"">  Is there any message in the console of the developer tools Help>Toggle Developer Tools>Console."
4739|Valid points CC @chrisdias
4740|I toggled the console too. I would love to see this fixed. Thanks! :octocat:  ![screenshot from 2015-12-22 21 05 35](https://cloud.githubusercontent.com/assets/5410669/11961097/e1e91cb6-a8ef-11e5-804c-6c6dc13130e6.png)
4741|Do we need to update the yo code generator as well?
4742|Yes, I will update it.
4743|Still repros for me on vscode 0.10.5, Ubuntu 12.04
4744|It now works for me! I did a clean reinstall again and made a symlink too and now it works. Don't know what was going wrong. I have the application folder on my desktop. Here's a screenshot too.  ![screenshot from 2015-12-22 21 22 08](https://cloud.githubusercontent.com/assets/5410669/11961494/63e0c988-a8f2-11e5-98db-c912fdf375ae.png)
4745|CC @jrieken   Glad we found the limitation, I was about to update the docs and describe that extensions can use async/await...   This doesn't help immediately, but TS 2.0 will support `async/await support for ES5/ES3` see the [roadmap](https://github.com/Microsoft/TypeScript/wiki/Roadmap).
4746|All yo code generator templates use `${execPath}` for their program attributes, so no updates are needed.
4747|@bpasero thanks for assigning! :smile: good point, the extensions shouldn't crash the renderer. I tried to repro again and watch the memory in task manager but can't seem to repro anymore.
4748|"For me (Windows 10 Enterprise), if I do this:  ``` C:\temp>set HTTPS_PROXY=http://fw1.bes.gbes:8080/  C:\temp>""C:\Program Files (x86)\Microsoft VS Code\code.exe"" ```  I get this error on the console:  ``` { [Error: getaddrinfo ENOTFOUND fw1.bes.gbes:8080 fw1.bes.gbes:8080:8080]   code: 'ENOTFOUND',   errno: 'ENOTFOUND',   syscall: 'getaddrinfo',   hostname: 'fw1.bes.gbes:8080',   host: 'fw1.bes.gbes:8080',   port: 8080 } undefined ```  which must be from the ""check for updates"".  I am now able browse the extension list and look for outdated extensions, but I can't update them: `getaddrinfo ENOTFOUND fw1.bes.gbes:8080 fw1.bes.gbes:8080:8080`  And I mean **now** because, later, when I'm at home, there will be another set of problems beacuse I don't have that proxy."
4749|Hi **@Tyriar**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
4750|This repros on Ubuntu 12.04 in both the find in file (<kbd>ctrl</kbd>+<kbd>f</kbd>) and search (<kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>f</kbd>) dialogs.
4751|Can't repro with <kbd>ctrl</kbd>+<kbd>f</kbd>, I think you mean <kbd>ctrl</kbd>+<kbd>h</kbd> for find and replace.  The tab order seems screwed up:  **Case 1:** 1. <kbd>ctrl</kbd>+<kbd>h</kbd> focus search term 2. <kbd>tab</kbd> focus replace textbox 3. <kbd>shift</kbd>+<kbd>tab</kbd> **focus close dialog button, expected to focus search term**  **Case 2:** 1. <kbd>ctrl</kbd>+<kbd>h</kbd> focus search term 2. <kbd>tab</kbd> focus replace textbox 3. <kbd>tab</kbd> focus match case 4. <kbd>shift</kbd>+<kbd>tab</kbd> **focus search term, expected to focus replace textbox**
4752|Hi **@markrendle**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
4753|**@markrendle**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
4754|@bpasero yes that would be better, but it still seems weird that you have to do a search before fuzzy matching happens
4755|This also leads to interesting results with 'Replace':  ![replace1000](https://cloud.githubusercontent.com/assets/5943573/11964775/bdb1fb42-a8a4-11e5-98cb-8901cd420c5b.gif)
4756|@xeoneux I agree, this should be on the core editor.
4757|Ok, increasing `fs.inotify.max_user_watches` helps. But very strange that Atom which based on Electron too not has such problem.
4758|Wonder if it's worth mentioning that you _can_ use it, but you need to compile to ES6 so check what ES6 features are used and their Node.js support.
4759|Yes, we should mention that you can use async/await, but with constraints.
4760|Related: https://github.com/Microsoft/vscode/issues/331, https://github.com/Microsoft/vscode/issues/1110
4761|I can't even place them anymore. Using Node v5.0. They worked fine when I could place them.
4762|They're also deprecated in the [W3C recommendation spec](http://www.w3.org/TR/2011/REC-css3-color-20110607/#system-colors-def). Makes perfect sense to remove them imo.
4763|@latkin I know this is unrelated but can u tell me the program you used to create the animated gif? I am searching for a good one on windows machines :)
4764|@mathiask88 I use [LICEcap](http://www.cockos.com/licecap/) on Windows.
4765|Good catch. I meant CTRL+H indeed.
4766|@bgse more [background](https://github.com/Microsoft/vscode/issues/60#issuecomment-161792005) on this topic.  CC @chrisdias
4767|Can you please provide reproducable steps. In what file are you trying to place them? Clicking on the margin does not show the breakpoint in the margin? Do you try to place them during a debug session or before starting to debug.  Can you place them by clicking F9?
4768|"> Maybe the themes should come in two variants per theme, one variant offering a relatively flat coloring, and a more colorful variant, but both using the same base color scheme.  If possible, this please.  Typescript colorization was great in 0.10.4, it's now again blend and dull in 0.10.5.  From @egamma comments I understand that this is intentional?  I'll use Monokai in the meantime (which I generally like), but please do consider having default themes as colorful as they were prior to 0.10.5, IMHO they strike great balance between ""too much"" and ""too little"" colors.  Thanks for this wonderful editor!"
4769|What exact keyboard shortcut validation are you refering to? For inserting squiggles into the editor I am not even sure our json schema can support that. @aeschli is it possible to provide validation rules based on the value of a string field.  I propose that instead of having smart inteli-sense and light bulbs, we just automatically update the content of the launch.json for the user and show an info message such that he is aware of what is going on.
4770|@alexandrudima thanks for the great pointers! Should we somehow reuse these utility methods? Or is it easier that I just mimic what you are already doing?
4771|@isidorn switch your OS X keyboard layout to Swiss German and open the keyboard shortcuts. Then scroll through the list and you will see that some bindings show adornments (he basically looks at the keyboard strings and validates that they can be produced by the current keyboard layout) . Alex demoed this in the standup last week. @aeschli is out of the loop because this is semantic validation which is not covered by the json schema. But since we need this anyway in the future we should support semantic validation and Alex has implemented it in a day or so...
4772|I am trying to place them in a router file (which has worked). Neither clicking or hovering in the margin shows the breakpoints. Both.  No.
4773|What is the extension of the file? Can you attach that file so we try to reproduce the issue on our side? What language mode do you see in the bottom right corner when you open that file?
4774|> I do not think tabs are a good way to show the list of open files unless you manage these things actively and close them.  Tab management is an unconscious and uninhibiting part of my development. VS-proper has small discreet tabs, which are unintrusive (vscode already has the filename taking up space where the tab would otherwise be). I do agree that runaway tab spam is a problem, it might be nice to innovate and address this, but I'd say that's lower priority than having tabs at all. VSCode needs to reach a minimum working state. Right now, I find it's getting very close, but I can't quite work productively yet. Starting with established patterns would probably get us working sooner.  It's worth keeping in mind that not everyone is a web developer, I find that patterns and workflow tends to be slightly different for different languages and styles of application. As a native developer, it is common to have a set of associated files visible; `cpp`+`h`, perhaps also an `inl`, and you typically don't work on only one file in isolation. I often have a disassembly view visible next to the code. My editor environment spans 2 monitors, with 4 files visible at any given time, and I would struggle to work in a more restrictive environment than that. I also miss being able to grab a tab and rip it out into a small floating window, which I often set to 'always on top', which is generally used a reference point, or something which I'm doing a lot of copy/pasing to/from.  Right now for example, I'm trying to refactor and simplify some legacy code; my current working set of files is... component.cpp, component.h, component.inl, componentimpl.cpp, componentimpl.h, icomponent.h. That's 6 files! And I can't escape from the occasional tweak of some other files on the periphery. I use ctrl-tab liberally when I'm working on that style of project (flipping between 2 files), but in this context/codebase, I simply can't work without tabs.  Refactoring and maintaining legacy code has a very different workflow from writing new code (which I imagine you guys are doing, and using mostly as a guideline for UX design).  My point here is; there's a modern desire to reinvent everything, and we have seen huge strides in UX design in recent years; vscode already presents some of these, but be careful and apply good judgement when deciding to change the way people have been working for decades. Many established designs are established because they are good and efficient, not because they are old and need updating to be more trendy :)  I would appreciate the opportunity to be part of these focus studies!
4775|me too.
4776|"@Tyriar ""Screen 2 Gif"" https://screentogif.codeplex.com/, it's awesome! I recommend the pre-release version, especially if you have DPI-scaled displays."
4777|Aha, it was set to Javascript React, which is strange because it was set to that the first time it worked. I'll need to get rid of that extension, apparently.
4778|> My point here is; there's a modern desire to reinvent everything, and we have seen huge strides in UX design in recent years; vscode already presents some of these, but be careful and apply good judgement when deciding to change the way people have been working for decades.  It's the case for me. Actually i can't work without tabs. I'm working with tabs system since years, and without them, i'm really lost. This is one of the reason i'm not using Code actually.  > Many established designs are established because they are good and efficient, not because they are old and need updating to be more trendy :)  :+1:
4779|Oh, and if I report stops for all threads, the debugger UI seems to select which one to display as current randomly, which can lead to confusion as to which thread has caused the stop. I've tried varying the order in which StoppedEvent's are sent, but that doesn't seem to change anything.
4780|"The changes provided via the December release are probably sufficient, with respect to my suggestions.  The only thing that remains odd to me - and, based on his earlier comment, apparently @prasannavl as well - is that the <kbd>alt</kbd>+<kbd>c</kbd>, <kbd>alt</kbd>+<kbd>r</kbd>, and <kbd>alt</kbd>+<kbd>w</kbd> additions aren't scoped to a more specific context, such as `""when"": ""editorFocus && findWidgetVisible""`.  But, if there's some good reason to leave it more open, it's probably not worth addressing.  In other words, don't leave this one open on my behalf."
4781|Yes, same as me, latest one has crashed. please provide previous version for downloading!!!!!!!
4782|the update hurts my work!!!!! crashed!!!
4783|@osser  @iiunknown  see https://github.com/Microsoft/vscode/issues/1501#issuecomment-166100445
4784|> Switching the input method to system default english(U.S.) really works  It works for me. :+1:
4785|do you solve it?
4786|Hi,  what more info do I need to provide? I'd like to do that, if  it's hlepful
4787|You can get more help at #1463 .
4788|Maybe related to #1463
4789|And maybe the API can support more preview types, for example, TeX?
4790|Thank you so much! :heart:
4791|"There is an entry in the settings for this ""files.exclude""."
4792|I believe this is still an issue. @Dynalon was referencing tsconfig but, the OP is for `async/await` in JS. which is still screaming.  Once this is fixed I can probably _actually_ use vscode! :+1:
4793|@jrieken  which API Commands ,can you tell me ,thank you!
4794|Ok, it is likely that file watching fails for network shares.
4795|Hm, I wonder if we prevent the native menu from showing up in these places. @alexandrudima fyi
4796|+1 for shift tab to move back to input field!
4797|@isidorn fyi
4798|:+1:
4799|Yup, closing.
4800|@khrome83 I cannot reproduce if I only use that comment, can you attach the full file?
