26801|@Brocco @tjsail33 could it be that it always happens with the same file you open? this could point to an issue with our tokenizer.
26802|Its more a problem with the c# extension as it used to work if I have multiple projects I don't want to manually have to define every project. especially when I am building the project like that is just stupid.  I should just say build and it builds my entire .net app. But for example if I only have one project with an entry point and I say run debugger it should automatically run the project with an entry point.
26803|"For some reason ""1"" becomes ""typeof number"" when we parse arguments."
26804|Yes, of course I can (and have.)   It is not an issue because it can't be worked around, it's an issue because the key mapping that was chosen as default is confusing and goes against the longstanding Windows UI guidelines.     You changed the title in a way that sort of misses the user surprise aspect:  _what I really expect when I press F1 is context-sensitive help._
26805|"@gregvanl thanks for your suggestion but imho it does not make sense to call ""editor"" => ""file"" because there are many editor types that are not about files (e.g. markdown preview, the new extensions management editor)."
26806|@gregvanl see https://github.com/Microsoft/vscode-docs/blob/vnext/release-notes/June_2016.md#preview-editors
26807|## Setup: - Version 1.3.0-insider - Commit 62f0272219dc72fda5246d330640e6af52a10cd0 - Date 2016-06-20T22:45:16.666Z - OS Version:Windows 7  ## Tests: 1. :+1: Absolute path without whitespace and slash (`/`) as delimiter      `![](C:/workspace/markdown/screenshots/pic.jpg)` 2. :-1: Absolute path with whitespace and slash (`/`) as delimiter      `![](C:/workspace/markdown/screenshots/pic one.jpg)` 3. :-1: Absolute path without whitespace and backslash (`\`) as delimiter      `![](C:\workspace\markdown\screenshots\pic.jpg)` 4. :-1: Absolute path with whitespace and backslash (`\`) as delimiter      `![](C:\workspace\markdown\screenshots\pic one.jpg)` 5. :+1: Path relative to workspace without whitespace and slash (`/`) as delimiter      `![](markdown/screenshots/pic.jpg)` 6. :-1: Path relative to workspace with whitespace and slash (`/`) as delimiter      `![](markdown/screenshots/pic one.jpg)` 7. :+1: Path relative to workspace without whitespace and backslash (`\`) as delimiter      `![](markdown\screenshots\pic.jpg)` 8. :-1: Path relative to workspace with whitespace and backslash (`\`) as delimiter      `![](markdown\screenshots\pic one.jpg)` 9. :-1: Path relative to markdown without whitespace and slash (`/`) as delimiter      `![](screenshots/pic.jpg)` 10. :-1: Path relative to markdown with whitespace and slash (`/`) as delimiter       `![](screenshots/pic one.jpg)` 11. :-1: Path relative to markdown without whitespace and backslash (`\`) as delimiter       `![](screenshots\pic.jpg)` 12. :-1: Path relative to markdown with whitespace and backslash (`\`) as delimiter       `![](screenshots\pic one.jpg)`
26808|Dup of #2399
26809|It took more than one year for them to implement this feature.......
26810|@wmjordan how much did you pay for VSCode?
26811|@mike-ward What is in your `%PATH%`?
26812|The error occurs in `fsevents`, which is an optional dependency. It is expected to fail in Windows, you can continue as if the error didn't occur.
26813|Alex is correct - if you really need to access a http(s) resource, I'd reckon to define an html page that embeds an iframe pointing to the http(s) page
26814|The cursor is set by the edit operation
26815|This issue was moved to OmniSharp/omnisharp-roslyn#589
26816|Big File Error...
26817|The problem is that we encode the window drive letter `file:///d%3A/` vs `file:///d:/`
26818|This was introduced by customizable line height, it makes selections look a bit wonky too.
26819|@glen-84 Yes, just add `sass-indented` to the activation list. The language definition dies not have to be present.
26820|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/167
26821|@iloveyo123u1 Did you configure your [proxy settings](https://code.visualstudio.com/docs/setup/setup-overview#_proxy-server-support)?
26822|@wllfoxe13 what exactly causes a Big File Error. Can you please provide additional steps.
26823|Right now I'm working on adding support for preferences.
26824|Duplicate of #780
26825|F1 > Configure Language.  Put en into that file. This makes VS Code run in an English locale even if your OS is German.
26826|cc @bpasero @alexandrudima a little help here? It seems the all the user's svgs are missing from the workbench.
26827|"As you figured out you need the chrome debug extension to debug vscode itself. Just launch  `scripts/code.sh --remote-debugging-port=9222` and attach to the port from the ""real vscode"" that has the chrome debug extension installed.  If for some reason you still need extensions in your `./scripts/code.sh` you can just install them to your ""real vscode"" and copy them over from vscode_app/resources/app/extensions/ to home/.vscode-oss-dev/extensions"
26828|Closing.
26829|Unfortunately there is no API around the git view, especially the message editor.
26830|It will soon have a dropdown just like the output pane and the left and right buttons will go away (the commands will remain though). See https://github.com/Microsoft/vscode/issues/7732 for a discussion on the long term solution which probably won't make it in for June.
26831|Please reopen if there are more details.
26832|These two commands are easy to add, wanna give it a try with a PR?
26833|Disabling auto fetch or setting up a credential manager solves it.
26834|The reason why I folded them is that if we allow running multiple tasks supporting multiple commands is almost a must. That we we plan to solve them together in one go.
26835|There are some limitations in this approach - the user can not have an unrelated launch.json file anywhere as it will screw up the debug configurations.  If we were to do this we should do the same for tasks.json - as it also lives in the .vscode folder and it should have the same charateristics.  Both task service and the debug service use the configuration service here  https://github.com/Microsoft/vscode/blob/master/src/vs/platform/configuration/common/configurationService.ts#L104 How to change the configuration service such that it would look for launch.json or tasks.json anywhere I am not completelty sure.  Due to the reasons above I am against this feature. @bpasero @dbaeumer opinions welcome
26836|You can disable git in the user settings, but you won't be able to hide the button.
26837|"@jrieken I assigned you because of the API request:   The ""...""-menu in the ""Changes View"" offers ""Stage Selected Lines"" and ""Switch to Inline View""/""Switch to Side by Side View"", which are (sadly) not listed in the API."
26838|Hm, it doesn't have much info... was the CPU spiking during that profile?
26839|Anyone wants to add a new command to the diff view menu bar can take a look at https://github.com/Microsoft/vscode/pull/6896 , it's as simple as that.
26840|@alexandrudima the problem is not that the extension host (which creates the fake stdin pipe/socket) doesn't exit. It does. But somehow the fake stdin doesn't closed hence the tsserver doesn't exit. What I was trying to say is: do we need a close call on the fake stdin/out when the extension host shuts down.
26841|I made a fix for this with #7730. The $ref is resolved against the actual location of the file ('file:///...), the id is not considered. I'm closing this assuming you just verified this with what on HEAD. If not, please reopen.
26842|This issue was moved to Microsoft/vscode-vsce#100
26843|We currently have no plans to support this.
26844|- https://github.com/creationix/nvm - https://github.com/coreybutler/nvm-windows
26845|Yes, very likely the SVG issue (https://code.visualstudio.com/docs/setup/windows#_next-steps). The activity bar shows its icons because they are inlined as data URIs.
26846|Themes can set the background colors, but in VSCode we ignore these as it conflicts with other background colors (selection, mark occurrence, find replace...) To make this work we would need to invest time in using transparency everywhere.
26847|Fix: implement <kbd>Ctrl P</kbd> and <kbd>Ctrl N</kbd> for Up and Down.
26848|Correct, it's been fixed in insider version.  Thanks
26849|Sorry. I should have tried harder. Its been done (just 7 hours before I made this issue) :rose:
26850|We do this so that users aren't surprised when the content of a file they are looking at is replaced with the content of a new file that they single click on. We think that we need to distinguish these files. Doing so is a common pattern - Sublime Text italicizes these files and Visual Studio positions them to the far right of the document well. Knowing that a file is open in a preview tab would then let the user know that if they want to keep it open they have to take another action (the keep open action).  One question is whether or not italics is the best way to communicate this to users. A challenge we have though is that we don't want this to require significant UI management or overhead. We do not want to distract the user from focusing on their content.
26851|@edumunoz thanks for the nice analysis.
26852|Same in:  VSCode Version: 1.2.1 OS Version: Windows 10
26853|As @bpasero has mentioned you can now enable tabs in our nightly insider builds.  If you have tried this and can spare 30 minutes to share your feedback, please sign up for a chat here: https://calendly.com/stevencl/vs-code-tabs/  Unfortunately I can only offer time slots during the day my time (I am in Edinburgh, Scotland) Monday and Tuesday next week.
26854|By analyzing the blame information on this pull request, we identified @egamma and @joaomoreno to be potential reviewers
26855|Bit confused here, zooming functions are mapped [Ctrl +] and [Ctrl -] out of the box for me, both on Linux and Windows10, german keyboard.  I'd agree that this is the natural order of things, though :-)
26856|I'm using VSCode as my primary code editor with Unity, works fine for me. I'm just using  https://github.com/dotBunny/VSCode  for Unity integration, and obviously the C# extension.
26857|@alexandrudima @jrieken What I have heard is `vscode.previewHtml` is not render animation and execute javascript am I wrong? If so then how can I preview angularjs page which heavily based on js?
26858|@mrmlnc Waiting for your PR.
26859|@aeschli Development of animation will often used.
26860|"Yes, `fsevents` is optional and should fail, but npm should not exit with error code 1 because of it, preventing further installs or postinstall hook from running.  I figured out the cause of this though, I tried this on another machine where `install` worked. When I updated npm it stopped working. The latest working npm version seems to be 3.8.9. npm@^3.9.0 seems to cause the `install` to fail with exit code 1.  But feel free to verify that this is not only an issue on my end.  I haven't figured out what npm change causes this, but it might be good to have a heads up in the ""Development workflow"" section, until this is sorted out."
26861|ping @Microsoft/vscode so interested people can join
26862|From me: - View Menu : UX Ideas https://github.com/Microsoft/vscode/issues/7700 - Cmd + number should focus editor at index and not focus groups or split https://github.com/Microsoft/vscode/issues/7647  We should also discuss progress on: - Find widget does not blend well when tabs enabled https://github.com/Microsoft/vscode/issues/7649 - Wrong input box color in dark theme https://github.com/Microsoft/vscode/issues/7648
26863|By analyzing the blame information on this pull request, we identified @egamma and @alexandrudima to be potential reviewers
26864|Hi **@csvn**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
26865|**@csvn**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
26866|Hi **@mrmlnc**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <span>We will now validate the agreement and then real humans will evaluate your PR.</span>  TTYL, MSBOT;
26867|@yisibl, Well, I tried #7926
26868|``` PATH= C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\CommonExtensions\Microsoft\TestWindow; C:\Program Files (x86)\MSBuild\14.0\bin; C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\; C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN; C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools; C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319; C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\VCPackages; C:\Program Files (x86)\Microsoft Visual Studio 14.0\Team Tools\Performance Tools; C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.6.1 Tools\; C:\WINDOWS\system32; C:\WINDOWS; C:\WINDOWS\System32\Wbem; C:\WINDOWS\System32\WindowsPowerShell\v1.0\; C:\Program Files (x86)\Gow\bin; C:\Program Files\Microsoft SQL Server\130\Tools\Binn\; C:\Program Files\nodejs\;C:\Users\mike\.dnx\bin; C:\Program Files\Microsoft DNX\Dnvm\; C:\Program Files\Git\cmd; C:\Users\mike\bin; C:\Python27; C:\Program Files (x86)\Microsoft VS Code; C:\Program Files (x86)\Microsoft VS Code\bin; C:\Python27\Scripts; C:\Program Files (x86)\wkhtmltopdf\bin; C:\Users\mike\AppData\Roaming\npm ```
26869|Thanks @joaomoreno. I was afraid that was the case (hence the question). Well, instead of an extension (unless someone can think of a different workflow), I guess I'll dive into trying to build vscode from source and look into at least implementing the template. Seems like it would be as straight-forward of a contribution as possible: hook the load event, load any existing message, if none, try loading the template file listed in `.gitconfig`. Worst case is I learn more about vscode's internals.
26870|Just happened. Opened up Activity Monitor, Memory tab. Code is taking 68.4MB of ram, which seems pretty small. For CPU, it is relatively small - like 0%.   I checked Electron Helper (that's related, right?) and for memory, I've got 3 processes, all small too (<35MB each).   Anything else I can check?
26871|@cfjedimaster well but if you checked for memory after the crash happened, it is likely that the memory is already freed. So it would be interesting if memory grows large while using Code (when it gets to 1 GB on a specific process, it will soon die with an out of memory crash).
26872|I can narrow it further down. Kaspersky blocks https traffic for apps that it doesn't know. It doesn't report that nor gives feedback to the user, it just cuts off the connection. If you disable the supervision on port :443 the extension connection works.
26873|Ok - I'll start checking every couple of hours or so.
26874|Btw - what process should I focus on, Code or Electron Helper?
26875|Closing, no action on upstream issue.
26876|All works, thanks, fine work!
26877|"- (...) the active tab is always revealed and stands out from others - verify tabs are looking good in all themes including high contrast theme  Not sure how to answer these questions, personally I'd say tabs would need to stand out a little more in all color themes.  While it does work as intended, I find myself squinting my eyes a lot trying to make out tab boundaries.  Active tab is easy due to the ""close"" button (high contrast theme makes it stand out perfectly btw), but I feel that color differences between active/inactive need to be a little more pronounced, especially in the dark color themes.  Since touching things is often easier than listening to endless ramblings, do this:  1) set color theme ""default light"" 2) open a few tabs 3) switch color theme to ""quiet light"" 4) compare how easy it is to make out different tabs  Imho, ""quiet light"" is just about perfect, subtle and good-looking but yet easily discernable, while ""default light"" has some issues where active/inactive is pretty much no difference in visual appearance except the close button."
26878|@agarwal-sandeep yes, the user would have to do this (which would be a pain). We are currently looking into how to fix this issue.
26879|@cfjedimaster ideally find a tool that is able to show you a detailed list of all processes below Code so that we find the one responsible.
26880|@bgse thanks for your feedback, let us know if there are more things you feel we can improve.  We do agree that the colors needs more tweaking, we have this captured in https://github.com/Microsoft/vscode/issues/7649 and https://github.com/Microsoft/vscode/issues/7648
26881|@weinand please tune the error message coming from the adapter so it nicely fits in the error box - looks decent thus far though
26882|Thanks @dbaeumer. FYI, I looked for this in the regular User Settings (`Cmd-,`) and the `Code > Preferences` menu. Maybe this setting should be exposed somewhere in the UI, so it's a bit more findable?
26883|"Some other things I noticed: - there's no ""Unstage Selected Lines"" for staged changes - ""Stage Selected Lines"" always uses the right side of the diff for selection, which makes deletions hard to handle: selecting the line before the hunk, stages the whole hunk, i.e., selecting single lines isn't possible. Also, selecting one change on the right, then another change on the left, I would expect the most recently selected line to be staged. Why wasn't this command moved into the context menu? Would make much more sense IMO."
26884|@agarwal-sandeep we are planning to enhance VS Code so that the `supportsStepBack` capability can be returned from the `launch` and `attach` requests.
26885|"@joaomoreno Yes, that profile was taken while the CPU was spiking.   I figured out the root cause of my issue. On my laptop there are two GPUs, an embedded one from Intel and a discrete one from Nvidia. There is a bios option called ""Hybrid Graphics"" mode that allows the system to dynamically use the embedded one when there are no high-demand GPU intensive programs running. Disabling this hybrid graphics mode has made VSC very responsive and fast. This seems to be something that has to do with the Electron framework possibly, I was experiencing the same slowdowns on Atom and do not have any problems with either VSC or Atom now after making this change."
26886|@weinand yes that's much better than expecting users to set the env variable. Thanx!
26887|I have noticed this problem as well. Opening two visual studio code instances by running `code --verbose` twice has resulted in the second instance opening/starting correctly.
26888|"I'm assuming that by ""Big File Error"" it was something related to the size of the ""sqlite3.c"" from SQLite's source code.  I tried opening it and indeed VSCode crashed soon after while highlighting the code."
26889|"@bpasero I realize there are special views on files (preview, diff) and synthetic files that show up in an editor window but I think the 95% case is file system files.  The term ""editor"" is already used to describe VS Code itself (""editor"" versus an IDE) and also the three editor windows (LEFT, CENTER, RIGHT).  I think using the term ""editor"" to also describe the items in the editor window is confusing and terms like ""OPEN FILES"", ""file groups"" and commands like CloseFile better matches the user's mental model."
26890|"@gregvanl can you summarize where exactly you would want to talk about ""files"" instead of ""editor""? we already have command Ids out there that talk about editors (that we cannot change) and we actually talk about editors since our initial release so I am not sure why this issue is suddenly an issue."
26891|@isidorn I've tuned the error message to be short.  One issue that the variables view shares with the explorer: if the error box is open the view can be scrolled with the mouse wheel which detaches the error box from the item being edited. Disabling mousewheel scrolling while the error box is open would be one way to fix this.
26892|Awesome, thanks for confirming :smiley:
26893|Thank you @joaomoreno ... As of today, disabling auto fetch appears to be the only option when using SSH. https://github.com/Microsoft/Git-Credential-Manager-for-Windows/issues/25
26894|@antoniomquadrosfilho can you try install the rpm again via command line? I find sometimes it doesn't work when updating via the GUI at least.
26895|@dbaeumer can you link where eslint is called into that triggers this error in the extension?
26896|Both are already fixed in v1.3.0, you can try it out in the [insiders build](https://code.visualstudio.com/insiders).
26897|Perfect. Thanks.
26898|"`cmd.exe` is spawned with the following code:  ``` ts     private spawnTerminal(spawner, configuration: ITerminalConfiguration, command: string, path?: string): TPromise<void> {         let terminalConfig = configuration.terminal.external;         let exec = terminalConfig.windowsExec || DEFAULT_TERMINAL_WINDOWS;         // The '""""' argument is the window title. Without this, exec doesn't work when the path         // contains spaces         let cmdArgs = ['/c', 'start', '/wait', '""""', exec];          return new TPromise<void>((c, e) => {             let env = path ? { cwd: path } : void 0;             let child = spawner.spawn(command, cmdArgs, env);             child.on('error', e);             child.on('exit', () => c(null));         });     } ```  Where `command` is `%COMSPEC%` if it's defined, otherwise `cmd.exe`. So this is the command that would be used:  ``` %COMSPEC% /c start /wait """" cmd ```  You could try using the 64-bit cmd and see if that fixes your problem:  ``` ""terminal.external.windowsExec"": ""C:\Windows\SysWOW64\cmd.exe"" ```"
26899|@dilijev apparently it is [as easy as running `os.release()`](http://stackoverflow.com/a/14989382/1156119) to get this. I didn't realize, I'll add this now, thanks :smiley:
26900|Thanks for the quick fix!  On Mon, Jun 20, 2016 at 6:30 PM Andre Weinand notifications@github.com wrote:  > @JonathanMEdwards https://github.com/JonathanMEdwards fix will be > available in next Insider build >  > — > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub > https://github.com/Microsoft/vscode/issues/7836#issuecomment-227289685, > or mute the thread > https://github.com/notifications/unsubscribe/ACIi7eM3HyzFN1kONLav73hUjjBrSZ_4ks5qNxShgaJpZM4I4vL0 > .
