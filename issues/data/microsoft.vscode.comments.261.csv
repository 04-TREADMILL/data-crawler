26001|I think this is typescript code.  @dbaeumer Not sure if this has to go to Typescript guys or we own the decorations. So assigning to you.  Thanks
26002|@M-Zuber May I know for which node module you are running npm install command? Are you using the terminal inside code?  Thanks
26003|@yisibl I am not sure I understood the reported problem correctly, can you please let me know - what and where is the problem and - how to reproduce it  If it is a feature request, please provide a detailed description of where and what the feature is about.  Thanks
26004|+1 This would be especially helpful when you're trying to import / require from a spec outside of the system source tree; ie when I have the folders src/ and test/ where test/\* mirrors source/\* like:  ``` src  /folder   /file.ts test  /folder   /file.spec.ts ```  Not being able to see both paths when I have the files side-by-side makes the import with all the required preceding ../'s a mission )':
26005|@foxundermoon first line displays fine for me, any tips on reproducing?  ![image](https://cloud.githubusercontent.com/assets/2193314/16073349/586156e0-329a-11e6-9674-0e572012fa5b.png)  This is the file:  ![image](https://cloud.githubusercontent.com/assets/2193314/16073366/67838724-329a-11e6-942a-1924598c4ad3.png)
26006|The terminal is the one inside code.  I've seen output like this for any command I've run, but the example above was with `npm i -g tslint`
26007|Duplicate of #7527
26008|@sandy081 Sorry, this is a feature request.  I mean, add a preview of the picture feature. Like Chrome DevTools. The details are as above.
26009|@M-Zuber Thanks for the information
26010|"This should work by adding this to your settings.json:  ``` json {     ""terminal.integrated.shell.windows"": ""C:\\Windows\\sysnative\\bash.exe"" } ```"
26011|"Very interesting... OK now jump to Terminal in OS X and run:  ``` node -p 'JSON.stringify(""hello world"")' | node -e 'process.stdin.setEncoding(""utf8""); process.stdin.on(""data"", data => console.log(JSON.parse(data)))' ```  And also  ``` node -p 'JSON.stringify(""hello world"")' | $SHELL -ilc ""node -e 'process.stdin.setEncoding(\""utf8\""); process.stdin.on(\""data\"", data => console.log(JSON.parse(data)))'"" ```  Both should return `hello world`. My theory is that maybe your system will fail to run the second snippet... let's see."
26012|I added them back to editor.main.ts, so they show up again in the standalone editor
26013|first code returns:  ``` hello world ```  second code returns:  ``` hello world Saving session...completed. ```
26014|Fixed in insiders with the adoption of xterm.js  ![image](https://cloud.githubusercontent.com/assets/2193314/16073888/dc76b1ee-329c-11e6-9637-0760bf0856b1.png)
26015|With PR #7656 we will introduce these class names: `vscode-light`, `vscode-dark`, and `vscode-high-contrast`. Depending on the theme one of them is set on the document body.
26016|@jrieken that's perfect! :+1:
26017|"Hm... Let's maybe try another approach...  Back in the Developer Tools, try this:  ``` es6 const electron = ""/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron""; const cp = require('child_process'); const env = Object.assign({}, process.env, {     ATOM_SHELL_INTERNAL_RUN_AS_NODE: '1',     ELECTRON_NO_ATTACH_CONSOLE: '1' }); const command = `'${electron}' -p 'JSON.stringify(process.env)'`; const result = cp.spawnSync(process.env.SHELL, ['-ilc', command], {     detached: true,     stdio: ['ignore', 'pipe', process.stderr],     env });  console.log(result.stdout.slice(0, 10)); ```  It should show us the exact bytes that are in the beginning of the result, which should lead us to finding out where they come from."
26018|We will merge the PR very soon.
26019|I cannot ping marketplace.visualstudio.com I get a timeout there, I'm not sure if ICMP is active on the other side. tracert hops near the destination but cannot reach it if I look at the IP ranges. After Hop  23   137 ms   136 ms   133 ms  ae86-0.sn2-96cb-1b.ntwk.msn.net [104.44.9.79] it does not continue. The rest I can confirm.
26020|the result is  ``` [27, 40, 66, 27, 91, 109, 123, 34, 77, 65] ```
26021|Great catch.
26022|Not sure if HEAD is needed: - just occupies space - caps lock -> unnecessery draws attention - I think it will be obvious to users if you just show lalalal.txt <-> lalalal.txt
26023|"[Et voilá](http://stackoverflow.com/questions/21335675/strange-bash-behaviour). The offending bytes appear to be `1b 28 42 1b 5b 6d` which appear to be two terminal escape sequences: - [`1b 28 42` seems related to Kanji](https://ja.wikipedia.org/wiki/%E6%BC%A2%E5%AD%97%E3%82%B7%E3%83%95%E3%83%88%E3%82%B3%E3%83%BC%E3%83%89) - [`1b 5b 6d` seems related to graphic rendition](http://www2.gar.no/glinkj/help/cmds/ansa.htm)  The fix here would be to strip the JSON from any escape sequences...  Does this make it work?  ``` es6 const electron = ""/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron""; const cp = require('child_process'); const env = Object.assign({}, process.env, {     ATOM_SHELL_INTERNAL_RUN_AS_NODE: '1',     ELECTRON_NO_ATTACH_CONSOLE: '1' }); const command = `'${electron}' -p 'JSON.stringify(process.env)'`; const result = cp.spawnSync(process.env.SHELL, ['-ilc', command], {     detached: true,     stdio: ['ignore', 'pipe', process.stderr],     env,     encoding: 'utf8' }); const strip = s => s.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '');  try {     console.log(JSON.parse(strip(result.stdout))); } catch (e) {     console.log(e); } ```"
26024|Yes, `timeout` makes sense, I believe ICMP is down for it. But it does resolve to `191.238.172.191` correct? It there anyway you could run a network analysis tool like Wireshark in both the insider and stable cases so we figure out what the difference it?
26025|We have now added a title area in the complex variable hover - makes the whole thing look nicer and shows the missing value in your case. Check it out and let us know what you think
26026|yup, it works. so this is the problem ?
26027|Yeah man, let's push a fix! 👍   Thanks a lot for your help on this, we really appreciate it!
26028|yes, it is not resolved. Anything special I should be looking for?
26029|thanks a lot :)
26030|This is the stable version ![vscode stable ext install](https://cloud.githubusercontent.com/assets/8189808/16075747/6ad206a2-32f0-11e6-8ceb-143e7e9978ef.png)  This is the insider version ![vscode insider ext install](https://cloud.githubusercontent.com/assets/8189808/16075685/390453d2-32f0-11e6-828a-14adf4b0e6fb.png)
26031|It looks pretty much like a certificate issue
26032|I leave that up to @joaomoreno if he has other ideas how to represent this:  ![image](https://cloud.githubusercontent.com/assets/900690/16076061/df564c8a-32f1-11e6-98c2-2bf44a127836.png)
26033|Let's just keep it open until we push a fix. 😉   And no! Thank **you**!
26034|Since both are accessing the same URL... this is sounding more and more strange.  I apologise for asking once again, but can you just triple check that you don't have any proxy settings in your stable, especially the `http.proxyStrictSSL`? Make sure you check your workspace settings too, in case you have a workspace open.  Any chance you can export those logs, so I can open them in Wireshark and take a closer look?
26035|Wow!! that was a :fire: quick fix!  Thank you!!
26036|"I have saved the logs but I don't want to put them up here of course. both have the same configuration  //-------- HTTP configuration --------  ``` // The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables ""http.proxy"": """",  // Whether the proxy server certificate should be verified against the list of supplied CAs. ""http.proxyStrictSSL"": true, ```"
26037|@aeschli There is an integration test failure (https://travis-ci.org/Microsoft/vscode/jobs/137741881#L2247) with those changes. I believe this is cos we have added new token types etc and I guess you know for sure and how to fix it.
26038|That seems to be the default configuration. I meant the contents of both `.vscode/settings.json` contained within your workspace and the `settings.json` file that opens on the right when you open the User Settings.  Also, I assume you have no `http_proxy` and `https_proxy` environment variables set?  And another thing, can you install an extension on stable? And what version is your stable installation?
26039|This will happen with #7656
26040|The css extension was not bundled correctly. Fixed now.
26041|The css extension was not bundled correctly, fixed now.
26042|I don't have a .vscode/settingsjson and I don't have any env. variables for proxy, and the user settings do not contain any http entries.
26043|As we discussed in the UX meeting, we should also consider a design where the toolbar slides in and out of view. Initially it would be in view but would then animate (slide upwards) until only the bottom edge of the toolbar was visible. When the mouse is moved to hover over the area it slides down.  If this doesn't work well we then suggested we should explore the ability to drag the toolbar horizontally.
26044|We discussed and agreed that we should look at the colours used throughout the product now that we have tabs enabled. @bgashler1 - this is something you and I should talk about.
26045|We discussed and agreed that we should look at the colours used throughout the product now that we have tabs enabled. @bgashler1 - this is something you and I should talk about.
26046|We discussed in the UX meeting yesterday and suggested that we want to iterate over this design as it progresses.
26047|I've added notes to each of the items referenced above.  In addition, we discussed the scroll behaviour of the tabs when in overflow. In particular, we looked at how we can indicate that there are tabs to the left and right that the user can scroll. Ben demonstrated the use of a shadow (consistent with how we use shadows elsewhere). @bgashler1 - we should talk about this and how we can finesse the look.  We also talked about whether or not we should reduce the height of the tabs. They are the same height as the viewlet title bar which I think ends up making the tabs look a little heavy. We didn't reach any conclusion on this though.  Lastly we experimented with adding the border colour to the left hand side of the selected tab but with the problems we have with the current colours of the selected tab, unselected tabs and the tab well, we didn't think that the left border helped much.
26048|The issue here is that the breakpoint widget is talking about line 75 (as it correctly says in the message) and once you dismiss the widget with an enter that means you have entered a condition and a brekapoint on line 75 gets added. Though in the meantime you have moved the breakpoint on line 75 a couple of lines down. Thus in the end you get 2 breakpoints  I understand this can be a bit confuzing to the user - but not very important imho -> backlog
26049|@Tyriar  you try once spf13-vim. normal vim without any config also fine for me.  it seems  some unicode char display error  lead to missing first line.
26050|In our discussion yesterday we started to settle on the use of the term preview tab given the prevalence of this term in other products.  We like the idea of a global setting to enable or disable the preview tab then specific settings for each area that might use the preview tab. We also discussed a setting that has a verb in it to better communicate what it does. So we might end up with something like  workbench.enablePreviewTab: true workbench.enablePreviewTabInExplorer: true workbench.enablePreviewTabInQuickOpen: false  which would turn preview tab on but disable it for quick open (so a file from quick open would open in a regular tab).  This approach would allow us to control how preview tab works in other UI in the future without needing to make any significant changes to the settings.
26051|Awesome!!
26052|@aeschli unfortunately - intellisense seems broken completely for css and sass files now in the latest insiders build.
26053|Don't worry - just seen your commit! 👍
26054|@jchannon I had this issue on OS X. It has to do with the Terminal not using the `editor.fontFamily` setting, can you try setting your `terminal.integrated.fontFamily` to the same powerline font used in `editor.fontFamily`?
26055|setting the `terminal.integrated.fontFamily` in my `User Settings` file fixed it. thx.
26056|"That seems to do the trick however, the colours are different and the right hand side seems off   <img width=""963"" alt=""screen shot 2016-06-15 at 13 31 21"" src=""https://cloud.githubusercontent.com/assets/105126/16079860/812b69f4-32fd-11e6-8fe2-0841fae1e731.png"">"
26057|I have tried both 1.2.0 and 1.2.1, and the issue is not fixed yet. There is no issue on Windows, but I only have this one occurred on Mac. This is really annoying when type in Chinese in this great editor.
26058|Let's wait to get Terminal theme support, but that's another issue. About the time on the right, I guess the terminal is reporting incorrect terminal column width.
26059|Ran into a similar situation, however in 1.2.1 JS code within script tags in a .aspx file has its indenting and line breaks removed.  Are you saying that this is a side effect of formatting code within html/aspx that code gets formatted?  E.g. HTML rules are being applied when shift-alt-f is run?
26060|@stevencl we got a very strong feedback in the standup today that the skype animation box is very painful to use. So we decided to first try with the horizontal move and if that does not work then try the animation.
26061|![code-sd for apple devices](https://cloud.githubusercontent.com/assets/10388011/16080490/b243ec30-333b-11e6-8491-89a045bf3e7e.gif) I attached the gif to explain the problem. No matter which IME i used, if it is chinese, the issue is always there.
26062|Right, I'm saying it might not be a problem with VS Code, it might be a problem with my system.
26063|I'm also getting this error with integrated terminal.  ``` logs  c:\users\mauricio\documents\git\frontend\npm run start events.js:154       throw er; // Unhandled 'error' event       ^  Error: This socket is closed.     at WriteStream.Socket._writeGeneric (net.js:642:19)     at WriteStream.Socket._write (net.js:694:8)     at doWrite (_stream_writable.js:292:12)     at writeOrBuffer (_stream_writable.js:278:5)     at WriteStream.Writable.write (_stream_writable.js:207:11)     at WriteStream.Socket.write (net.js:620:40)     at WriteStream.stream.write (C:\Program Files\nodejs\node_modules\npm\node_modules\npmlog\node_modules\ansi\lib\newlines.js:36:21)     at Cursor.write (C:\Program Files\nodejs\node_modules\npm\node_modules\npmlog\node_modules\ansi\lib\ansi.js:157:23)     at Cursor.(anonymous function) [as show] (C:\Program Files\nodejs\node_modules\npm\node_modules\npmlog\node_modules\ansi\lib\ansi.js:226:26)     at Object.ProgressBar.hide (C:\Program Files\nodejs\node_modules\npm\node_modules\npmlog\node_modules\gauge\progress-bar.js:101:15)  events.js:154       throw er; // Unhandled 'error' event       ^  Error: This socket is closed.     at WriteStream.Socket._writeGeneric (net.js:642:19)     at WriteStream.Socket._write (net.js:694:8)     at doWrite (_stream_writable.js:292:12)     at writeOrBuffer (_stream_writable.js:278:5)     at WriteStream.Writable.write (_stream_writable.js:207:11)     at WriteStream.Socket.write (net.js:620:40)     at WriteStream.stream.write (C:\Users\Mauricio Nunes dos R\AppData\Roaming\npm\node_modules\npm\node_modules\npmlog\node_modules\ansi\lib\newlines.js:36:21)     at Cursor.write (C:\Users\Mauricio Nunes dos R\AppData\Roaming\npm\node_modules\npm\node_modules\npmlog\node_modules\ansi\lib\ansi.js:157:23)     at Cursor.(anonymous function) [as show] (C:\Users\Mauricio Nunes dos R\AppData\Roaming\npm\node_modules\npm\node_modules\npmlog\node_modules\ansi\lib\ansi.js:226:26 )     at Object.ProgressBar.hide (C:\Users\Mauricio Nunes dos R\AppData\Roaming\npm\node_modules\npm\node_modules\npmlog\node_modules\gauge\progress-bar.js:101:15)  ```
26064|How about that last part? Can you install an extension on stable? And what version is your stable installation?  Sorry for all the questions... and thanks for the help by the way!
26065|No problem, I have a lot extensions in stable. I have currently version 1.2.1 I can install, uninstall, update etc.
26066|Duplicate of #1758
26067|Stranger and stranger. Insiders is practically equal to stable, with regards to the gallery.  Is some firewall blocking the Insiders build? Can you disable any firewall/antivirus temporarily and see whether that is the case?
26068|I cannot I'm afraid. I have no access to the antivirus program or firewall if there is one.
26069|I have the same problem using VSCode 1.2.1 on Ubuntu 16.04 LTS running in a VirtualBox 5.20 guest on top of a Windows 7 host.  I also checked this on Ubuntu 14 32-bit and it happens there as well so I suspect its more of a Vbox 3D graphics - VSCode interaction.  With 3D acceleration on, VSCode does not redraw its screen.  With 3D acceleration off, VSCode works, but Ubuntu/Unity is too slow to use.
26070|`yield` is now colored in TS and JS. For coffeescript we use the grammar from https://github.com/textmate/coffee-script.tmbundle. I suggest to file an issue there.
26071|"I pushed a change yesterday to not talk about pin or unpin throughout the UI to not introduce a new concept.  With working files we always had a notion of files that got added into the working files list and files which are not depending on the action that you do (e.g. double click). we take this concept a step further into the editor now. but the action that triggers this are still the same.   I got emotional feedback from Martin on the fact that we want to go with preview and I don't want to ignore his opinion (or any other) so maybe this particular UX item just needs a vote in the team to come to a conclusion.   For me the advantage of going with ""preview"" is that it is a term used in ST and VS already. A disadvantage however is that the name itself does not really imply what the visual impact is.   Thinking about the idea of calling it ""reuse editor"" had the advantage that it actually describes the visual impact this setting has because in the end this setting controls if an editor in the stack is being closed after opening the next one or not.   Thus I am also easy to go with ""reuse"" . Both terms are good for me."
26072|Update: This only seems to happen from `zsh` with `prezto`. It works if I run `bin/code` or `ATOM_SHELL_INTERNAL_RUN_AS_NODE=1 ./code resources/app/out/cli.js`, while `./code` doesn't work. Is it normal?  By the way, the `1.2.1` `rpm` doesn't seem to contain `/usr/bin/code`.
26073|@Andi-Lo I see what you mean, I can reproduce it. Looks like a minor issue to me, so removed the 'important' tag. Do you agree?
26074|duplicate of #6243
26075|@joaomoreno I changed the git.enabled to false, but it still crashes with OOM error.
26076|Alright let's try something else then. Can you download the latest insider release from the following URL and try it?  https://vscode-update.azurewebsites.net/latest/win32-archive/insider  This URL will download Code as an archive, instead of as a Setup executable. You can just extract and execute it from there directly.
26077|The raytracer issue got fixed with the latest grammar update.
26078|Downloaded, extracted, same error on ext install
26079|As you saw, it's currently not possible to configure the registry we use. I guess we can call `npm config get registry` to figure out the registry url. I haven't found out how we get the URL of the skimdb. Any ideas?  I'm afraid this is not on the top of the backlog, help is welcome...
26080|Version 1.3.0-insider (1.3.0-insider) 57c833a81206c3d6bb99ba876e6cbafaf427b892  I am experiencing the same issue, but it not only changes the active file -- it closes the entire 2nd editor when it does it. This happens very randomly but VERY often.  This also just started with the current nightly -- the previous one was fine.  Looks like this was already fixed with https://github.com/Microsoft/vscode/commit/d8de4d4695a8bcc4656405067f9ce046a9ee6f47  Anyway to get a patched nightly?
26081|"I don't think this is a bug. When you select ""Indent Using Tabs"" editing Makefiles works just fine.  vi and nano default to indention using tabs while VSCode uses 4 spaces by default."
26082|This issue was moved to Microsoft/TypeScript-TmLanguage#186
26083|How about the stable archive?  https://vscode-update.azurewebsites.net/latest/win32-archive/stable  And what happens if you rename the executable from the insiders to `Code.exe` and vice versa to the stable?
26084|"Some sample from what we have with PR #7704  1. Add an icon to the editor action bar  ``` json {     ""command"": ""v.sayHello"",     ""title"": ""Hello World"",     ""icon"": ""./media/Preview.svg"",     ""context"": {         ""where"": ""editor/primary"",         ""when"": ""typescript""     } } ``` 1. Add an action with theme-aware icon that shows for all typescript files and files that match `**/*.svg` as primary action and as secondary action for `txt` files.  ``` json {     ""command"": ""v.sayHello"",     ""title"": ""Paul Bier"",     ""icon"": {         ""light"": ""./media/Preview.svg"",         ""dark"": ""./media/Preview_inverse.svg""     },     ""context"": [{         ""where"": ""editor/primary"",         ""when"": [             ""typescript"",             {""pattern"": ""**/*.svg""}         ]     }, {         ""where"": ""editor/secondary"",         ""when"": {""pattern"": ""**/*.txt""}     }] } ``` 1. Add an action for json-files to explorer context menu  ``` json {     ""command"": ""v.sayHello"",     ""title"": ""Open With Hex"",     ""context"": {         ""where"": ""explorer/context"",         ""when"": ""json""     } } ```  Plan is to start with these locations (values for `where`-property): `editor/primary`, `editor/secondary`, `editor/context`, and `explorer/context`. The `when`-clause is a [DocumentSelector](https://github.com/Microsoft/vscode/blob/joh/menus/src/vs/vscode.d.ts#L1431) and applied to the resource in context - that is a file from the explorer or the resource showing in an editor etc.  Also, the resource in question will be passed to the command as argument."
26085|Thanks! - modified the settings file and all worked as expected. will close the issue.
26086|@jrieken should we maybe enforce to provide 2 icons for light and dark themes so that we do not end up with extensions that look bad in one theme?
26087|Also, I see for the explorer you call it `explorer/context` but maybe we need to be more specific: there is the top level action bar with primary and secondary actions and there is the tree item specific action bar also with primary actions (they appear at the end of the item) and secondary actions that show up in the context menu.
26088|Thanks for looking into it. I also did more tests and I'm tempted to say GitHub's html handling is very lenient and it might not be worth the effort replicating it. I'm not even sure if the rewrite of the self closing anchor tag comes from the markup parser itself, or the id/name rewrite they do afterwards (prefixing all with `user-content-`).  I'd say this is working as intended in VSCode. I'll try to fix any broken tags I come by instead.
26089|@gerane, I think the functionality for those keys is driven by [PSReadline](https://github.com/lzybkr/PSReadLine), not the terminal itself.  The terminal does seem to load PSReadline _okay_ (the color highlighting works, no errors get thrown) but some of the functionality is lost. This might be due to the implementation of PSReadline?
26090|"Did you know the main font can be a list?  ``` ""editor.fontFamily"": ""Iosevka Slab, Inziu Iosevka Slab SC"" ```"
26091|> plus a small adition that you only instantitate that aciton if stepBack is supported > @isidorn you're talking about DebugActionsWidget.getActions? I could instantiate it the first time a session starts that supports stepBack, and on subsequent calls, either include it or not in the array that's returned? Or, it is possible to just hide a debug action with a css class if it's not supported?
26092|The actions get instantiated every time the widget gets created, so just instantiate it or not every time based on the capability. No need to hide imho
26093|could the CALL command be replaced with the START command in code.cmd?  This causes the cmd.exe prompt to exit immediately and only the code.exe window remains open.
26094|I tested vscode.startDebug and it is working great, but I found only 2 little problems: - you can't restart the configuration submitted when using a custom one which is not listed in launch.json - the debug panel is not enabled, so you need to click and enable debug console manually  Do you plan to implement those features ? Thankyou very much anyway for the api.
26095|@jrieken I am not sure how to best fix this due to the way an action bar handles action items: You set actions into an action bar and then we have action item providers that you can pass in that get called whenever the action is displayed (`getActionItem(action: IAction): IActionItem`). At that point I have no clue from which contributor the action item was coming from. It is totally disconnected.  However, quickly checking our uses of action contributors, I do not find a client that actually leverages the `getActionItem` API. So I am also easy to take it out from the contribution story unless you actually now introduce a use case for this for the extensions?
26096|my god. it was been closed. i think the APIs has been provided in vscode 1.2. A half of my extension has been finished. T_T...
26097|If I understand correctly, it looks like the widget is created once for the lifetime of the Code instance, and the actions are created once and cached and reused for every debug session.
26098|T_T... my extension ......
26099|:+1: Thanks!
26100|Also, though I've originally set `id` for both schemas to HTTP URLs (that - like XML schemas - do **not** represent actual live links to documents) as recommended, since this establishes base URL for relative `$ref`s elsewhere in the file, I've also tried setting `id` to the local file URLs of the files in question, with no success.
