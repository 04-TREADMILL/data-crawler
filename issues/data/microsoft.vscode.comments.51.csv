5001|Somehow I cannot get this list to be cleared, filed: https://github.com/atom/electron/issues/3932
5002|+1 Same `getaddrinfo ENOTFOUND myproxy:8080 myproxy:8080:8080`  Updated to Version 0.10.6
5003|Nice catch. I was doing some ovewriting of cached configurations in configuraiton service thus getting stale ones.
5004|The new versión of VSCode WORKS :)  Thanks and go on!
5005|u found any solution to this problem ?
5006|@pconklin the description is not very clear to me - what is your use case? Are you building a new debug adapter? - can I somehow reproduce this issue on my side?  The file only gets focus if you vscode gets a stopped event for that file.
5007|@roblourens Thanks for the PR. Commit 09296db looks good, however 90a484c does not seem like it should be a part of this PR. Can you clarify?
5008|Beware that this might have nothing to do with disabling the recycle bin but rather the Electron bug which has also been mentioned here: https://github.com/Microsoft/vscode/issues/1485  I have my recycle bin enabled and I am also unable to delete files. I guess we won't know until Electron gets fixed.
5009|Small update: I remembered that I still have the installer from VSCode 0.10.1. I disabled my recycle bin and at least with 0.10.1 deleting files works as expected (they get deleted permanently without any errors). It's an old version for sure but at least at some point disabling the recycling bin worked.
5010|Windows 7?
5011|Yep, Win7 x64 fully patched.
5012|Hi! I had the same issue, when i tried the option, open in terminal, with right click of the mouse on any file. I'm using vscode 0.10.5 on opensuse.
5013|Ok this is #1485
5014|@alexandrudima fyi
5015|We currently do not allow for direct UI access from extensions. You can file more specific requests for API please.
5016|@bpasero If I had to guess I would think they are talking about the variables highlighting. on line two `$this` should be one color.
5017|The plugin what I want to implement has following requirement: As you know, vscode will popup an completionitemlist when user type JavaScript in vscode, what my plugin want to do is show external information for each completionitem when user switch between each completionitem, but now I have not found any API can meet my requirement , so I suppose whether I can change the vscode source to provide an API for my plugin.
5018|Right, my guess too.
5019|Ok so would you want to show this information inside the completion item list? Like a JSDoc comment?
5020|At the moment I am using an orange icon to get user feedback
5021|I am building a new debug adapter.  I quickly wrote a wrapper for the mockdebug and found my issue.  somewhere along the way my int for the line number was getting cast to a string.  This was causing the odd behavior i was seeing (the quick flash of the actual source as well as the error).  Correcting this to an Int resolved the issue.  You can reproduce by doing the following  have at least 2 scripts / program files in your launch profile, have it launch program a set the current open document to program b have your debugger return a string instead of an int for line number hit f5  You will see program a come up for a split second, then it will go back to program b and you will get the error.  If you manually set focus to program a, the executing line (highlighted in yellow) will follow along with the debugger but will not scroll.  > On December 28, 2015 at 5:05 AM Isidor Nikolic notifications@github.com > wrote: >  >  @pconklin https://github.com/pconklin the description is not very clear to > me >  > ``` >  * what is your use case? Are you building a new debug adapter? >  * can I somehow reproduce this issue on my side? > ``` >  >  The file only gets focus if you vscode gets a stopped event for that file. >  >  — >  Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/1624#issuecomment-167542827 .
5022|If I understand properly sending the expected value (a number) fixes the issue, correct me if I am wrong. So i believe this is expected behavior since we are currently not checking any of the values passed from the adapter for validity.  The underlying issue happens when the wrong line number gets propagated all the way down to our editor service which complains that it can not open a line number which is a string.  Also feel free to ping for other debug adapter related questions.
5023|"@isidorn It is not obvious that the breakpoint context action ""Edit Breakpoint"" allows to create conditional breakpoints. I suggest to rename to ""Edit Breakpoint Condition"""
5024|In the future the breakpoint widget might provide additional options for editing a breakpoint, so that is why I choose the general name. We can use the 'edit breakpoint condition' now, but then we might need to rename it in the future. Also chrome uses the same name, so chrome users would not be surprised.
5025|@weinand now I am allowing users to set breakpoint in javascript react and typescript react files, e.g .jsx and .tsx
5026|Hi, I'm experience this issue too. I'm willing to help. Please let me know how.
5027|Hi **@dpodder**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Daniel Podder). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
5028|I patched the grammar with a fix for these in pending PR #1678 ![issue-487](https://cloud.githubusercontent.com/assets/2354388/12023973/c0d9b3e0-ad64-11e5-935a-31c43fcb7f60.png)
5029|"We had an issue with the 0.10.6 CDN caching so we created a new endpoint (note ""0.10.6**-release**""):  https://az764295.vo.msecnd.net/public/0.10.6-release/VSCode-darwin.zip  i'll remove the 0.10.6 release."
5030|@khrome83 actually, you are using invalid JSDoc syntax. In JSDoc, a generic is notated with a dot:  ``` js /**  * @param {Array.<string>}  */ ```
5031|+1. I'm often working on my Surface Pro 3. While scrolling with touch is working great, this is kind of annoying. But please, please, please, if you implement something for this, make it so that the keyboard does _not_ pop up when I am _not_ in tablet mode on Windows 10.
5032|- 1 - same issue here. After settting proxy in settings.json I can browse the list of extensions but not installing it with error getaddrinfo ENOTFOUND.
5033|Yes please. Along with syntax highlighting for git commit messages and hunks (`git add -p`).
5034|I have an extension that is 80% finished: https://www.github.com/felixfbecker/vscode-php-debug
5035|I'd definitely like to see this as well -- it's the reason I asked [this question](https://stackoverflow.com/questions/34444872/accessing-the-editors-dom-in-a-visual-studio-code-extension) about plugins changing the interface. I'd be nice if one of the options was for it to match the `editor.wrappingColumn` setting.
5036|@felixfbecker I will give that a shot, thanks. Still should not have a code error within a comment block though.
5037|@felixfbecker that did remove VSCode from showing the error.  Do you have a link to where in the JSDoc this is shown? All examples I have seen so far, in my code and others, do not use a `.`.
5038|As of 0.10.6, this isn't happening for me anymore.  @rhires / @awgeorge - What about you?
5039|@khrome83 heres the documentation: http://usejsdoc.org/tags-type.html It is a little bit confusing because in all other languages (C#, Java, TypeScript, ...) it's without a dot.
5040|But imo validation for jsdoc comments is a feature, not a bug. I think it wont do any validation if you start your comment with `/*` and not `/**` ;)
5041|"Imo word suggestions are often quite helpful. For example when I make a comment like ""this is later called by ..."" and VS Code automatically suggests the long method name as I type."
5042|"@felixfbecker its only showing the error on the first instance of a file, not the remaining lines.  Also it is giving the incorrect fix. It is not ""validating"" the comment, but instead perceiving the comment as JS.   Also valid JSDoc uses `/**` to start, not `/*`, so this would just introduce a different problem."
5043|I'm having the same problem with version 2.5.1.windows.1. This [issue](https://github.com/Microsoft/vscode/issues/490) mention something about Github Desktop authentication.
5044|Looks like this has been implemented: https://code.visualstudio.com/Updates#_file-picker-improvements-and-fuzzy-search
5045|Yes , what i want to do is append an button inside each completion item ,and when user want to see sample ,he can click show sample button and then will expand an fixed height with scrollbar area to show sample for the completion item . ![aabbbddd](https://cloud.githubusercontent.com/assets/15098626/12028805/64a6621c-ae18-11e5-96cf-6c0a666d6208.png)  do you know how to expose this api , i am researching vscode source and i don't know how to expose this api ,can you help me ,thank you!
5046|There is currently no API to do this. Best you can probably do is to provide the text for a completion item that will show when the item is highlighted.
5047|Documented here: https://code.visualstudio.com/docs/extensions/testing-extensions#_running-tests-automatically-on-travis-ci-build-machines
5048|Documented here: https://code.visualstudio.com/docs/extensions/testing-extensions#_running-tests-automatically-on-travis-ci-build-machines
5049|@oshalygin did you configure tsconfig.json to be ES 6?
5050|Well I think we need language specific setting overrides which we have a feature request already for.
5051|@Nedilko can you try to delete the Microsoft VS Code folder and reinstall fresh to see if that fixes the issue?
5052|Sounds like a good area for an extension.
5053|I think we tweaked this quite heavily...
5054|So hope that Code can support such a useful feature.
5055|Also seeing this.
5056|yes, working. All I was need to do is to reinstall VS Code
5057|Hi MS folks. Toggling word wrap (dynamically and/or based on mime-type) is a painfully important feature for people looking to switch to VSCode full time. Whether it's this PR or another, please add this feature!
5058|Not sure if TS would support this.
5059|This should be for (const elem of coll) not for (let elem of coll) because the variable is declared for every iteration
5060|I test the 'window', it doesn't work also. ![image](https://cloud.githubusercontent.com/assets/2756249/12032127/b692f162-ae4f-11e5-83bc-3aa1367d1b77.png)
5061|For a Windows user, using environment variables or configuration files for something that can be transient (and having a proxy can be transient) is just plain stupid.
5062|but when I use 'window' keywords. It can work well. ![image](https://cloud.githubusercontent.com/assets/2756249/12032148/e51e7da8-ae4f-11e5-81e3-eaf89a48fc95.png)
5063|"+1 VS code 0.10.6 Win7 Doesn't auto detect proxy (WPAD) After configuring proxy in User Settings VS code can't do NTLM authentication with proxy using current user credentials.  I'm using the following settings. We have SSL intercept at proxy but the cert used by proxy is trusted.   ""http.proxy"": ""http://webproxy.companyname.com:8080/"", ""https.proxy"": ""http://webproxy.companyname.com:8080/"", ""http.proxyStrictSSL"": false,  No error message displayed, just no results if I do  CTRL+P ext install PowerShell"
5064|Hi Felix, You are absolutely right. I realized it later on. May my proposal be accepted that I will anyway change more loops on another fork, and I suggest to change to const in the meantime. - For information this loop writing transpiles to something like:  ``` for(var i = 0; i < A.length; i++) { ... } ```  NOT to:  ``` for(var i = 0, len = A.length; i < len; i++) { ... } ```  See this conversation: https://github.com/Microsoft/TypeScript/issues/6258 - Still, it appears the first snippet is slightly faster. See: http://stackoverflow.com/a/17995000/1795027 and this jsperf: http://jsperf.com/cache-length-no-cache
5065|its 1.5.3 it cant complile my code
5066|@Ghayyas do you see output in the output log when you run the task?
5067|no
5068|@Ghayyas can you attach your task.json?
5069|hre?
5070|"Hre is my Task.json  // Available variables which can be used inside of strings. // ${workspaceRoot}: the root folder of the team // ${file}: the current opened file // ${fileBasename}: the current opened file's basename // ${fileDirname}: the current opened file's dirname // ${fileExtname}: the current opened file's extension // ${cwd}: the current working directory of the spawned process  // A task runner that calls the Typescript compiler (tsc) and // Compiles a HelloWorld.ts program {     ""version"": ""0.1.0"",  ``` // The command is tsc. Assumes that tsc has been installed using npm install -g typescript ""command"": ""tsc"",  // The command is a shell script ""isShellCommand"": true,  // Show the output window only if unrecognized errors occur. ""showOutput"": ""silent"",  // args is the HelloWorld program to compile. ""args"": [],  // use the standard tsc problem matcher to find compile problems // in the output. ""problemMatcher"": ""$tsc"" ```  }  // A task runner that calls the Typescript compiler (tsc) and // compiles based on a tsconfig.json file that is present in // the root of the folder open in VSCode /* {     ""version"": ""0.1.0"",  ``` // The command is tsc. Assumes that tsc has been installed using npm install -g typescript ""command"": ""tsc"",  // The command is a shell script ""isShellCommand"": true,  // Show the output window only if unrecognized errors occur. ""showOutput"": ""silent"",  // Tell the tsc compiler to use the tsconfig.json from the open folder. ""args"": [""-p"", "".""],  // use the standard tsc problem matcher to find compile problems // in the output. ""problemMatcher"": ""$tsc"" ```  } */  // A task runner configuration for gulp. Gulp provides a less task // which compiles less to css. /* {     ""version"": ""0.1.0"",     ""command"": ""gulp"",     ""isShellCommand"": true,     ""tasks"": [         {             ""taskName"": ""less"",             // Make this the default build command.             ""isBuildCommand"": true,             // Show the output window only if unrecognized errors occur.             ""showOutput"": ""silent"",             // Use the standard less compilation problem matcher.             ""problemMatcher"": ""$lessCompile""         }     ] } */  // Uncomment the following section to use jake to build a workspace // cloned from https://github.com/Microsoft/TypeScript.git /* {     ""version"": ""0.1.0"",     // Task runner is jake     ""command"": ""jake"",     // Need to be executed in shell / cmd     ""isShellCommand"": true,     ""showOutput"": ""silent"",     ""tasks"": [         {             // TS build command is local.             ""taskName"": ""local"",             // Make this the default build command.             ""isBuildCommand"": true,             // Show the output window only if unrecognized errors occur.             ""showOutput"": ""silent"",             // Use the redefined Typescript output problem matcher.             ""problemMatcher"": [                 ""$tsc""             ]         }     ] } */  // Uncomment the section below to use msbuild and generate problems // for csc, cpp, tsc and vb. The configuration assumes that msbuild // is available on the path and a solution file exists in the // workspace folder root. /* {     ""version"": ""0.1.0"",     ""command"": ""msbuild"",     ""args"": [         // Ask msbuild to generate full paths for file names.         ""/property:GenerateFullPaths=true""     ],     ""taskSelector"": ""/t:"",     ""showOutput"": ""silent"",     ""tasks"": [         {             ""taskName"": ""build"",             // Show the output window only if unrecognized errors occur.             ""showOutput"": ""silent"",             // Use the standard MS compiler pattern to detect errors, warnings             // and infos in the output.             ""problemMatcher"": ""$msCompile""         }     ] } */  // Uncomment the following section to use msbuild which compiles Typescript // and less files. /* {     ""version"": ""0.1.0"",     ""command"": ""msbuild"",     ""args"": [         // Ask msbuild to generate full paths for file names.         ""/property:GenerateFullPaths=true""     ],     ""taskSelector"": ""/t:"",     ""showOutput"": ""silent"",     ""tasks"": [         {             ""taskName"": ""build"",             // Show the output window only if unrecognized errors occur.             ""showOutput"": ""silent"",             // Use the standard MS compiler pattern to detect errors, warnings             // and infos in the output.             ""problemMatcher"": [                 ""$msCompile"",                 ""$lessCompile""             ]         }     ] } _/ // A task runner example that defines a problemMatcher inline instead of using // a predfined one. /_ {     ""version"": ""0.1.0"",     ""command"": ""tsc"",     ""isShellCommand"": true,     ""args"": [""HelloWorld.ts""],     ""showOutput"": ""silent"",     ""problemMatcher"": {         // The problem is owned by the typescript language service. Ensure that the problems         // are merged with problems produced by Visual Studio's language service.         ""owner"": ""typescript"",         // The file name for reported problems is relative to the current working directory.         ""fileLocation"": [""relative"", ""${cwd}""],         // The actual pattern to match problems in the output.         ""pattern"": {             // The regular expression. Matches HelloWorld.ts(2,10): error TS2339: Property 'logg' does not exist on type 'Console'.             ""regexp"": ""^([^\s]._)\((\d+|\d+,\d+|\d+,\d+,\d+,\d+)\):\s+(error|warning|info)\s+(TS\d+)\s_:\s_(._)$"",             // The match group that denotes the file containing the problem.             ""file"": 1,             // The match group that denotes the problem location.             ""location"": 2,             // The match group that denotes the problem's severity. Can be omitted.             ""severity"": 3,             // The match group that denotes the problem code. Can be omitted.             ""code"": 4,             // The match group that denotes the problem's message.             ""message"": 5         }     } } */"
5071|@Ghayyas is there a reason you are on TS 1.5.x? The latest release is 1.7. Maybe updating helps.
5072|it cant i tried it
5073|@pgerell Can you open a new issue at https://github.com/lextm/vscode-restructuredtext so that I can better track it?  I am still digging into VS Code documentation to see how to further improve ReST support, so progress might be slow.
5074|@glen-84 Good work! I'll get those added. Thanks :)
5075|+1 Waiting for this!
5076|@Ghayyas can you attach these errors you are getting when compiling from the command line?
5077|I would love this feature as well :)
5078|"This could be another kind of issue but I have problems with intellisense in razor files as well.  I can't get suggestions with intellisense when I'm writing angular in a razor-file (cshtml). I've loaded the correct typings and everything works perfectly if I change the language mode to HTML instead of razor.  If language mode is set to Razor when writing the code below. Intellisense will not suggest ""ng-controller"". But if changed to HTML language it will.   ``` <div ng-controller=""myController as vm""> ```"
5079|I'm noticing that I'm having problems lately hitting breakpoints in VSCode for my node project as well. Somewhat recently [nodemon](https://github.com/remy/nodemon/) was added to the mix via [gulp-nodemon](https://github.com/JacksonGariety/gulp-nodemon) where gulp was already used for launching the debug mode of the app. I'm guessing that there may be something with how _nodemon_ works which is causing problems for VSCode. Not sure where or if this can be addressed.  Possible realated issues: - https://github.com/remy/nodemon/issues/546 - https://github.com/JacksonGariety/gulp-nodemon/issues/92 - https://github.com/JacksonGariety/gulp-nodemon/issues/85
5080|Already used pre3 last week and it's working fine ;)  (i.e. the documentation was online before the package being finally release, this is why I've used pre3...)
5081|@weinand I've tried your advice with the debug port but it didn't seem to help in my case.
5082|Awesome, thanks Isidor!  This will be really helpful.
5083|"I just met the same problem like you. The ""Change All Occurrences"" doesn't work if the string I select has whitespace or any other character which is not a letter. Here is the screenshots:  Original: ![1](https://cloud.githubusercontent.com/assets/16049823/12037924/9859f2ec-ae8e-11e5-92e8-581243326334.png)  If I want to replace all the "" << endl;"" to "";"", and I select the 3rd(from L to R): ![2](https://cloud.githubusercontent.com/assets/16049823/12037930/abe31e9c-ae8e-11e5-9059-60ed3f30d7a1.png)  Right click and select ""Change All Accurrences"": ![3](https://cloud.githubusercontent.com/assets/16049823/12037934/b27ca55c-ae8e-11e5-889b-d77561b6f400.png)  It just comes back to.. ![4](https://cloud.githubusercontent.com/assets/16049823/12037977/2661ccd6-ae8f-11e5-8255-4ec67c851586.png)  ![5](https://cloud.githubusercontent.com/assets/16049823/12037995/3da9981a-ae8f-11e5-844f-555d0139d701.png)  And if I select from R to L: ![6](https://cloud.githubusercontent.com/assets/16049823/12038081/00019912-ae90-11e5-9980-eaef4a742a61.png)  Right click: ![7](https://cloud.githubusercontent.com/assets/16049823/12038090/0e562d3e-ae90-11e5-9bd9-d43cf7f8cf05.png)  And it becomes: ![8](https://cloud.githubusercontent.com/assets/16049823/12038158/9b6e6e70-ae90-11e5-8a83-87a406f3959d.png)  ![9](https://cloud.githubusercontent.com/assets/16049823/12038162/a64b63ca-ae90-11e5-85df-9cc124723a8c.png)  Version of VS Code: 0.10.6"
5084|Here's an issue I opened about this in the past, I think it was closed prematurely. https://github.com/Microsoft/vscode/issues/324
5085|Great :)
5086|Here it is: https://marketplace.visualstudio.com/items/felixfbecker.php-debug :)
5087|@felixfbecker Awesome - php-debug looks great!  And thanks a lot for your feedback. On January 4 we will resume work on the bugs and feature requests you've filed ;-)
5088|Cannot Compile unless --module flag is provided..
5089|I couldn't figure out how to just pick the one commit out for a PR... let me try again
5090|The issue was resolved by installing `libnss3-dev` for Electron.  Hat tip to [this](https://github.com/atom/electron/pull/2382) pull request in the electron repo.
5091|you have to add a tsconfig.json file pls see: https://code.visualstudio.com/docs/languages/typescript
5092|CC @Tyriar
5093|CC @aeschli
5094|CC @weinand
5095|correct, closing as requested, thanks
5096|CC @aeschli
5097|@rscharnetzki could you please try to use a different port than 5858. Does it make a difference?
5098|This could be a consequence of a failed uninstall/update of the tslint extension.  @Arebee88 do you remember whether you did uninstall the tslint extension?  > I dont know what eg2 is.. presumably if I installed the extension itd go away???  extensions are scoped to a [publisher](https://code.visualstudio.com/docs/tools/vscecli) and `eg2` is the name of the publisher of the tslint extension (in this case me).  > It's remarkable how often I want to go screw around with some code just to have VSCode throw shit in my way.  pls do not stop filling issues when things are getting thrown in your way
5099|@fleixfbecker yes, but 'code' within comments should be escaped with backticks, the intellisense whilst writing comments is really slowing down my typing and interfering with expected spc/tab when writing prose.
5100|"Thanks @bpasero.   It looks like tests that rely on the active window fail (`vscode.window.activeTextEditor => undefined`). I'm not sure if this is inherent to Travis -- does it allow you to open a window?  Unfortunately, I'm running on Windows and can't debug this further (any plans for adding Windows support?). On [Travis](https://travis-ci.org/VSCodeVim/Vim/builds/99336269), I do see these warnings:  `Xlib:  extension ""RANDR"" missing on display "":99.0"".`"
