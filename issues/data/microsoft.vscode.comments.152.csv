15101|@bpasero you reviewed. Can you please verify.
15102|"Just reproduced locally after closing the ""?"" help quick open:  Cannot read property 'dispose' of undefined: TypeError: Cannot read property 'dispose' of undefined     at Renderer.disposeTemplate (file:////Users/bpasero/Development/monaco/out/vs/base/parts/quickopen/browser/quickOpenModel.js:511:27)     at Renderer.disposeTemplate (file:////Users/bpasero/Development/monaco/out/vs/base/parts/quickopen/browser/quickOpenViewer.js:79:28)     at file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:75:48     at Array.forEach (native)     at file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:74:46     at Array.forEach (native)     at RowCache.garbageCollect (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:73:42)     at TreeView.onSetInput (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:695:32)     at TreeView.onModelEvents (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:533:30)     at Array.<anonymous> (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:515:93)WorkbenchShell.onUnexpectedError @ //Users/bpasero/Development/monaco/out/vs/workbench/electron-browser/shell.js:283 index.html:26 [uncaught exception]: TypeError: Cannot read property 'firstChild' of nullonError @ index.html:26 index.html:29 TypeError: Cannot read property 'firstChild' of null     at EntryItemRenderer.LegacyRenderer.renderElement (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeDefaults.js:27)     at Renderer.renderElement (//Users/bpasero/Development/monaco/out/vs/base/parts/quickopen/browser/quickOpenModel.js:453)     at Renderer.renderElement (//Users/bpasero/Development/monaco/out/vs/base/parts/quickopen/browser/quickOpenViewer.js:75)     at ViewItem.render (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:230)     at ViewItem.insertInDOM (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:254)     at TreeView.insertItemInDOM (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:1277)     at TreeView.render (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:490)     at TreeView.Object.defineProperty.set [as viewHeight](//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:636)     at TreeView.layout (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:474)     at Tree.layout (//Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeImpl.js:57)onError @ index.html:29 //Users/bpasero/Development/monaco/out/vs/base/common/winjs.base.raw.js:1789 Uncaught TypeError: Cannot read property 'firstChild' of null //Users/bpasero/Development/monaco/out/vs/workbench/electron-browser/shell.js:283 Cannot read property 'dispose' of undefined: TypeError: Cannot read property 'dispose' of undefined     at Renderer.disposeTemplate (file:////Users/bpasero/Development/monaco/out/vs/base/parts/quickopen/browser/quickOpenModel.js:511:27)     at Renderer.disposeTemplate (file:////Users/bpasero/Development/monaco/out/vs/base/parts/quickopen/browser/quickOpenViewer.js:79:28)     at file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:75:48     at Array.forEach (native)     at file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:74:46     at Array.forEach (native)     at RowCache.garbageCollect (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:73:42)     at TreeView.onSetInput (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:695:32)     at TreeView.onModelEvents (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:533:30)     at Array.<anonymous> (file:////Users/bpasero/Development/monaco/out/vs/base/parts/tree/browser/treeView.js:515:93)"
15103|This is bad as it can bring quick open into a broken state. To reproduce open quick open, type ? and repeat:  ![hover](https://cloud.githubusercontent.com/assets/900690/13984576/70462b4e-f0f7-11e5-970a-6e7e7f9c51fc.gif)
15104|The module reference error do not come from tslint, tslint only reports warnings.
15105|I will reopen this. I have my settings so that I use Swiss date and number format. However the time in the menu is still showing with PM also the rest of the UI doesn't. I am not sure if this is correctly honored by the JS API. Need to test this under node.
15106|@egamma I opt to revisit this in April.
15107|Verified that the light bulb and a exclude message shows in the status bar.
15108|@egamma can you please verify.
15109|:+1:
15110|@dbaeumer can you help update the commenting in https://monacotools.visualstudio.com/DefaultCollection/Monaco/_git/MonacoLocalization?path=%2Fcomponents%2Fvscode-node-debug%2Fout%2Fnode%2FnodeDebug.nls.resx.lci&version=GBmaster&_a=contents
15111|The current one is quite good. `The indenting leaves some tabs/spaces in the left sometimes. Specially in cases of HTML.` `Cases like a blank line/row is also left as is and is not removed. You can have visual studio code settings for this whether to remove blank lines/rows` May be this is on purpose I guess. More, what is missing is `in-file/active-file code minification/uglifying/removing blankspaces etc for all supported languages`. A nice valueadd to have when having indenting/formating.
15112|@joaomoreno and you have the d.ts files (`tsd react-global react-native`) installed?  Do you get Intellisense when you use 'requires' (see below) instead of imports?  ``` js var React = require('react-native'); var { AppRegistry } = React; ```
15113|@aeschli this is only if it is easy to get a logical sorting order, no change is fine
15114|With the fix I now see a difference, but the difference does not make any sense to me:  `html.format.unformatted =  B`  ![2016-03-23 14-24-43](https://cloud.githubusercontent.com/assets/1898161/13986537/3c9eaaa8-f103-11e5-9388-297658702874.png)  `html.format.unformatted =  null`  ![2016-03-23 14-24-28](https://cloud.githubusercontent.com/assets/1898161/13986547/4410cf82-f103-11e5-8998-d67cf271d648.png)
15115|@xuyungit Thanks for the confirmation and your input. Much appreciated. @dbaeumer Thanks for the help and work. Also much appreciated.  I also wanted to mention that my build time overall, outside of vs code is also much faster now using TS 1.8.9.   I really appreciate the hard work put in by the TypeScript team and the VS Code team. Awesome stuff, both the product and the community.
15116|Verified by opening C:\users, folders like administrator are simply not shown and other look fine
15117|@leegee we do not allow to zoom out below 0, maybe this is what you try?
15118|@bpasero yeah, I can also verify the bug
15119|That's working but I don't know how to set the name of the configuration. It is launching the default or selected one. Could you help me a little more to be able to start the debugger with the configuration name I want to impose ?
15120|That is currently not supported - this command will just launch the currently selected one. If you want to launch a configuration with a specifc name please create a new feature request issue.
15121|Is there a way to set LF line endings as default?   I looked in Preferences > User Settings but didn't see a setting for this.  My Surface + Visual Studio Code are used as extensions of my Linux/Mac environment. I'll never need CRLF so I have to constantly change from CRLF to LF when I create new documents. If I forget to do this it causes trouble.
15122|"@edgr-sanchez  ``` json ""files.eol"": ""\n"" ```"
15123|@glen-84   Perfect, thank you!
15124|@bpasero Looks good to me, also verified out of workbench.  Your commit still has the bad bug number referenced so it will auto-close the other bug.  Bug looks severe so +1 for candidate
15125|Yeah, I guess that's more accurate.
15126|@alexandrudima maybe an issue with onig?
15127|duplicate of #4538
15128|actually this is also a dupe, of #3465
15129|After upgrading my node version on linux I no longer see this
15130|As spec'ed in the settings comment, 'null' defaults to all inline tags. B is one of the inline tags, so no difference on the formatting here. HR and A are also, that's why they were put on its own line in the first screenshot, but not in the second.  I verified that we correctly pass the options to beautify-html.
15131|I think tabs is basic on web editors. I dont understand why is a problem to put inside vscode this option. Sorry mi english.
15132|same as this? https://github.com/Microsoft/vscode/issues/3458
15133|I'm not sure -- but I can't zoom in or out.
15134|I was missing the tsd
15135|Closing as per commit
15136|Would it be possible to automatically escape glob characters, so this would work as expected as in, instead of asking to watch: /Users/workspaces/tests/myNewApp% $$ @! Tabs app/testsblah/  ask to watch something like: /Users/workspaces/tests/myNewApp% \$\$ @! Tabs app/testsblah/  If this is not supported, could you at least show a warning when this happens: - Sorry, but VS Code doesn't work well with this folder because etc.... So the user will understand what's happening?
15137|Chrome bug.
15138|Woopsie.
15139|Sorry for the confusion, this one is still open, the other one is fixed.
15140|+1 for a warning, the escaping needs to be supported in chokidar
15141|Can you attach a video showing this problem?
15142|I did verify this.
15143|@zhouhao27 Can you paste the code here that doesn't highlight?
15144|It's the emmet completion
15145|Good question - when I tried, I found that you were right, in that I could not make my text smaller because 12pt (I guess) is as small as it gets, but I _can_ zoom in using the keyboard shortcuts and the menu command.  Although the whole windows is zoomed, you know about that in another ticket.  I cannot use CTRL+mouse wheel, though -- is that by design, or should we re-title this ticket?  Thanks for your quick response -- I love the editor!  On 23 March 2016 at 15:47, Benjamin Pasero notifications@github.com wrote:  > Can you attach a video showing this problem? >  > — > You are receiving this because you were mentioned. > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/4612#issuecomment-200402166
15146|You can use the window.zoomLevel setting to zoom out more, but the ad-hoc zooming does not support that.
15147|Even worse is if you have `varName = `...`;`, the rest of the document after the second backtick is colorized incorrectly...
15148|So, mousewheel-scrolling would be a feature request?  On Wed, 23 Mar 2016, 16:49 Benjamin Pasero, notifications@github.com wrote:  > Closed #4612 https://github.com/Microsoft/vscode/issues/4612. >  > — > You are receiving this because you were mentioned. > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/4612#event-600574392
15149|Running multiple instances of VS Code with different locales is not supported according to Won't Fix https://github.com/Microsoft/vscode/issues/4596.
15150|Yeah, thats a valid one.
15151|By the way, it is sporadic, so will talk a while to repo
15152|This comment has been removed because it does not conform to the guidelines in the Code of Conduct for Microsoft open source projects, as covered here: [https://opensource.microsoft.com/codeofconduct/](https://opensource.microsoft.com/codeofconduct/)
15153|"```      From  Sublime Text, Preferences      // Exiting the application with hot_exit enabled will cause it to close     // immediately without prompting. Unsaved modifications and open files will     // be preserved and restored when next starting.     //     // Closing a window with an associated project will also close the window     // without prompting, preserving unsaved changes in the workspace file     // alongside the project.     ""hot_exit"": true, ```  Quite frankly the hot_exit feature of SublimeText is so important to me That I won't even consider another editor that doesn't have the feature.  One reason this is the case, is my machine sometimes doesn't come out of sleep so I just do a forced reboot - no problem as all of my changes will be preserved.  Also note:  the hot_exit feature also preserves the undo stack for each file this is quite valuable."
15154|Sorry for the delayed response on this issue.  We use blue within the status bar because it's consistent within the family of Visual Studio.  We may in the future open this and other things to customization via user style sheets.  Hopefully that will address any concerns you have with the color.
15155|@peterblazejewicz @neilyoung Thanks for the help. However, I would recommend that this issue perhaps be reopened because upon doing an update by the system to C# as an extension it threw everything out of wack.    I uninstalled and reinstalled repeatedly not figuring out what the issue was.    not until i did the -p for the default library runtime did the application then proceed to work.    Thanks for the help as always.
15156|Adding back verified as the new issue is captured in #4509
15157|Verified: ![image](https://cloud.githubusercontent.com/assets/2193314/13998250/69612940-f0f3-11e5-88d2-2e0ac6469a77.png)
15158|I'm going to close this off as it has been a while. If you're still having issues try removing the vscode directory and cloning/setting it up again.
15159|duplicate of #224
15160|@hamenon this sounds like exactly what we need.  We will give this a try, and let you know how it goes!
15161|In addition, it will hold on to the previous language until you start debugging. After changing locale to Russian: ![zh-cntorussiantranslation](https://cloud.githubusercontent.com/assets/12900364/14001523/9260b22e-f103-11e5-907a-b1f791c67969.JPG) Then it is updated after running the debugger.
15162|@victorhooi - no specific updates to share yet.  hopefully we can get going on this in not too distant a future.  we'll likely build something that combines the best of what PTVS has along with what the OSS community has already produced.  the PTVS part requires untangling some very VS specific code so it can be used in both environments.  cheers.
15163|"This might be better: ""잡히지 않은 예외들"", the literal translation is ""exceptions not caught yet (but can be)"". Might not be the real programming term though."
15164|Native Korean, Here I come!  `[ ] Uncaught exceptions`  => `처리 되지않은 예외` looks natural.   https://msdn.microsoft.com/ko-kr/library/ac9f67ah.aspx uses same word.
15165|Thanks @sunglim! :+1:
15166|Error seems related to the shellshock bug, probably not that though since upgrading to the latest bash didn't change it (bash-4.3.42-3)
15167|+1
15168|Any js script syntax is not highlighted. Here is another sample:  ``` (function(){   'use strict';    angular.module('MyApp')     .directive('articleList',ArticleList);    function ArticleList() {     var directive = {       restrict: 'AE',       templateUrl: 'templates/article-list.html'     }      return directive;   }  })();  ```  But I build the latest **Code - OSS** from source code. It's no problem at all.
15169|thank you. i find that even though the nodejs to 4.3, it pops the same error. I don't know nodejs at all. Maybe I need to learn something about nodejs and back.
15170|One other tip, you could try installing nodejs from a package, I only just noticed they had them https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions
15171|Kind of seems like a Fedora issue, it's just strange that it only seems to happen when gnome-terminal is launched through Node.
15172|Interesting, thank you for explaining that @weinand. I agree that even more value would be had if separate debuggers were coordinated, but I disagree that such a thing is _necessary_ to get value out of multiple debuggers.  Again to my example, if I'm debugging a rails app & javascript, if I can place breakpoints in a controller and in the frontend right before an ajax request, it's not extremely necessary that control flow be automatically transferred from the js debugger to the ruby debugger or some magic like that... I can just wait for the ruby debugger's breakpoint to be hit.  And, as you say, debugging the same project in multiple windows gets a lot of the way there and is already planned, which will be nice.
15173|been using a fedora kde plasma 5.6 and doesn't have this issue but I had to use PR #3495 to specify `konsole` as KDE doesn't support the `gnome-terminal` or `x-terminal-emulator` out of the box
15174|As a new user to VS code, every day I accidentally merge the two-column layout into single-column layout when I intend to just close the document.   Ideally, the close button would close the document and another document would come in its place.  I think we need to address two other buttons in the top bar that have UX issues: - The **Split Editor** button only supports splitting a view into two, and lacks the reverse counterpart. The reverse counterpart would take on the role of changing layout to _1 column less_ - **Switch to Changes View** also doesn't have its reverse counterpart.  I know that existing VS code users are already adjusted to the behavior of the buttons, and I just wanted to point this out before I get accustomed to the current behavior. The buttons don't meet user's expectations (they don't offer affordability) and thus may evoke a negative feeling in other newcomers to VS code.
15175|"Running `gnome-terminal` through gnome-terminal launches a clean terminal:  ![image](https://cloud.githubusercontent.com/assets/2193314/14006194/1d88bed6-f128-11e5-8934-7ba1cc97738e.png)  It seems to be fine running through regular node too:  ``` node -e ""require('child_process').spawn('gnome-terminal',[],{cwd:'/usr'});"" ```"
15176|"@pflannery do you have the offending lines show up after running `env`?  ``` ... BASH_FUNC_module()=() {  eval `/usr/bin/modulecmd bash $*` } BASH_FUNC_scl()=() {  local CMD=$1;  if [ ""$CMD"" = ""load"" -o ""$CMD"" = ""unload"" ]; then  eval ""module $@"";  else  /usr/bin/scl ""$@"";  fi } ... ```"
15177|The env variables are added by the environment-modules package which can be removed using:  ``` sudo dnf remove environment-modules ```  Not sure what it does or if it's important yet though.
15178|Looks like the same issue.
15179|"As far as I can tell something like this is happening on c# files:  document opens displays starting at line 1 ""references"" padding is added in above variables & functions -> this causes document force scroll down ""references"" fade in"
15180|@Tyriar no it's clean on fedora kde plasma like you last screenshot
15181|"@pflannery I mean run something like this and see if there's output:  ``` bash env | grep BASH_FUNC_ ```"
15182|@pflannery Also do you have environment-modules installed by default on fedora kde plasma 5.6?  ``` yum list installed environment-modules ```
15183|"A hacky workaround that may end up being the way to go, removing the problem env variables from the spawned process:  ``` js var env = process.env; // clone instead delete env[""BASH_FUNC_module()=""]; delete env[""BASH_FUNC_scl()=""]; ```"
15184|+1 I can find files much faster with the icons!
15185|> Also do you have environment-modules installed by default on fedora kde plasma 5.6?  yes it does
15186|things like `BASH_FUNC_module()` dont exist at all in the env
15187|"> @Tyriar A hacky workaround that may end up being the way to go, removing the problem env variables from the spawned process:  ``` var env = process.env; // clone instead delete env[""BASH_FUNC_module()=""]; delete env[""BASH_FUNC_scl()=""]; ```  yeah I think this could be the only way. I cant seem to unset them"
15188|Marking as duplicate then: #3458
15189|Interestingly I can see the etc folder with notepad but not with VS Code. Since we do not do anything special I suspect an upstream issue.
15190|I tried to reproduce but cannot. Something in your system is maybe configured in a way that causes this?
15191|I can reproduce, @alexandrudima I am not sure what I am doing wrong here, in https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/files/browser/fileTracker.ts#L254 I am restoring the view state after loading the contents of the file, but the view state is the one captured a few lines before.
15192|Any success?
15193|"Closing this as I do not understand the steps, the attached screenshot shows the project switcher and it does not change anything in the explorer:  <img width=""644"" alt=""screen shot 2016-03-24 at 07 56 36"" src=""https://cloud.githubusercontent.com/assets/900690/14010508/0396cf7c-f196-11e5-8708-a8b4769e7478.png"">"
15194|"@thomastaylor312 @andersonferrari  when this crash happens you can use the Mac Console application to find the crash log:  <img width=""1414"" alt=""screen shot 2016-03-24 at 08 04 18"" src=""https://cloud.githubusercontent.com/assets/900690/14010617/08c57ce0-f197-11e5-9c79-16aef29b1bac.png"">"
15195|This issue was moved to Microsoft/vscode-filewatcher-windows#7
15196|This issue was moved to Microsoft/vscode-filewatcher-windows#8
15197|@unional I assume this is with a linter extensions?
15198|I believe you investigate in a dupe of this
15199|@egamma fyi
15200|@dbaeumer unsure who the nls contact is
