25501|Example comparison between the way Sublime shows just the selected folders: ![image](https://cloud.githubusercontent.com/assets/9698639/15986054/ff65b460-2fc3-11e6-9db2-86158bb7b86d.png)  And how VS Code forces me to open the parent folder to have multiple folders in same editor: ![image](https://cloud.githubusercontent.com/assets/9698639/15986072/44ffdc12-2fc4-11e6-9b11-a9d9d000b9b6.png)
25502|Currently Ctrl + +/- zooms the entire UI. I hope that behavior will change too? That is, only the code area font size will change?
25503|@troplin yes we are working on a fix for this. what is not so clear is what changed in 1.2 that makes this more obvious...
25504|Duplicate of #1758.
25505|Duplicate of #1758 (?)
25506|@joaomoreno When I checked the menu, it said `19:17`, and about 10 mins later it said `19:27` -- why is VS Code checking for updates so often? Surely once every 24 hours is enough?
25507|Fixed in latest insider build 1.3.0-insiders 7d56f33e508930d3727064481a7525344a227f10
25508|"> We arrived at the following themes for May:  Should be `June`. =)  > TypeScript/JavaScript - Explore project level errors/warnings  Is this just ""give tslint etc. the folder name instead of the file name"", as opposed to VS Code actually keeping track of errors/warnings during an ""indexing"" process (where each file is processed separately)?"
25509|"@Tyriar  Yes. I think vscode can't find the cli. Those extensions are working great on Windows 10 (same versions - ext+vscode+node+npm). the NativeScript error appears every time I open vscode or open a project folder. the ESLint error appears every time I open .js file: ""Failed to load eslint library. Please install eslint in your workspace folder using 'npm install eslint' or globally using 'npm install -g eslint' and then press Retry."" `http://imgur.com/nHiEAUE`"
25510|Not exactly dup but related, the issue he has is when declaring maps, which i also have (just checked my `$colors` map), but mine is when using the map with an `@each` to generate styles, however it's worth mentioning that the base of both is that `map` syntax is still not supported.
25511|@Luchillo It might work in the latest insider build, see https://github.com/Microsoft/vscode/issues/7434#issuecomment-225379421.
25512|@asifm I thought about including that as well, but I wanted to leave this simple. I think it is better to file a separate issue for that, I would be more than happy to implement it once this PR is merged üòÉ
25513|Ok, but for now i will stick with the style extension mentioned, i'll test when the official release is out.
25514|"The solution is:   Visual Studio Code  Update .vscode/settings.json with the following:  ""typescript.tsdk"": ""<path to your folder>/node_modules/typescript/lib"" More information is available at VSCode documentation.  https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/Nightly%20Builds.md#visual-studio-code"
25515|"@kisstkondoros Looks like there's an open issue #1348 and some differences of opinion. I like what @purplecabbage suggested: ""Please map ctrl+- to editor view, or better yet, whichever view has focus."""
25516|"@glen-84 thanks for catching the typo.  > Is this just ""give tslint etc. the folder name instead of the file name"", as opposed to VS Code actually keeping track of errors/warnings during an ""indexing"" process (where each file is processed separately)?  This is an investigation to add scalable project level errors to the typescript language service and tsServer. This is independent of tslint."
25517|Duplicate of https://github.com/Microsoft/vscode/issues/6738
25518|This could very well be fixed with transition to xterm.js, need to wait for repros in insiders
25519|I'll go ahead and close this one if you think it's a dupe
25520|@shubhamsizzles there were multiple levels of duplicates, follow the UI theme issue here https://github.com/Microsoft/vscode/issues/3112
25521|**@yisibl**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
25522|This feature is so important to Polymer.
25523|In Sublime, `Ctrl + J` used to make multiple lines of text into one line.
25524|"I tried to attach an example as a zip file, but when I try to attach a zip file i get a message   > Unfortunately, we don‚Äôt support that file type. with a PNG, GIF, JPG, DOCX, PPTX, XLSX, TXT, PDF, or ZIP.   ## ???  Anyway, I'll write it down here :-(  ## Project structure  ``` root  |  +--> .vscode  |      |  |      +--> launch.json  |      |  |      +--> tasks.json  |  +--> program.cs  |  +--> project.json ```  ## launch.json  ``` json {     ""version"": ""0.1.0"",     ""configurations"": [         {             ""name"": "".NET Core Launch (console)"",             ""type"": ""coreclr"",             ""request"": ""launch"",             ""preLaunchTask"": ""build"",             ""program"": ""${workspaceRoot}/bin/Debug/netcoreapp1.0/ConsolePassingParameter.dll"",             ""args"": [""Foo""],             ""cwd"": ""${workspaceRoot}"",             ""externalConsole"": false,             ""stopAtEntry"": false         },         {             ""name"": "".NET Core Attach"",             ""type"": ""coreclr"",             ""request"": ""attach"",             ""processId"": 0         }     ] } ```  ## tasks.json  ``` json {     ""version"": ""0.1.0"",     ""command"": ""dotnet"",     ""isShellCommand"": true,     ""args"": [],     ""tasks"": [         {             ""taskName"": ""build"",             ""args"": [""--no-incremental""],             ""isBuildCommand"": true,             ""problemMatcher"": ""$msCompile""         }     ] } ```  ## program.cs  ``` cs using System;  namespace Playground {     public class Program     {         public static void Main(string[] args)         {           Console.WriteLine(""*  Hello World  *"");           Console.WriteLine(""Given Args:"");           foreach (var arg in args)           {             Console.WriteLine(""- "" + arg);           }           Console.WriteLine(""END"");         }     } } ```  ## project.json  ``` json {   ""version"": ""1.0.0-*"",   ""description"": ""Demo Console Application"",    ""buildOptions"": {     ""emitEntryPoint"": true   },    ""tooling"": {     ""defaultNamespace"": ""ConsoleDemo""   },    ""dependencies"": {     ""Microsoft.NETCore.App"": {       ""type"": ""platform"",       ""version"": ""1.0.0-rc2-3002702""     }   },    ""frameworks"": {     ""netcoreapp1.0"": {       ""imports"": ""dnxcore50""     }   } } ```"
25525|I am geting this error when running on a case sensitive partition on osx its working fine if I run it on a case insensitive partition.
25526|"I am experiencing similar problems with a full TypeScript project.  The relevant software versions are: - Visual Studio Code: 1.2.0 - Node.js: 5.10.0 - OS: Windows 10  I have the following `tsconfig.json`:  ``` {   ""compilerOptions"": {     ""allowJs"": false,     ""emitDecoratorMetadata"": true,     ""experimentalDecorators"": true,     ""forceConsistentCasingInFileNames"": true,     ""module"": ""commonjs"",     ""moduleResolution"": ""node"",     ""noEmitOnError"": true,     ""noImplicitAny"": true,     ""noImplicitReturns"": true,     ""outDir"": ""dist"",     ""pretty"": true,     ""target"": ""es5"",     ""sourceMap"": true,     ""sourceRoot"": ""lib""   },   ""files"": [     ""lib/main.ts"",     ""typings/index.d.ts""   ] } ```  When opening files from the `lib` folder I got random errors about modules not being found. In other words, sometimes I got the errors, sometimes not.  After some time, I noticed it stabilized, i.e. no more errors were shown."
25527|"i had same problem. but I had resolved this problem. I tried following environments. and its OK. - OS : windows8.1 - vsCode : v1.2.0 - node : v6.2.1 and v5.10.1 and v4.4.3 - using port : 80  `my launch.json`  ``` {     ""version"": ""0.2.0"",     ""configurations"": [         {             ""name"": ""Launch"",             ""type"": ""node"",             ""request"": ""launch"",             ""program"": ""${workspaceRoot}/bin/www"",             ""stopOnEntry"": false,             ""args"": [],             ""cwd"": ""${workspaceRoot}"",             ""preLaunchTask"": null,             ""runtimeExecutable"": null,             ""runtimeArgs"": [                 ""--nolazy""             ],             ""env"": {                 ""NODE_ENV"": ""development""             },             ""externalConsole"": false,             ""sourceMaps"": true,             ""outDir"": ""${workspaceRoot}""         },     ] } ```  this point is   `""program"": ""${workspaceRoot}/bin/www"",`   <br>   Step -  you must `stop` _npm start_ - start debug with `Launch`  that's all"
25528|@johnnyPescarul any output when you try to run `code --verbose` from the command line in this case?
25529|this is a Linux bash setting, and not vscode/terminal related.  in bash, input:  ``` $ LS_COLORS='ow=01;36;40' $ export LS_COLORS  ```  this gives you bold (01) cyan (36)  dir names with black (40) background  for more info, see for example: http://askubuntu.com/questions/466198/how-do-i-change-the-color-for-directories-with-ls-in-the-console  hope this helps. /*Karl
25530|ÈáçÂ§çÁöÑÂèçÈ¶à#7062
25531|By analyzing the blame information on this pull request, we identified @isidorn and @alexandrudima to be potential reviewers
25532|The colors are `LS_COLORS` but the color set is defined in vscode.
25533|@marvinhagemeister Sorry, no work has been done on adding SCSS map support recently. Bet yes this is a dup of #1758
25534|Sorry, there hasn't been any work on SCSS map support yet.
25535|Start debug from the debugger window. I suppose you are referring to a known issue #7291.
25536|"Make sure you don't have any `""isWatching"": true` in a task that should not be watchable."
25537|[`launch.json`](https://code.visualstudio.com/docs/editor/debugging) has an option called `cwd` which sets the current working directory.
25538|"Use `""suppressTaskName"": true`, inside task declaration (https://code.visualstudio.com/Docs/editor/tasks#_task-specific-properties)."
25539|Can't reproduce on Ubuntu 16.04 LTS. `Open Folder...` works as intended. Providing reproduction steps might help.
25540|https://blogs.msdn.microsoft.com/visualstudioalm/2016/03/10/experimental-net-core-debugging-in-vs-code/ Please read comments ^
25541|http://stackoverflow.com/questions/37062818/how-can-visual-studio-code-on-osx-import-sln-csproj-and-run
25542|https://github.com/OmniSharp/omnisharp-vscode/issues/283#issuecomment-217493910
25543|"I think, these are the default colors as defined in `dircolors`in bash itself. when I print out `dircolors`in bash directly, I get ""`ow=34;42`"", that is green background (42).  when I change globally the colors in my standalone terminal, vscode does not adopt that, so you are correct.... I am nearly a complete noob in Linux, but wouldn't it be the best to define some 'batch' with `LS_Colors`defined and other goodies and run that when you toggle the integrated terminal?"
25544|vs 2015 win 7 system  Failed to load the dll from [C:\Program Files\dotnet\hostfxr.dll], HRESULT: 0x80070057 ![image](https://cloud.githubusercontent.com/assets/6257587/15992900/4952d78c-310a-11e6-9732-6aa021cf4b3b.png)  how to do it? THX~
25545|"It is a hot feature! I suspect, it will speedup the adoption of the VSCode itself.   Desired behavior for TypeScript: - Identify all project *.ts and *.d.ts files including referenced ones - Collect all exported names from those files - When identidier is not resolved suggest importing it from the list of possible files - On import maintain `import {member1,... memberN} from ""../../relative/path""` for project files and `import {member1,... memberN} from ""module/path""` for node modules  This scenario is not suited well for CommonJS `export = smth` style exports, nevertheless, it would be great for the new ES6 module style exports that eventually replace the old style.  @dbaeumer you are our hope!"
25546|@alexandrudima After having disabled `clip-x` I no longer had the problem. I guess the problem wasn't with VSCode after all.
25547|Neither `Cmd Alt I` not `Cmd Shift P` work for me.  Here is the output from `env`  ``` Hayaku:~ rodney$ env TERM_PROGRAM=Apple_Terminal SHELL=/bin/bash TERM=xterm-256color TMPDIR=/var/folders/nj/ndmd_2p519vgqdm9f4f_r1s00000gn/T/ Apple_PubSub_Socket_Render=/private/tmp/com.apple.launchd.t9xAURoMvN/Render TERM_PROGRAM_VERSION=361.1 TERM_SESSION_ID=AD0270EE-060E-42FB-9566-BEE13972CCA6 USER=rodney SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.yOkU5Rw7bX/Listeners __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin PWD=/Users/rodney LANG=en_US.UTF-8 XPC_FLAGS=0x0 XPC_SERVICE_NAME=0 SHLVL=1 HOME=/Users/rodney LOGNAME=rodney _=/usr/bin/env ```
25548|@karlti I'd prefer not to mess with the user's current configuration, rather try tweak the colors so they don't look so bad with the defaults.
25549|Ok, It is understood. But in visual studio, in such case, application will ask me to choose three options - Discard : Discard current edited state - Overwrite : Ignore file system change but use my edited state - Cancel : do nothing just let it open in edited state (VS Code case)
25550|@warpdesign we are extracting VS Code's markdown support to a separate extension and we've implemented the theme detection both in the extension and vscode side. Please keep an eye on https://github.com/Microsoft/vscode/issues/6106, once June release is out, you'll get what you want.
25551|Yes, we have another issue to confirm in that case.
25552|A number of days has past without answer on the questions asked. I am thereby going to close this issue to clean up our backlog of issues. Once you can answer on the questions, the issue can be reopened again. Thanks for understanding this process!
25553|Unfortunately not... You could use our [Insiders build](https://code.visualstudio.com/blogs/2016/05/23/evolution-of-insiders) for a while, which already has the fix.
25554|For some reason, each of those folders seem to be git repository in themselves (they contain a `.git`). At the same time, the folder in which they are contained is also a git repository (containing a `.git`).  This is very strange and an invalid git scenario, unless you are attempting to create git submodules.  I suggest to either remove the top level `.git` folder in the containing folder, and open each one of those folders in Code; or vice-versa: remove each of the subfolders' `.git` folders and keep opening the containing folder.
25555|That looks as if oniguruma was compiled natively with the wrong node version. I find weird that the error message shows `/node_modules/vscode-textmate/node_modules/oniguruma` instead of `/node_modules/oniguruma` given we now flatten the node modules.  @joaomoreno Do we delete the old node_modules folder before installing an update?  @Tyriar Can you check what your fs looks around the `node_modules` folder? I think it should be flat, otherwise it means the update is broken (leaving old nested `node_modules` behind).
25556|Maybe launching with `--disable-gpu` would help in this case ?
25557|This issue was moved to Microsoft/TypeScript#9115
25558|@Houfeng What language are you formatting? Can you also provide a small sample source that can reproduce the problem?
25559|Let's track it in #7027
25560|Moving to the TS team since the error is generated by the tsserver. I have no idea what makes the difference between tsserver and tsc here.
25561|This issue was moved to Microsoft/TypeScript#9116
25562|It's conflict with chinese input, and no any tips. I think a simple Q&A page is useful for users.
25563|This issue was moved to Microsoft/TypeScript#9117
25564|The formatter is maintained by the TypeScript team. Moving.
25565|This issue was moved to Microsoft/TypeScript#9118
25566|Yep that works around the problem. Somehow I ended up with a .git folder in my Documents folder, meaning all the files in all my Documents subfolders were listed as untracked. When I deleted it, the problem went away. Yay!  Would of course still be good if VS Code didn't try to index all of those files - and I'm still puzzled why it only started with 1.2 - but at least I can switch back from Atom now! :-) And so can @rockymontana if he had the same issue...
25567|Rename operation is provided by the TS server. Moving...
25568|This issue was moved to Microsoft/TypeScript#9119
25569|Let's track this in #7390
25570|Formatter is maintained by the TS team. Moving...
25571|Let's track this in #3828
25572|This issue was moved to Microsoft/TypeScript#9120
25573|JS language server is maintained by the TS team. Moving...
25574|This issue was moved to Microsoft/TypeScript#9121
25575|TSX formatter is maintained by the TS team. Moving...
25576|This issue was moved to Microsoft/TypeScript#9122
25577|This is where it's defined. I wonder if this happens in vscode too and if not, why not...  https://github.com/Microsoft/vscode/blob/master/src/vs/editor/browser/viewParts/lineNumbers/lineNumbers.css#L22
25578|@Artazor the actual implementation of that feature has to come from the TS team which maintain the tsserver which we use for TS language smartness. They have several bugs for this: - provide quick fixes on unresolved imports - provide code complete in import statements (e.g. the module / file part)
25579|The repository is: https://github.com/Microsoft/TypeScript
25580|@marvinhagemeister The `editor.tabSize` setting is a fallback value in case detecting indentation fails (auto-detection can be controlled via `editor.detectIndentation`). What is the bottom area showing? Is the formatter respecting what is shown there?  ![image](https://cloud.githubusercontent.com/assets/5047891/15999315/1bb40d24-3145-11e6-91d1-dc583b490ad0.png)
25581|Moved to OmniSharp/omnisharp-vscode#429
25582|> @Artazor the actual implementation of that feature has to come from the TS team which maintain the tsserver which we use for TS language smartness. They have several bugs for this: >  > provide quick fixes on unresolved imports > provide code complete in import statements (e.g. the module / file part)  Why / how is Webstorm able to do it? That seems to work pretty fine.
25583|@JimiC thanks for jumping in. It is exactly the way to address the problem. Closing.
25584|I tried today and seems it work as expected.  ~~Maybe was related with some comand used friday. I will investigate the posible cause of that behavior.~~  EDIT:   The problem is with ionic client. I was running `ionic serve` that watch src directory.  Steps to reproduce: 1. Toggle  integrated terminal. 2. Run ionic serve on a ionic project. 3. Create a new folder, with a new file in a watched directory (ie. www/js/test/test.js). 4. Drag and drop that folder into another folder inside a watched directory (ie. www/js/second/test/test.js). 5. That breaks ionic cli, showing an error in terminal, and you return to prompt. 6. Now, you can use terminal normally, but if you type exit it can not be reloaded.  I tried in a blank project, and error displays but you can exit normally. I am using babel transpiler in my current project so, I should be a specific issue with livereload related to ionic and not to VS Code.
25585|@Artazor didn't make myself clear enough: this is not a technical problem. The TypeScript team is working on addressing it. I The coding of that feature has to happen in this https://github.com/Microsoft/TypeScript and not in VS Code itself. We use the tsserver from that repository via npm inside VS Code.
25586|@Tyriar You are right.. all panels are having that behavior now (toggle display and focus). I think not toggling the display would be better user experience. Switching focus between active editor and panels like Problems, Terminal and Debug would be really helpful. Instead of inventing a new command for this, it would be good to slightly change the existing command to do this. This will also be consistent with views behavior.  @bpasero Yah, I do not think of any use case either. But I think this would cause some inconsistency.. To dismiss any panel, user can use Ctrl/Cmd + J.  Do you think is there any loss of functionality if we make Output panel consistent with other panels?
25587|@Jonatthu which version of the tsc are you using. I suspect some @next version. If so using the tsdk variable is the right thing to do since VS Code in the box ships with the stable 1.8.x branch which doesn't have that feature yet.
25588|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/81
25589|See that quite frequently on workspaces that don't have a git folder.
25590|@marvinhagemeister any extension installed. VS Code doesn't offer a format on save of JS files and triggering format from the context menu in the editor doesn't format the code that way.
25591|wow - I always thought it's by alphabet...
25592|@mocanu-razvan I am pretty confident that this is caused by our files section. Adding a files sections limits our project to those two files and if you open other files not referenced by those two files then they end up in an isolated virtual project. You either need to leave out the files section (then all .ts files underneath the tsconfig.json file are automatically considered part of the project) or you need to list all files of your project in that section.
25593|@BurtHarris can you provide your tasks.json file?
25594|@dbaeumer There is little custom control about accept characters, _internally_ we have a property [`noAutoAccept`](https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/modes.ts#L387) which should be set to false for textual completions
25595|@theor [This](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/html/browser/webview.ts#L121) is the smallish list of variables that you can use. Their value is derived from the current theme and changes when the theme changes.
25596|True. I couldn't reproduce that behavior.
25597|@warpdesign The view your html is rendered in uses some css [variables](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/html/browser/webview.ts#L121) which hold values for the background and foreground colors. Would those be sufficient?
25598|@dbaeumer @JimiC Oh well, I fell stupid for not having thought of that! It was indeed an extension that caused this behaviour.  Thanks for your help!
25599|Let me know what the outcome is in case someone else reports a similar issue.
25600|This issue was moved to Microsoft/TypeScript-TmLanguage#184
