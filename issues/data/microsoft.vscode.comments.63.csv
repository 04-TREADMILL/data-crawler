6201|Disagree it is a duplicate, maybe related but not duplicate.   Reason being I do not use GitHub Desktop at all (I don't have it installed). I could workaround it by doing `git config --global credential.helper wincred` and restarting VSCode, however that is not a fix. I don't want to use credential helpers - I just want to type it in.
6202|I have never modified my theme from the default. Did the default theme change recently?
6203|I don't think that one is user friendly at all. I'm not even sure it can do what I asked for.
6204|I just saw this when simply opening `product.json` via quick open.  ![image](https://cloud.githubusercontent.com/assets/22350/12296173/4e2b0368-ba06-11e5-80ea-deb3bd5648ab.png)
6205|"@jrieken any chance your changes with the ""weak"" module cause code editor models to get disposed? My understanding is that only models with a scheme that are registered to the content providers would get auto disposed."
6206|when I get the folder list and output it .the folder name contains chinese.  then the output like this:  ['$RECYCLE.BIN', 'itunes', 'kankan', 'python', 'System Volume Information', 'tools', 'Ѹ������']  I can not find any setting about encoding for output panel.
6207|You have to file this as feature request against https://github.com/Microsoft/TypeScript-TmLanguage
6208|![image](https://cloud.githubusercontent.com/assets/22350/12296396/add8dece-ba07-11e5-96d0-921a0c8e4b6b.png)  ![image](https://cloud.githubusercontent.com/assets/22350/12296415/cca04b1c-ba07-11e5-85db-6b5ae625382b.png)
6209|This issue was moved to textmate/sql.tmbundle#13
6210|Duplicate of #1986
6211|I see, you don't want to compare file by file, but an overview of what has changed between two commits.  Marking it as duplicate of #68
6212|@mattblagden Thank you for the PR, I used it as a great inspiration source for bcd90ace2111805cd91c0043dd118050457d6276, which adds this under an editor configuration option. It is behind an option due to my concerns of this affecting other cases we support (see https://github.com/Microsoft/vscode/issues/192#issuecomment-171270723)
6213|Kudos to @mattblagden for his PR #1510 that I used as a great inspiration source. :heart:
6214|Seems to work in the latest ![image](https://cloud.githubusercontent.com/assets/6461412/12296623/25c85562-ba09-11e5-8c05-434d750b1257.png)
6215|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/29
6216|Reproduced. Snippet  ``` ---- test1  : dsd test2  : abc-def test-3  : abcdef test-4  : abc-def ```
6217|I personally would prefer to keep things simple:  > `vscode.engine` is required and must be some specific value if your extension uses `vscode` api  Perhaps we should do the following: - as soon as we release VSCode version X, make a tag for it in github - immediately afterwards deliver to master a version bump to Y such that we never build by accident or intentionally version X again  The two above points are good practice IMHO.  Then: - an extension builder that wants to work against VSCode/master modifies the `engines.vscode` to `^Y` - the `vscode.d.ts` download tool can fetch https://raw.githubusercontent.com/Microsoft/vscode/master/package.json and download master if the version in there matches `Y`
6218|This issue was moved to textmate/yaml.tmbundle#11
6219|@ricmed205 You have to give more information on what was in your package.json.
6220|@joaomoreno why not just add a dropdown on the git tab. Where you can choose which branch you want to compare to? The default one is comparing to HEAD as it is right now. It would solve a very big problem.
6221|Can you paste a code sample where you see this?
6222|"@joaomoreno Browsing always works but installation failed. I've tried the ""http.proxyStrictSSL"": false but it I get the same error.  Also, I've manually downloaded a vsix package from the gallery, and I was able to install it. (but i guess my navigator proxy is somehow different, or apply different rules, from my environment proxy)"
6223|@variab1e When commenting out blocks of code, I personally always choose `//` via `Ctrl+/`. The reason I do it is that `//` can comment out block comments and it is cumulative:  ``` javascript     // /**     //  * Returns the column for the text found at a specific offset inside a rendered dom node     //  */     // getColumnOfNodeOffset(lineNumber:number, spanNode:HTMLElement, offset:number): number;      // // /**     // //  * Let the line know that decorations might have changed     // //  */     // // onModelDecorationsChanged(): void; ```  I am not sure why you choose to comment block of codes with `/**`. Why not use `/*` ?
6224|@joaomoreno Today I hit again while developing (no sleep-wake cycle):  ``` [15:14:22] 'watch-client' errored after 5.17 h [15:14:22] Error: EISDIR, open 'c:\Alex\src\vscode\out\vs\workbench\browser\media\octicons'     at Error (native) ```  This folder is no longer in source, so I have a feeling the watch task that copies resources to `out` does not handle folder deletion properly?
6225|Excellent, one step closer. Wanna try [this one](https://ticino.blob.core.windows.net/build/0e17d138ca2e7f5a342e049836a2b2b0beb54685/VSCode-win32.zip?st=2016-01-12T14%3A43%3A00Z&se=2016-01-19T14%3A43%3A00Z&sp=r&sv=2015-02-21&sr=b&sig=8F9%2BNvY94xaMZKEtGfXDc4QEXH%2Fn26dXs1%2BnMIqjHm8%3D)?
6226|@aldanor This seems to be the issue reported when the bug was reopened. Please give [this build](https://ticino.blob.core.windows.net/build/0e17d138ca2e7f5a342e049836a2b2b0beb54685/VSCode-win32.zip?st=2016-01-12T14%3A43%3A00Z&se=2016-01-19T14%3A43%3A00Z&sp=r&sv=2015-02-21&sr=b&sig=8F9%2BNvY94xaMZKEtGfXDc4QEXH%2Fn26dXs1%2BnMIqjHm8%3D) a try. Let me know if you still get the issue.
6227|@bleggett Excellent. Try [this one](https://ticino.blob.core.windows.net/build/0e17d138ca2e7f5a342e049836a2b2b0beb54685/VSCode-win32.zip?st=2016-01-12T14%3A43%3A00Z&se=2016-01-19T14%3A43%3A00Z&sp=r&sv=2015-02-21&sr=b&sig=8F9%2BNvY94xaMZKEtGfXDc4QEXH%2Fn26dXs1%2BnMIqjHm8%3D) now.
6228|Yes, +1 for updating our version in package.json as soon as we release. We currently have `0.10.6` in there although we are already working on `0.10.7`, though that is not yet released. To be correct, it would need to be something like `0.10.7-pre` (= pre release). Is our extension validator fit for pre releases?  I think it is a fair fallback for the vscode.d.ts script to check if the version specified matches with master and then also picking master if that is the case.
6229|I have just installed the angular.js snippets extensions. Thank you very much! It's working now.
6230|@bpasero Pushed fix for undo behavior in 2cdf977a3404f3e3a5d9600b0c50deb3255b2d71
6231|I fired new builds for Win and Mac.
6232|thanks
6233|I also tried with   ``` /**  *  */ ```  Can you try to debug it with the developer tools as I described in the comment above?
6234|@alexandrudima nice thanks!
6235|@alexandrudima fyi
6236|+1 our master package.json should already be `0.10.7` or `0.10.7-pre`.  `0.10.7-pre` should work just fine, there's even unit tests for that: https://github.com/Microsoft/vscode/blob/8f35cc4768393b25468416829e980d7550619fb1/src/vs/platform/plugins/test/node/pluginVersionValidator.test.ts#L104
6237|@nomenon First issue is https://github.com/atom/language-csharp/issues/47 Second is likely https://github.com/atom/language-csharp/issues/46
6238|"I have pushed a fix for the vscode.d.ts module to support picking up our version on master and I pushed 0.10.7 as version to master. I am not sure we need the ""pre""-tag because we are not publishing VSCode to NPM and in fact we are using 0.10.7 as if it was already released (just nightlies). I am fine with either pre or not pre and both should work now.  @jrieken if you set your engine to 0.10.7 things should work and the vscode.d.ts picked up from master."
6239|:fireworks: Official fix will come with the next release!
6240|do you have a project.json file or a  set of csproj/sln files? otherwise it won't work
6241|Pull requests are more than welcome! Wanna give it a try?
6242|Yes, there has been changes to the default themes to make them more consistent to the Visual Studio default themes. I guess that's when the change happend. Sorry for that.
6243|:+1: This is a great request.
6244|@pcgeek86 Sorry about that. I didn't realize we ship by default with `cmd+k down` bound to `workbench.files.action.openNextWorkingFile`. This works for me on Windows on our master version, but I will try this on a mac when I get my hands on one.
6245|We decided to make fuzzy matching the default for our next release and remove the need of setting this option.
6246|This worked for me.  Thanks!
6247|Hey @weinand, I'll review and get back to you when I have a moment to check.
6248|@Alphapage VSCode uses [vscode-textmate](https://www.npmjs.com/package/vscode-textmate) that in turn uses [oniguruma](https://www.npmjs.com/package/oniguruma) that contains [Oniguruma 5.9.6](https://github.com/atom/node-oniguruma/tree/master/deps/onig).  One thing that could go wrong is that `<` should be replaced with `&lt;` if you use xml as the file format (we also support JSON, but there you need to escape even more):  ``` <key>match</key> <string>--(?!-)(?&lt;!\---).*\n</string> <key>name</key> <string>comment.line</string> ```  ![image](https://cloud.githubusercontent.com/assets/5047891/12298860/804b82c4-ba14-11e5-9671-2e7cf22ab5d8.png)  I think most TM syntax authors use YAML as the input language and then have a tool that converts YAML to plist XML. Here is for example the TypeScript syntax authored in YAML: https://github.com/Microsoft/TypeScript-Sublime-Plugin/blob/master/TypeScriptReact.YAML-tmLanguage
6249|Pushed a change to enable this and use our scorer for the sorting, lets see how it goes.
6250|Sorry for my mistake. Thank you very much for your help.
6251|You got me.
6252|works!
6253|This is horrible! Very sorry about it!
6254|@joaomoreno Woot, thanks, that works fine.
6255|:fireworks: Fix will be out with the next release of VS Code.  Many thanks to all that put up with this ping-pong! :beers:
6256|related to #580
6257|@cfjedimaster You should use a node module for this, like https://github.com/xavi-/node-copy-paste
6258|closing a duplicate of #1308
6259|Thanks - related/unrelated question: why is this a `part` and not just a `ui` element like others (actionbar etc)
6260|Happy I could help! :+1:
6261|@heaths I'm also loving Hack :+1:   See chrissimpkins/Hack#78.  Please update to Hack v2.011 or higher.
6262|"@aeschli   ``` json {     ""name"": ""js-next"",     ""displayName"": ""Javascript Next"",     ""description"": ""Javascript Next Highlighting"",     ""version"": ""0.0.1"",     ""publisher"": ""ricmed205"",     ""engines"": {         ""vscode"": ""^0.10.1""     },     ""categories"": [         ""Languages""     ],     ""contributes"": {         ""languages"": [{             ""id"": ""js"",             ""aliases"": [""JavaScript Next"", ""js""],             ""extensions"": ["".js"","".htc"","".jsx""],             ""configuration"": ""./js.configuration.json""         }],         ""grammars"": [{             ""language"": ""js"",             ""scopeName"": ""source.js"",             ""path"": ""./syntaxes/js.tmLanguage""         }]     } } ```"
6263|The root cause is a github authentication issue, if we address #490, then this issue should be addressed as well. I've reopened the issue so that we can verify this.
6264|this is a bug in the extension: https://github.com/felixrieseberg/vsc-travis-ci-status/issues/5
6265|I've pushed https://github.com/Microsoft/vscode/commit/f704f917aed99222603ab041f86e05fe5f52d7ab work around this
6266|Ah ok :+1:
6267|@dbaeumer Is there anything I need to do to update vscode after upgrading my global TypeScript? I'm testing out a TypeScript 1.8 feature that allows type parameters to reference other type parameters like so:  ``` interface A<T, U extends T> { } ```  But the editor complains about this, even though tsc doesn't:  > main.ts(1,16): error TS2313: Constraint of a type parameter cannot reference any type parameter from the same type parameter list.
6268|A set of 'scopes' / 'escapes' could be provided for comments, primarily that triple slash enables a 'line of code' within a comment, where intellisense could be available.
6269|@chrisdias Is there a workflow right now for using a newer version of TypeScript than the one bundled into VSCode? I want to work with TS 1.8 features, but the editor seems to be tied to 1.7.5.   Regarding the argument of users being productive, I don't see why you couldn't factor these into external packages and simply have them installed by default. This would still allow users who want to play with newer features to fork and edit the packages providing these language features (and heck, even feed this back as a PR). The experience for someone who installs and opens up VS Code to work on some JS/TypeScript for the first time is not degraded in any way.  It would also help make it easier to work on new features for these core language services that aren't available at the moment. An example is autofixes for missing imports.
6270|"After the first `else`:     ``` extends layout  block content     .row         .col-sm-6             h3 Search     .row         .col-sm-12             form(method='get', action='/customer/search/')                 .row                     .col-sm-12                         .form-group                             if q                                 input(type='text', id='q', value='#{q}', name='q', class='form-control', placeholder='e.g., brooklyn coffee', required)                             else                                 input(type='text', id='q', name='q', class='form-control', placeholder='e.g., brooklyn coffee', required)                         .form-group                             input(type='submit', value='search', class='btn btn-success pull-xs-right')     | <br>                             if restaurants         if q && restaurants.length == 0             .row                 .col-sm-12                     .alert.alert-danger(role='alert')                         | <strong> 0 results </strong> Try to make your search term broader...         else             .row                 .col-sm-12                     if q                         .alert.alert-success(role='alert')                             | <strong> #{ restaurants.length } results </strong> Enjoy!             include restaurants-loop ```"
6271|yeah, #580 is about scopes et al - we don't have it yet in the ext host
6272|I agree - tho it won't be a special event but invoking a command
6273|Respectfully I disagree. I think the Editor can do more to enable extension developers to be productive. Accessing the clipboard is - imo - not something I should have to go to Node for. It really should be baked in.
6274|my extensions folder is empty. I tried reinstalling again still same issue.
6275|@masaeedu Yes, you can use newer versions of typescript by setting the `typescript.tsdk` setting, see [here for more information](https://code.visualstudio.com/updates/v0_8_0#_languages-typescript-16-support).  putting the javascript/typescript language service in its own repo is something that we can consider. its not a problem for packaging the VS Code distro, but it becomes more cumbersome when you want to clone, build, and run the `vscode` repository as you would need to grab the core language service from elsewhere.    @egamma thoughts?
6276|@chrisdias Awesome, thanks! Regarding the other issue, does the rest of the code have build time dependencies on the typescript extension?
6277|@egamma how is this different from stop debugging? i know what it would do, but from an intent perspective, why would i choose one over the other?  do i have to make a decision between the following?  A.  i would like to stop debugging and keep my debug layout B.  i would like to stop debugging and return to development  i have trouble envisioning when i would choose option A. What would I want to do  next at this point? What is the most common choice?
6278|@alexandrudima Thanks -- let me know if I can provide any other details. If you want, I can create a screencast of the repro.  Cheers, Trevor Sullivan
6279|@bgashler1 Great, thanks for your recognition and commitment to improving the VS code experience. I'm really impressed with how your team handles feedback. It should be used as an example across Microsoft.  Cheers, Trevor Sullivan
6280|"are you opening a specific folder? does it reproduce after File | Close Folder"
6281|I have tried that too.  The error reproduces even when i am not opening a folder. And once i close the error notification. I can create a new file and type into it but cant really edit/delete anything. All the menu options stop working too.
6282|@AndrewNatoli great, thanks a lot!
6283|:+1:
6284|"""https://atom.io/download/atom-shell"" ECHO command disabled. ""ia32"""
6285|Since this isn't implemented, is there a better way than having to manually find out how to navigate to the file and typing in the import statement by hand?
6286|:+1:
6287|I have some unfinished business to deal with. I can probably give it a try with in a non-distant future.
6288|"@vilaskadam anything in the console (show from help | toggle developer tools)?"
6289|@jrieken works nicely :+1:.  Some feedback: - I would just call the thing `detail` also on the workbench side and not `meta` which is harder to get - I see that `meta` is using `OcticonLabel` and not `HighlightLabel`. to be consistent with the option `matchOnDescription` there should be `matchOnDetail` so that you can also filter down the list by searching for a word in the detail part (this is what the extension gallery list supports)
6290|Hi **@tushortz**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
6291|**@tushortz**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
6292|"@masaeedu if you want to use TypeScript@next you need to tell VSCode where to find the corresponding tsserver. Assuming you have installed TypeScript@next into the workspace folder you can set the typescript.tsdk setting as follows:  ``` json {     ""typescript.tsdk"":""node_modules/typescript/lib"" } ```"
6293|I've updated the gist, can you try [that one](https://gist.github.com/joaomoreno/bfc1b4efb7f1b069df78)?
6294|This issue was moved to Microsoft/TypeScript#6477
6295|@chrisdias   > how is this different from stop debugging?  This is where we differ. To me the action is not `stop debugging` it is `stop the debug target` or `disconnect from the debug target` the action doesn't mean stop debugging to me.  I sometimes stop the debug target to start it again to be sure I debug from a clean state, my intent is not to `stop debugging` when press `stop`.
6296|> Regarding the other issue, does the rest of the code have build time dependencies on the typescript extension?  No, there are no build time dependencies on the TS extension and we had experimented with TS in a separate repo. The dogfooding setup is a little less convenient (you have to use symlinks so that TS is in the target Code instanceetc.) this is the reason why we reverted back. Now that we are in transition to Salsa I don't want to change it again. We can consider it again after the migration to Salsa.
6297|F12, which is also based on Monaco and uses TypeScript has a colour picker, colour dropper, and colour palette in the styles panel (at least I think it also uses Monaco for that view)  ![screen shot 2016-01-14 at 12 55 01 am](https://cloud.githubusercontent.com/assets/465069/12319821/acb25708-ba59-11e5-8ab2-72123ee19c85.png)  I wonder if this code can be shared?
6298|Agree
6299|C# comes in as an extension.  @jrieken how to get it in code.bat?
6300|I think this should be done as an extension outside of vscode. Giving to @aeschli to decide
