24801|There is also src/vs/base/parts/quickopen/browser/quickOpenWidget.ts and it is pretty important too. However, I didn't change that as it would require a lot of if's for mac-specific code and I don't know if that is desired.
24802|This issue exists with the 1.2 released rpm too.  The cause is a misunderstanding about the order of running the scriptlets:  If you are upgrading the postuninstall scriptlet runs _after the upgrade_ to uninstall anything left over in the old installation. In this case it is removing the /usr/bin/code (or code-alpha) link to /usr/share/code/bin/code just after it was created.  The postuninstall scriptlet needs to check whether an upgrade is being run and in that case just not do the remove.  I think the section should look like:  ``` %postun f [ $1 = 0 ]; then   rm -f /usr/bin/code fi ```  Also note that you shouldn't need sudo for any part of the rpm scripts as installing a package runs as root.
24803|"In addition to Visual Studio, it would also provide the same behavior as in many other editors like Sublime Text, Notepad++, etc.  JetBrains editors (IntelliJ IDEA, WebStorm, etc.) use the current VSCode behavior by default. It's clear that they've recognized it as non-obvious and disorienting for many users since they attempt to make it less jarring by leading the eye with a smooth reverse scrolling animation back to the offscreen cursor position. They also offer separate ""move if necessary"" versions of each up/down scroll command to get the behavior desired in this thread."
24804|"OK, this is happening very easily to me.  Unfortunately I couldn't figure out any modern programs that show the actual keystrokes in an overlay for Windows (anybody know??) and this isn't a _great_ capture, but it does show it happening a few times, should be obvious without the keystrokes showing.  On the first line when I try to delete all the text including ""echo"", I can't backspace any more but the echo still shows.  executing what looks like `echo whatever` is really just `whatever` in the buffer.  Then the next line I just show that `echo whatever` without any backspaces normally works fine and got a surprise that the newline wasn't printed!  Then I tried a third example and that one exhibited no glitches finally.  ![echo](https://cloud.githubusercontent.com/assets/17498172/15872600/4adde006-2cc8-11e6-9602-cf06b178d240.gif)"
24805|By analyzing the blame information on this pull request, we identified @Tyriar to be a potential reviewer
24806|Hi **@astitcher**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
24807|Thanks for the feedback on the release notes and sorry for the confusion. I've made modifications to the doc to make it clear the work is not in Stable, but that you can preview the tab work in the [Insiders Release](https://code.visualstudio.com/insiders).   Having a section towards the end where we talk about work accomplished but not in the stable build is a good idea and we'll do that next month if we have more work that fits into that bucket.
24808|@JoshClose please open a new issue for this as I will be locking this issue shortly in favor of individual issues instead of this single thread. thx.
24809|@sijad today I've merged your PR into VS Code. Thanks a lot! I could not accept the full PR because too many terminal related changes had occurred in the meantime. But I cherry picked your main commit and added three minor tweaks on top of that.
24810|Looks like a duplicate of #7099.  Probably could close either this one or that one.
24811|@Spown great to hear!
24812|Apologies, I didn't realize this happened at the extension level.  The short answer is 'Legacy C# Support' 0.3.3.  The longer answer is I checked after your question and I had 'C#' 0.3.7. I updated it to the latest (1.1.4), but Intellisense did not display symbols anymore. I work with Unity and this looks like a [known issue](http://code.visualstudio.com/docs/runtimes/unity). As recommended in the linked article, I uninstalled 'C#' and installed 'Legacy C# Support' 0.3.3, and I can now recreate the issue above.  Has this issue - Intellisense not context aware - been addressed in later versions of 'C#'?
24813|@isidorn editing (or moving focus) should dismiss the peek.
24814|I would like to have this functionality for use with web components so I could build a system that updates intellisense when I bring in a new web component.
24815|"now working  download file and put into nodejs folder ('C:\Program Files\nodejs)   open vscode and  change workspace setting   `     // The path of the shell that the terminal uses on Windows. ` `     ""terminal.integrated.shell.windows"": ""C:\\windows\\system32\\cmd.exe"", ` to  `     ""terminal.integrated.shell.windows"": ""C:\Windows\System32\cmd.exe /k 'C:\Program Files\nodejs\npm-cmd.bat'"",  [https://github.com/chintan9/chintan9.github.io/commit/60919517e0ae66a30603ea4b27c3497e3712e2d2](url)"
24816|I just hit this on Linux, here's a trace:  ``` //usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:87 Cannot set property 'innerHTML' of undefined: TypeError: Cannot set property 'innerHTML' of undefined     at Terminal.refresh (/usr/share/code-insiders/resources/app/node_modules/term.js/src/term.js:1704:32)     at t.setTheme (file:////usr/share/code-insiders/resources/app/out/vs/workbench/parts/terminal/electron-browser/terminalPanel.js:4:4880)     at t.updateTheme (file:////usr/share/code-insiders/resources/app/out/vs/workbench/parts/terminal/electron-browser/terminalPanel.js:4:8268)     at t.setVisible (file:////usr/share/code-insiders/resources/app/out/vs/workbench/parts/terminal/electron-browser/terminalPanel.js:4:7538)     at file:////usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:89:7842     at __dirname.undefined.t.Class.define.then (file:////usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:23:19425)     at t.showComposite (file:////usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:89:7037)     at file:////usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:89:5287     at __dirname.undefined.t.Class.define.then (file:////usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:23:19425)     at file:////usr/share/code-insiders/resources/app/out/vs/workbench/workbench.main.js:89:5042 ```
24817|#7341  bat file is working now @Tyriar  thanks   https://github.com/chintan3/vscodetest/blob/master/README.md
24818|This looks like an upstream but with term.js, I'll diff the code with what we're moving towards (xterm.js) and see if the bug is present in that too.
24819|After removing spaces:  ![screen shot 2016-06-07 at 2 52 20 pm](https://cloud.githubusercontent.com/assets/1753879/15875956/7867025e-2cbf-11e6-9a8d-9088dd688530.png)
24820|@bpasero can we reopen this? It still happens with 1.2.0. I'm using two monitors. When syncing my commits the window that asks for my git username/password appears on my secondary monitor, below all others windows. It  should be easy to reproduce.
24821|I think I found the issue, there's a workaround and also a likely upstream fix to prevent this in the future. https://github.com/sourcelair/xterm.js/issues/86
24822|This will be fixed when https://github.com/Microsoft/vscode/pull/7288 is merged as it's no longer necessary to call refresh to update the theme.
24823|Duplicate of https://github.com/Microsoft/vscode/issues/6738
24824|By analyzing the blame information on this pull request, we identified @isidorn and @egamma to be potential reviewers
24825|I opened PR https://github.com/Microsoft/vscode/pull/7367.  The best experience would also hide these breakpoints from the UI.
24826|Getting the same issue on Mac OS X 10.11.1 with VSC 1.2.0, however, it fails as soon as I open it.
24827|Created upstream issue https://github.com/sourcelair/xterm.js/issues/85 fixing locally with CSS.
24828|First, let me thank everyone one more time for your thoughts, likes, and dislikes about tabs. The feedback we have seen in this thread (both positive and negative) really shows how passionate people are about the future of VS Code.   I think everyone can agree that we've exhausted the utility of this issue and as a result I am going to lock the conversation. We will leave this issue open until we ship with an option for tabs/no tabs, which we plan to do by the end of the [June 2016 iteration](https://github.com/Microsoft/vscode/issues/7253).   While the VS Code team _may_ post updates in this issue, you should expect that we will create new issues for additional tab designs or discussions. We will mark issues with the `tabs` label to make it easier to query. You too can open new tab specific issues and we look forward to your feedback on the specific issues, as together we build the best experiences possible.  Thanks again, now go and install the [Insiders Release](https://code.visualstudio.com/insiders)!
24829|This issue was moved to Microsoft/TypeScript-TmLanguage#180
24830|@weinand, something to keep in mind is sometimes you might want to copy & paste a value from code into the condition of the breakpoint, which your suggested fix does not totally prevent, but makes it a little harder.  I'm ok with the suggestion, though. I just wanted to bring that up.
24831|Duplicate of https://github.com/Microsoft/vscode/issues/7062
24832|Thanks for help!
24833|Duplicate of https://github.com/Microsoft/vscode/issues/6451
24834|enter key down repeatly in terminal window.  key down cls command.  ![animation](https://cloud.githubusercontent.com/assets/8449892/15879291/c65aabc0-2d5d-11e6-9010-d0d96d5ea72c.gif)
24835|@leedonhyun thanks for the animation! That looks like this issue: https://github.com/Microsoft/vscode/issues/6738
24836|:+1: Do want! Clicking on errors should jump to the error like in any regular output window.
24837|I was mistaken. disconnectRequest is being called in server mode (probably in local mode, too, but I can't tell.) Closing this.
24838|Thanks for the suggestion, @TurkeyMan. I see you also created this feature request in the C/C++ extension repo https://github.com/Microsoft/vscppsamples/issues/66.  This feature request should not be in the vscode repo, so moving the discussion over there.
24839|Yup, I realised I put this in the wrong place. Sorry for the noise!
24840|Logged in the cpp extension instead. Sorry!
24841|We wanted a system that wasn't just made for Ubuntu and it's mostly in place. It's based on how Chrome is distributed, once the .deb/.rpm is installed, a repository is installed into the apt/yum source list so updates become available through the system updater. So you need to download the package once or add the repository manually.  Unfortunately it's been blocked for quite some time on how we're going to sign the repo and with what key. Closing in favor of https://github.com/Microsoft/vscode/issues/2973 which has another update towards the end.
24842|Duplicate of #7062
24843|@weinand Thanks
24844|As designed I would say, I think @jrieken is opening an untitled file with associated path and this file will not be on disk until you save.
24845|@akoskm that sounds like a different issue related to the git password prompt. Can you open a separate issue?
24846|js-is-jsx is gone (　ﾟдﾟ)  ![image](https://cloud.githubusercontent.com/assets/1388706/15882988/0dfb315e-2d7f-11e6-8d02-6962e31f95ca.png)
24847|We never showed the split action for the diff editor. I do not think there is much of a use case. Editors can opt in to allow for split and the diff is not included. E.g. we would also not show a split action for the editor that hosts the extensions once we go there.
24848|Has always been like that. I think we just always focus the first diff in the editor.
24849|Closing as designed because I think it is fair that the diff editor always jumps to its first diff. You might have edited the file meanwhile and going back to the diff could jump to the line with the diff that previously was not there.
24850|Do you run on a filesystem that allows to create a file and folder with the exact same name at the same location?
24851|Good idea.  Safari:  ![](https://img.alicdn.com/tps/TB1Z3BwKpXXXXXUapXXXXXXXXXX-300-259.png)
24852|If possible could you capture a gif? I've never seen any issues like that on Xenial.
24853|@Tyriar Maybe `var()` front should also display color.
24854|With the new built in terminal we have a workaround where script files can be run from there instead. Any possibility of connecting the two mechanisms @dbaeumer ?
24855|With the new preview tabs the experience is much better. Opening a file as a preview is now much clearer i.m.o.  I still think a configuration option is good though.
24856|@alexandrudima Could this be targeted for a milestone or put into the backlog?
24857|With multiple matches, user should be notified before jumping. Perhaps a drop down list?  I believe this is only true for functions. Variables does not present peek UI but just jumps directly to first match.
24858|cc @dstorey I would like to be able to transplant the Chrome DevTools color picker to here.
24859|yeah, the filtering is tracked here: #5749
24860|@daschult I what language do you see this? As in many other places we rely on the word definition each language can contribute. Under the hood rename is a [positional](https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/rename/browser/rename.ts#L136) operation and doesn't mind what the current word is - it's only to populate the UI
24861|Ok, so `Foo` is in the list but not sorted to the top. There are means to sorting but generally the sorting is lexical and we try to select the best match.
24862|yes - as designed. we don't want to boldly write to your disk, like so you can still discard
24863|@joaomoreno I cannot reproduce. Please give me proper steps and notice that in case of multiple definitions that's the designed behaviour.
24864|@bpasero thanks, opened https://github.com/Microsoft/vscode/issues/7386.
24865|VSCode version 1.2.0 still has this problem?  ``` const Button = (props, { theme }) => {   const styles = getStyles(props, { ...config, ...theme }); } ```  [js] Property assignment expected.
24866|Thanks for the report @ahmetatar, this is likely a duplicate of https://github.com/Microsoft/vscode/issues/7251
24867|You can already write extensions that contribute to the code complete in HTML file. Only catch is that you would need to have your own scanner to figure out what is completed at the current offset. The plan is to extract that code from our HTML support to a node_module so it can be used by extensions
24868|We will still ship them, just not out of the vscode repo. Things are still in flux as I refactor and move things around.
24869|Yes, part of your workbench settings that know about recently opened VSCode input, window sizes, cursor positions. We could put that in the settings. Would we remove it from the File>Preferences menu then? We would loose the theme previewing. If we keep it we would have to ask the user of where to define the theme in user or workbench settings.
24870|"Since we have another request to have a config to pin each file I am wondering if we should just introduce one setting for both, along the lines of ""editor.autoPinLevel"" and you have ""always"", ""moderate"", ""default"" and based on those we derive how things pin. Not a big fan of introducing 2 options..."
24871|Our new insiders release is out (http://code.visualstudio.com/Download#insiders) and includes our work for tabs/stacks. This comes with a more aggressive disposal of resources because as soon as you close an editor, we get rid of its underlying resources.  Curious if people could selfhost on this for a while and report back if things improve.  Note: insiders from now on get updated nightly (see http://code.visualstudio.com/blogs/2016/05/23/evolution-of-insiders)
24872|So the question is: what is different in our Win7 environment that causes this behaviour? Is it possible, that mcaffe scanner is triggering this?
24873|@jrieken @joaomoreno @alexandrudima whenever you see this please update here with what you did before. I know I get this every once in a while but I never memorize what I did that lead me there...
24874|Thanks! :rose:
24875|A number of days has past without answer on the questions asked. I am thereby going to close this issue to clean up our backlog of issues. Once you can answer on the questions, the issue can be reopened again. Thanks for understanding this process!
24876|Ok, meanwhile I am closing this.
24877|"I think this is now easily fixed with the setting:  ``` json ""files.associations"": {     ""*.js"": ""javascriptreact"" } ```"
24878|We do have a current line highlight:  ![image](https://cloud.githubusercontent.com/assets/5047891/15885826/0501fd46-2d5a-11e6-999e-40d0002566d0.png)
24879|@rockymontana @epaga can you guys try to run a chrome developer tools profile to see where the time is spend? you can bring up developer tools from the help menu and start the profile from the profile tab.
24880|A number of days has past without answer on the questions asked. I am thereby going to close this issue to clean up our backlog of issues. Once you can answer on the questions, the issue can be reopened again. Thanks for understanding this process!
24881|please support chinese (output window, reference pop,etc)
24882|@dslpp056193 Lots of things happen when starting up VS Code and they take CPU time. What is the difference between the previous version? Is it taking longer to start up? Is it constantly using 100% CPU?
24883|fyi @egamma @bpasero
24884|Just tested it and it seems fine, thanks a lot for fixing this!
24885|Should be fixed via PR from @astitcher
24886|Going to close this in favor of https://github.com/Microsoft/vscode/issues/6458 as the UX will change quite a bit with that.
24887|@llgcode you can setup up a task that runs tslint over the entire workspace using gulp, jake, or evem npm.   Will move the issue to tslint since project validation support for tslint needs to be implemented there. For the TS compiler we do have a similar request.
24888|Couldn't the theme preview just live update the settings.json?
24889|This issue was moved to Microsoft/vscode-tslint#54
24890|I hope every plugin can be configured separately.
24891|"I am very greatful that this issue has been brought back to life. But I don't have the time to spend on doing any testing unfortunately. I have switched back to Atom again.  Sorry for the bad news… When you get Code stable enough I will switch back since I liked its' minimalistic interface, and I'm not a very big fan of Atom. So I'll check back in with you in a couple of versions when the ""child deceases"" (does one even say that in english or is it just us northern folk? ;) ) are taken care of.  Best of luck to you!  From:  Benjamin Pasero Reply-To:  Microsoft/vscode Date:  Wednesday 8 June 2016 at 09:20 To:  Microsoft/vscode Cc:  Jonas Erlandsson, Mention Subject:  Re: [Microsoft/vscode] VSCode eats memory and slows down my Macbook Pro (#6026)  @rockymontana @epaga can you guys try to run a chrome developer tools profile to see where the time is spend? you can bring up developer tools from the help menu and start the profile from the profile tab.  — You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub, or mute the thread."
24892|I don't think [pty.js](https://github.com/chjj/pty.js) supports setting the font of winpty, I think you would need to request there first.
24893|"@frogcjn I'm sorry but I'm not getting this issue at all. Haven't gotten this issue after fixing up these issues: 1. Open the folder with the eslint module in the node_modules folder **directly under the _root_ folder**. 2. Put the proper `jsconfig.json` Here's mine:  ``` {   ""compilerOptions"": {     ""target"": ""ES6"",     ""module"": ""es2015"",     ""experimentalDecorators"": true   },   ""exclude"": [""node_modules"", ""scripts""] } ```"
24894|@outcoldman I think you can add a option, when selected to show indentation, like Sublime Text.  ![](https://img.alicdn.com/tps/TB1q_04KpXXXXchXpXXXXXXXXXX-440-231.gif)
24895|Please can you show me the issue for ts compiler ? thanks
24896|@alexandrudima @jrieken   This is nothing I can address in TS land. Any suggestion where to best fix this. Should we have different accept characters per scope. Should we have accept characters per completion item?  @aeschli fyi
24897|https://github.com/Microsoft/vscode/issues/7253. See section Explorations.
24898|This issue was moved to Microsoft/TypeScript#9018
24899|It seems easy to implement this, can I give it a try?
24900|@spongessuck do you have problem matchers installed in your task? Does the task produce lots of output. We are aware of the fact that task with lots of output run slower due to rendering the text in the output panel.
