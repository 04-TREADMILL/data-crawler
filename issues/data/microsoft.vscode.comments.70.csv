6901|No need to be sorry just file issues and we will close them if they are dups :smile:
6902|I now repsect capabilites returned from the initilaze response. For the latest node adapter I do not get any capabilites returned, is this change pushed?
6903|Had some time today to work on this. Given the UX sketch, here's what I could come up with:  ## A. variable width widget  ![find-matches-variable](https://cloud.githubusercontent.com/assets/5047891/12514674/2d317b28-c12d-11e5-8b69-d9b71b5fb8a3.gif)  ## B. fixed width widget, variable width label  ![find-matches-variable-label](https://cloud.githubusercontent.com/assets/5047891/12514687/394dfba2-c12d-11e5-9c4d-33c84f101552.gif)  ## C. fixed width widget, fixed width label  ![find-matches-stable](https://cloud.githubusercontent.com/assets/5047891/12514698/421c3212-c12d-11e5-9f46-5f51c013b4aa.gif)  My personal favorite is C, since in A and B things float around, which draws attention for no good reason and it feels wierd.  @stevencl  Thoughts?
6904|C looks good I think.  Nice work!
6905|Hi @isidorn , thanks for the quick reply.  Any meteor.js project should be fine, anyway I've uploaded the very basic sample provided by meteor when you create a new project https://github.com/george2giga/basic-sample, you can try this workspace. Having the VS Code debugging working would be awesome. Thanks
6906|@isidorn yes, capabilities are returned for quite some time. The debug adapter tests would fail if the node adapter would not return the 'supportsConfigurationDoneRequest'.
6907|> Why is there no Chinese Edition  Because Code is still in beta, translations are planned for GA. This is the corresponding plan item #2041.
6908|@weinand in the debugProtocl it is specified that these are topLevel, while in the node-debug code you return them as part of the `body`
6909|@isidorn oops, oversight.
6910|It is still on our backlog but it didn't make the cut for the [GA milestone](https://github.com/Microsoft/vscode/wiki/Roadmap), sorry.
6911|:+1:
6912|Sorry no news, except that we will change the auto update support in January so that different versions (alpha, beta, stable) can be installed side-by-side.
6913|Hi, it is simple JavaScript. It seems to me that TypeScript works.
6914|Here is another picture about it: ![error](https://cloud.githubusercontent.com/assets/1493460/12517621/e75ca300-c133-11e5-8df0-a6db6bc850db.png)
6915|This might be a bit much (or might not even fit this suggestion) but one feature I like in editors is being able to click then Alt-Shift-click to select an arbitrary block.
6916|@vishal123 what about Ctrl/Cmd+P? it does exactly that!
6917|We support what ever marked support: https://github.com/chjj/marked
6918|#508
6919|@zhqiyi can you attach a screenshot?
6920|@isidorn for backward compatibility you have to deal with the issue that old debugAdapters (e.g. mono-debug) don't return a 'body' in their InitializeResponse:  ![2016-01-22 18-58-03](https://cloud.githubusercontent.com/assets/1898161/12518667/2267020a-c13a-11e5-904b-c878f2cd92e4.png)
6921|But with that warning popping up every 10 seconds the IDE is simply unusable. Is there no workaround at the moment, other than telling it to ignore parts of the solution?
6922|VS has been crashing every morning for about a month now. I have come to the end of my patience.  I hope this is being treated as a PRI 0 bug because any sane editor should not crash this often.   Please let me know how I can get a trace out about why this is happening. I have seen this happen on other machines as well.
6923|VSCode allows opening the F12 tools right. Why can't we profile the code to see what code is consuming such high CPU?
6924|It can be an extension, sure. But VS Code already does so many neat things that ease development (like Git integration) which are extensions on other editors. This could easily be a built-in feature.
6925|"@jrieken BTW - per https://github.com/Microsoft/vscode-go/issues/176, it appears that all calls to `executeCommand(""vscode.executeFormatDocumentProvider"", uri)` are now failing with `Running the contributed command:'vscode.executeDocumentSymbolProvider' failed.` in vscode 0.10.6.    For the particular problem that was causing in the Go extension, we've changed the code to avoid using this command and just call Go's symbol provider directly, which is likely more correct in this case."
6926|"@alexandrudima awesome.  Have you tried tried placing the ""X of X"" inside the label (on the right part), replacing it with caps and regex options? the whole thing would be fixed width   Similar to chrome"
6927|"I have the exact same problem with eslint:  ![image](https://cloud.githubusercontent.com/assets/10532611/12521660/30167838-c14c-11e5-8eef-b7a5d2004935.png)  tasks.json:  ``` json {   ""version"": ""0.1.0"",   ""command"": ""npm"",   ""args"": [""--loglevel"", ""silent"", ""run""],   ""isShellCommand"": true,   ""showOutput"": ""silent"",   ""tasks"": [     {       ""taskName"": ""lint"",       ""problemMatcher"": ""$eslint-stylish""     }   ] } ```  Setting the problem matcher with fileLocation: absolute works, but imo this should not be needed. I have the latest eslint version installed so $eslint-stylish should set this automatically."
6928|Ah yeah and it also happens that the word **default**  is not highlighted in a switch/case block.  ![image](https://cloud.githubusercontent.com/assets/2974851/12521862/5c7fb190-c134-11e5-88ed-5360f1e68819.png)
6929|"Ok what seems to be somewhat working for me is the following: - run your app by `meteor debug` - have an attach request in your `launch.json` that will attach to the debug port that meteor gives you  <img width=""282"" alt=""screen shot 2016-01-22 at 21 30 29"" src=""https://cloud.githubusercontent.com/assets/1926584/12522179/64025902-c14f-11e5-9496-d36662ac495b.png"">   @george2giga can you please try this?"
6930|I often have VS Code on one half of the screen, and a terminal window on the other half. Splitting VS Code vertically makes the code windows too narrow. A horizontal split would work much better in this case.
6931|"First of all sorry for the slow response. Ok, I see the need for this feature, ideally you would just specify  ``` ""debuggers"": [{     ""type"": ""gdb"",     ""windows"": {         ""program"": ""./bin/gdbDebug.exe"",     },     ""windows (x86)"": {         ""program"": ""./bin/gdbDebug.x86.exe"",     }, ```  And vscode would pick the right program. The issue for this is that I am not sure if we can distinguish if we are running inside 64 bit win or 32 bit win.  @bpasero do we already have this data somewhere in env. or could I just use something like this to figure it out https://stackoverflow.com/questions/24956691/how-to-determine-whether-i-have-64bit-or-32-bit-node-executable-installed  If this is not possible then we need to think about UI and let the user choose the architecture. Optimally we would just do it for him."
6932|Imo it would also be nice to completely undock windows to put them on external monitors. Just the files, no toolbars - similar to how you can do it in Photoshop with panels.
6933|"same issue on vscode 0.10.6 i set my gitconfig to use https instead of git [git config --global url.""https://"".insteadOf git://] plattform windows 8.1 repro at github"
6934|I learned this method of determining the bitness of the host Windows OS through Node.js despite the app running as x86:  ``` javascript if (process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432')) {     // 64-bit Windows } ```  More info: http://blog.differentpla.net/blog/2013/03/10/processor-architew6432/
6935|Hi **@waderyan**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
6936|**@waderyan**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
6937|Do you mean like it describes in this issue https://github.com/Microsoft/vscode/issues/1673 ?
6938|I am also hitting this issue (Windows 10)  ![vscode_undock_bug](https://cloud.githubusercontent.com/assets/14299377/12524658/78d83cc0-c113-11e5-87a3-02f02ca54cdc.gif)
6939|Hi greybax, No, but thanks for the response :) ...let me see if i can draw it out here:  <li> .    <p> .    .      slkdfjkldsfaksdflkdasjf .    .     <br> .    .      alsdkfjieakegan;eikgie .    </p> </li>  The guides are the dots that help align the tags above.
6940|ok that did not work...lol. Basically they are lines or dots that connect open and closing tags. they help you align the code.
6941|Even if you are running on 64-bit windows, there will be times when the user specifically wants to use the 32-bit (x86) debug host.  For PowerShell this is usually when they are using a module that only runs in a 32-bit host.  So auto-picking is nice but the user should have a way to override/specify which host architecture they need.
6942|I prefer to have 80, 100 and 120 set up as rulers in my editors. Multiple rulers would be handy.
6943|Resolved 1132f27e22b59b5bc4c57a61d9be23963354f05a
6944|Although to make variables flash multiple times in a row, we would need additional logic.  For instance, we could apply a `.changing` and `.changed` class.
6945|Thanks for your concern.  We originally designed the icon this way to match the Visual Studio family (and because transparency traditionally caused problems with clicking the icon--although it's not an issue anymore).  Since this icon doesn't violate Apple's icon design guidelines, and because the scope of this issue is related to Mac OS X (and our icon is shared across all platforms) this issue would be better discussed on [UserVoice](https://visualstudio.uservoice.com/forums/293070-visual-studio-code).  We would definitely want users of Linux and Windows to have their say before we change it for everyone.  Please feel free to lead a discussion, and we'll be monitoring the feedback.
6946|Here is screenshot of Help->Show welcome-> view source. Version 0.10.6 ![image](https://cloud.githubusercontent.com/assets/1236847/12527473/0d8a23e6-c18d-11e5-81be-cf4384e2b9b4.png)
6947|@web-dave  @agrivas  Today I faced same issue with vscode 0.10.6. I got prompted with bitbucket credential window but when I enter it got failed. I am able to push to BitBucket with same credentials via sourcetree.  I found some steps to follow and then it worked well.  1) configure git to save your credentials locally and automatically append them to push commands generated from Code : Type the below in Git Bash:  `git config credential.helper store`  2) initial push to GitHub, after that, you will be able to do all the push commands from Code. In Git Bash type:  `git push –u origin master`  Ref link : https://azure.microsoft.com/en-in/blog/visual-studio-code-and-azure-app-service-a-perfect-fit/  Hope it will help!
6948|Fixed.
6949|@isidorn yes you can either use `arch` property to find out the arch of the node.js process or probably sniff for environment variables to find out the arch of the OS.
6950|More screenshots with the same text from  0.10.1: ![2015-12-22_104140](https://cloud.githubusercontent.com/assets/9781644/11950351/c0110e20-a898-11e5-8523-e97b3eb298c7.jpg)  And 0.10.5 ![2015-12-22_110214](https://cloud.githubusercontent.com/assets/9781644/11950683/b0222384-a89b-11e5-887a-f9b854e1ae4e.jpg)
6951|This might require upstream support in Electron to reveal the native find box.
6952|@vatex any chance that you are running code with less permissions compared to your user level permissions?
6953|@bpasero  I don't know. I set up ubuntu yesterday. I'm logged in as root and I don't know permissions. can you give me suggestion how to run VSC?
6954|@vatex are you able to write into the /home/lingwing/ directory from a prompt?
6955|@bpasero now I have installed in /home/user/Desktop/VSCode here. ok I will try but I don't trust to it helps :/
6956|"I think you're wanting something like the [Indent Guides](https://visualstudiogallery.msdn.microsoft.com/e792686d-542b-474a-8c55-630980e72c30) extension for Visual Studio?  ![screen](https://cloud.githubusercontent.com/assets/6125444/12529713/1a2681e6-c1c2-11e5-9769-2316c513c133.png)  However, I find that if you turn on whitespace rendering by setting the `""editor.renderWhitespace""` setting to `true`, you get something that works almost just as well:  ![whitespace](https://cloud.githubusercontent.com/assets/6125444/12529701/7153b8cc-c1c1-11e5-8579-c21d74ba9e2c.png)  It shows arrows for tabs and small dots for spaces"
6957|@boxHiccup ping
6958|@bpasero  I tried what you suggest me but it doesn't work :(
6959|@vatex I think that vscode does not have permissions to write to the home directory so I asked if you can create a file in the home directory: - cd ~ - ~ touch test.txt
6960|![screenshot from 2016-01-23 14 16 13](https://cloud.githubusercontent.com/assets/12797806/12529734/e56f89d8-c1db-11e5-8cc9-3d4823f4ee35.png)
6961|@nojvek are you able to share with me the workspace where this happens?
6962|now I write  **sudo touch test.txt** and it works.
6963|"@vatex yeah sorry, the ""~"" was too much, what happens when you just ""touch test.txt"" without being sudo?"
6964|@bpasero   **touch: cannot touch ‘test.txt’: Permission denied**  and how can I give permission to visual studio code?
6965|@vatex so this indicates to me that your home directory cannot be changed without root permissions but code itself is started with user permissions and then fails. There are two solutions: - make the home dir writeable to the user - start code with root permissions (sudo ./Code)
6966|second solution tried and doesn't work and I will try first and then write here my result
6967|@bpasero  now I don't have problem in opening but now program doesn't work. I captured video and you can saw.  [out.ogv.zip](https://github.com/Microsoft/vscode/files/101818/out.ogv.zip)
6968|@vatex If operating in your home directory needs root permissions, then something is wrong there, it should belong to the respective user account.  That is the first problem we need to fix here, sudo-ing commands because of wrong permissions are likely to mess things up even more at this point.  What does the command line say when you do this:  ls -la /home
6969|"@bgse  total 12 drwxrwxr-x  3 root     root     4096 Jan 22 16:50 . drwxr-xr-x 23 root     root     4096 Jan 22 12:02 .. drwxr-xr-x 39 user user 4096 Jan 23 15:39 user"
6970|@vatex Okay, looks like the directory itself has the proper permissions. What do the following commands say:  ls -la /home/lingwing  whoami
6971|From https://github.com/Microsoft/vscode/issues/580#issuecomment-159401140  > From @egamma on November 2, 2015 8:16 > Exposing the scope names in the API is on the backlog, but will not make it into the November update.  I would like `TextDocument.scopesAtPosition/Offset`, or something along the lines of the [atom api](https://atom.io/docs/api/v1.1.0/ScopeDescriptor)
6972|"@bgse  ls -la /home/user >>  here is a big list whoami >> (user)"
6973|"@vatex  In that big list, does it show that the "".config"" directory is owned by ""lingwing lingwing"" ?  If that is the case, then do:  ls -la ~/.config | grep Code  This should also show that these directories are owned by your user."
6974|"@bgse   ls -la /home/user >> drwx------  26 user user    4096 Jan 23 14:40 .config ls -la ~/.config | grep Code >> drwx------  5 root     root     4096 იან 22 19:54 Code"
6975|@vatex Ok, looks like we may have found the issue. The directory VSCode wants to write to is owned by root, but it should be owned by lingwing. This can be fixed by doing:  chown --recursive lingwing ~/.config/Code
6976|@bgse  thank you. it works!
6977|Thanks @isidorn , works a charm :)
6978|Glad it worked. Closing this
6979|@bgse @bpasero  extension installer doesn't work :( I seen permissions and everything is ok but why doesn't installs I don't know
6980|"I'm sorry, I forgot to do that. By now, If I click ""Start CPU profiling"" everything gets freezed, editor is completely blocked and Developer Tools are freezed (for example I click ""Stop CPU profiling"" and the result is that continues recording) ![screenshot_101](https://cloud.githubusercontent.com/assets/16635005/12530259/3d55abf8-c1d9-11e5-8edf-0e6db2ce14e7.png) (The button in the top right of the screenshot should be red, but I clicked that to stop profiling and the profile is still recording)"
6981|So adding win (x86) and we auto choosing it based on the platform we can do for Feb.  But I am not a big fan of adding UI affordance on top just for the special case when the user specifically wants to use the 32-bit host when on a 64 bit platform. @weinand ideas on how to tackle this using the current mechanisms are welcome
6982|Apologies for the late follow-up.  I just verified that: 1) Information diagnostics now show up in the status bar 2) Information diagnostics are underlined the same as warnings 3) Hint and Information diagnostics are shown in the ctrl+m list just fine.
6983|@vatex I guess now you have the same problem with Code not being able to write to ~/.vscode/extensions. Since this is not a Code issue, I am closing this one.
6984|@boxHiccup that is crazy, does it also not work if you close all editors, restart code and then try to profile? is your machine very slow?
6985|My computer is ok, I tried with only Code open and it doesn't work. Presario CQ56-110SL is my computer model, if you want to check technical specifications
6986|@boxHiccup when you just start code, is the CPU already going up high and stays? Are you opening a very large folder?
6987|Hi yes...that's it. Thank You!
6988|I'm not sure what you mean by share workspace. It's a typescript/HTML/CSS project with a bit of c++. Around ~1500 files and 80,000 lines of code.   Is there a way in VS to show crashdumps?
6989|@nojvek I would like to have a workspace that I can run Code with to reproduce this issue. We suspect it is related to a memory leak somewhere, it is just not clear where. If you can send me a zip of the workspace or maybe the git URL if it is open source.
6990|The CPU stays low (usage at 10-15% range). It happens both with a single file and an entire folder, but that folder isn't so big to cause something like that. By the way, I just noticed that freezing (at save process) happens only with PHP files (size doesn't matter, apparently)
6991|@boxHiccup so you say saving is only slow for PHP files?
6992|Duplicate of https://github.com/Microsoft/vscode/issues/1168
6993|"@isidorn yes, we should support the ""win (x86)"" OS type for February as discussed here, but I don't like the white space in the key ""win (x86)"". I suggest to use something like ""win-x86"" instead.  For the problem that the user wants to override VSCode's automatic x86/64-selection I suggest the following:  The extension contributes the two debug types ""gdb-x86"" and ""gdb-x64"" in addition to ""gdb"" like this:   ``` json ""debuggers"": [{     ""type"": ""gdb"",     ""windows"": {         ""program"": ""./bin/gdbDebug.exe"",     },     ""windows-x86"": {         ""program"": ""./bin/gdbDebug.x86.exe"",     } }, {     ""type"": ""gdb-x86"",     ""windows"": {         ""program"": ""./bin/gdbDebug.x86.exe"",     },     ""windows-x86"": {         ""program"": ""./bin/gdbDebug.x86.exe"",     } }, {     ""type"": ""gdb-x64"",     ""windows"": {         ""program"": ""./bin/gdbDebug.exe"",     },     ""windows-x86"": {         ""program"": ""./bin/gdbDebug.exe"",     } } ```  With this he can use a type ""gdb-x86"" or ""gdb-x64"" to force a specific version independent from the underlying architecture."
6994|@felixfbecker this looks like a different issue. I've extracted this into a separate issue #2202
6995|@ig16022 Your setup will be a great test case for the new Salsa JS infrastructure that will become available as preview early next week. I'll include instructions here once a preview build is available.
6996|It was w10 from virtualbox vm
6997|I'm looking forward to it.
6998|Benjamin,  Its internal Microsoft source code and I don't think I can give it to you.  If there is some memory monitoring tool I can add let me know.  Would it work if i take memory snapshots with the chrome debugger embedded in vscode every couple of hours to see what is going on?  On Saturday, January 23, 2016, Benjamin Pasero notifications@github.com wrote:  > @nojvek https://github.com/nojvek I would like to have a workspace that > I can run Code with to reproduce this issue. We suspect it is related to a > memory leak somewhere, it is just not clear where. If you can send me a zip > of the workspace or maybe the git URL if it is open source. >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/508#issuecomment-174192367.
6999|Yeah
7000|"Folder with source code placed on VM (CentOS) and shared via samba. That remote folder connected to windows as network drive.  New file showed in VSCode's explorer immediately, after created in remote console, on first level (folders root). If it's created on 2nd and deeper levels - just need refresh explorer.  Also problem with IntelliSense and .d.ts files Example with Angular. In code I can see error on ""angular"" word and choose download .d.ts file in pop-up menu. After downloading nothing changes with error. But, if I just open .d.ts file in VSCode - error disappear! So another time starting VSCode I need to open each .d.ts file to remove errors. Empty jsconfig.json created in folder, but no changes.  One more problem with downloading .d.ts files. First time I try to download any of them - I'v got error. Second time - some downloaded, some not. If I just visit ""typings"" folder from VSCode explorer - any file will be downloaded.  Remote - CentOS7, samba with maximum permissions. Local - Windows Server 2012 (platform=3&osversion=6.3.9600) VSCode - 0.10.6 (on local machine)"
