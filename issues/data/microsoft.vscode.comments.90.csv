8901|Is it also possible that we keep variable refactor within the function scope instead of the whole file?
8902|@isidorn Are you sure this is ok? The action should only be enabled if the intersection between the editor selection and the changes is not empty.  Reopening for discussion.
8903|:+1:
8904|I mension this in #2828 as well, and I also hope the color for variables comes back in dark theme.
8905|OK. Where you you define your custom `%path%` and `%prompt%`?  Do you maybe run Code as another user, ie Administrator?  Code simply [reads the `%comspec%` variable and spawns that](https://github.com/Microsoft/vscode/blob/ce6b458166c1021f3a0a9f22f6bd5d0ae9c535bd/src/vs/base/node/processes.ts#L79). What is in your `%comspec%`?
8906|@Tyriar :+1:   Thanks for the PR, @jamesqo
8907|I want Open Folder, not Open File
8908|That's work as open folder if you don't select any file or select a folder.
8909|@mkosieradzki Good catch, I think we miss 'integer' support also at other places. I have to make a pass through the JSON parser.
8910|Nope. I can't open folder. It's just keep opening file picker dialog until I choose a file
8911|Ah, of course if you want own option in the language dropdown, then having your own id is the right thing to do. Highlighting is off: Sounds like an issue in the grammar, or a bug in our TextMate engine. Did you check the console in the dev tools?
8912|@bgashler1 let's discuss this in our ux sync today
8913|@bingzheyuan You are asking for deeper PHP support with real language understanding. It's not something we, the core VS Code team, will be able to provide. We lack deeper PHP knowledge and the resources. We are actually hoping someone from the community would be interested of implementing a more sophisticated PHP extension.
8914|"My bad, I'm working with Mac. In windows you can add your own shortcut, just under `File > Preferences > Keyboard Shortcuts`   add   ```     {         ""key"": ""ctrl+alt+o"",         ""command"": ""workbench.action.files.openFolder""     } ```  to the right panel and set ""key"" to any combination that you like.  ![ssssddd](https://cloud.githubusercontent.com/assets/10362398/12942450/7b2f7650-cff0-11e5-836e-391951ea2ba0.gif)"
8915|It seems that is a problem with my project, I will reopen this issue if I couldn't figure it out.
8916|Great! But I think it's still better to make it default option :dancer:
8917|@csholmq Thanks for this info. Yes, with a plugin you can do this in Eclipse (but it is not the default behaviour of Eclipse debugging). I think that it should be possible to do something similar in VS Code after we've opened up the debugger front end for extensions.  CC @isidorn
8918|@bpasero fyi
8919|fyi @aeschli
8920|@elprogrammer I'm not 100% sure what you mean. Is it that you'd want the JavaScript language service to discover node modules installed in your project and offer intellisense for them?
8921|This worked for me when I tried Salsa, @egamma -- maybe a configuration problem?
8922|There's also https://github.com/Microsoft/vscode/issues/2867 suggesting to take MagicPython. Did give this a try? (There's already a MagicPython extension)
8923|@BazIdle OmniSharp will continue to move forward and it is now in the best hands (the team that also works on Roslyn). The work on Omnisharp for vscode is now tracked in https://github.com/OmniSharp/omnisharp-vscode.   Your issue from above is now also tracked there OmniSharp/omnisharp-roslyn#371.  FYI @DustinCampbell
8924|We now have two built-in dark themes:  - the Dark Visual Studio that follows the color scheme of Visual Studio. It has no color for variables - the Dark+ that is more colorful, including light blue for variables. It is now the new default, but needs to be configured manually by users that are updating from the January update.   Same with the light themes.
8925|@stkb I've installed it and had a play. Works nicely! Thank you very much; one happy customer here.
8926|@benquarmby I could reproduce the same behaviour with node-inspector, so this is not a VS Code problem but a node problem, most likely a duplicate of https://github.com/nodejs/node/issues/4917.  It does not occur with node version < 4.2.6
8927|@SamVerschueren @philipgiuliani @nchammas I am sorry, this looks horrible.  I cannot reproduce on a vanilla (no extensions) 0.10.8 on Windows. ![tab-sql](https://cloud.githubusercontent.com/assets/5047891/12943498/fdc55b02-cfe1-11e5-8dc6-e466dbe55a00.gif)  ![tab-text](https://cloud.githubusercontent.com/assets/5047891/12943532/3e486caa-cfe2-11e5-9ea9-de4fdb36607e.gif)  I will try shortly on the mac
8928|Indeed, might be related to Mac.
8929|"@SamVerschueren Do you have any extensions installed that might hijack the tab key? i.e. just to be sure the built-in command executes, can you please add the following to the end of your `keybindings.json`:  ``` { ""key"": ""tab"", ""command"": ""tab"", ""when"": ""editorTextFocus && !editorTabMovesFocus"" } ```"
8930|did aeschli even attempt to understand what is going on here?
8931|I even posted before and after shots.
8932|We're using the perl grammar from https://github.com/textmate/perl.tmbundle which seems to be more current than to what you point. I'd suggest to file your request to https://github.com/textmate/perl.tmbundle.Alternatively you could also create your own extension that brings in the grammar from https://github.com/caipre/sublime-languages. Check out https://code.visualstudio.com/docs/tools/yocode.and create an extension from the grammar you prefer. The perl language id is 'perl'
8933|yall need to assign a new guy to this. aeschli is fighting for some reason. closed another report I opened claiming its not true even when I had before and after screenshots.
8934|The lint error message is: 'property declarations' can only be used in a .ts file. (property) SearchProfileList.propTypes: {     list: any;     getSearchProfileList: any;     deleteSearchProfile: any;     editSearchProfile: any;     location: any;  Nette GrÃ¼sse nach Wollishofen :)
8935|Added that but still the same behaviour.  Switched to the insider build and removed all the extensions I had installed over there (just to make sure) but still the same.
8936|@gregg-miskelly VS Code now listens on breakpoint events with reason `update` and updates the verification state and location.
8937|@waderyan And how does the community give feedback to that Wiki? E.g. when a plugin exists or has had its behavior altered.
8938|Ok I reverted my change. @jacek-dargiel do you have exact reproducable steps, since it is hard for us to repro this. If not I will keep an eye open since I know it happens seldomly
8939|"OK so I tried in a new empty project folder with almost empty code user settings.json.  1st I tried the old intellisense with Salsa env var renamed to disable it I find even the typescript based intellisense is not working.   What am I not understanding?  test,js  <pre> var p = require('path'); var c = p. console. </pre>  jsconfig.json  <pre> {     ""compilerOptions"": {         ""target"": ""ES6"",         ""module"": ""commonjs""     } } </pre>  I get autocomplete suggestions for console once I have a package.json, presumably as code can then infer the correct context. However, I get no suggestions for p?  I have node 4.2.6 installed on Windows 10 What else effects the intellisense?"
8940|Right you are. I notice Node JS Tools for Visual Studio repros this bug also. Definitely a node problem and not VS Code specific.
8941|This issue is present in this case too: When I have a function defined as `var testFunction = function() {}`  Here is a screenshot with the issue: [http://imgur.com/wS66ROM](http://imgur.com/wS66ROM)
8942|Oh, this is quite strange, yesterday I couldn't get it to work at all, the option was disabled all the time no matter what I did or how I made the selection. Today it works just fine.
8943|Yeah it is funky, please keep an eye open and let us know if you see some pattern
8944|@bpasero I discussed that in length with @alexandrudima  and @egamma and I understand the history of the change. But the current behavior is very unexpected. The long term solution is for sure to have more extensions handle a file type and let the user decide which one he wants to use. In the short term we might the firstLine rule be combined with an extension. For the shebang we can say that the file must not have an extension to make that rule win.
8945|I'm assuming I don't need to install any typings as node is directly supported. It should just work out of the box.
8946|"I still cannot reproduce. Can you think of anything else I might be doing differently? Do you have other settings for VSCode or maybe a different keyboard layout, etc...  Here I am trying on a mac:  All I do is select some text, press <kbd>Tab</kbd> a few times and undo (<kbd>Cmd</kbd>+<kbd>Z</kbd>)  I have just downloaded 0.10.8 from the website on a new mac install:  <img width=""298"" alt=""screen shot 2016-02-10 at 12 00 45"" src=""https://cloud.githubusercontent.com/assets/5047891/12945487/f742298e-cfed-11e5-8a49-574043efb74b.png"">  ![tab-jsx](https://cloud.githubusercontent.com/assets/5047891/12945338/1de8567c-cfed-11e5-8e17-b6a682854aae.gif)  ![tab-txt](https://cloud.githubusercontent.com/assets/5047891/12945405/73ad126e-cfed-11e5-8584-f8c1c70ed416.gif)  ![tab-sql](https://cloud.githubusercontent.com/assets/5047891/12945445/abca8dca-cfed-11e5-83a5-1e58f27e3cef.gif)  @weinand @joaomoreno Can you please also try to reproduce this?"
8947|Thanks for reporting. The problem is in the user setting declaration. If null is a valid settings value, it also needs to be declared in the schema. Not sure why we haven't seen this before. I fixed it for the php, typescript and git settings. Creating a follow-up bug against go.
8948|This is a duplicate of Microsoft/vscode-docs#145
8949|@gregg-miskelly after discussing with @dbaeumer we think it is best that we help the user generate `tasks.json` file. We can not move the task running logic inside the `launch.json` since then we would have to replicate all the tasks logic into debug.  Is the task that you want to run a `preLaunchTask`, or would the user want to run it independent of debug?
8950|This is odd.   I installed a new fresh version of the latest insider build. Removed my `Application Support/Code - Insiders` directory to make sure I don't have any setting specified. Still the same behaviour.  I have a U.S. keyboard layout.  ![screen shot 2016-02-10 at 12 11 44](https://cloud.githubusercontent.com/assets/1913805/12945704/7ff2226a-cfef-11e5-8c45-dc756d7ad21f.png)  ---  @alexandrudima In your second example (the untitled file), can you type your text (as it is now), save it as `test.txt` or something and try it again?  ![indent](https://cloud.githubusercontent.com/assets/1913805/12945764/daeb7248-cfef-11e5-8952-eafc8573df88.gif)
8951|I can replicate this (VS Code 0.10.8 (0.10.8), OSX 10.10.5)  Before updating I checked in 0.10.6, and the indentation resulted in the correct outcome.
8952|@aeschli nice! ;)
8953|"Ok, here I am trying again with an untitled file that then I save on top of an existing file.  ![tab-txt-again4](https://cloud.githubusercontent.com/assets/5047891/12945911/f0c40cd2-cff0-11e5-982b-ecc5cab4d35c.gif)  Do you maybe press <kbd>Tab</kbd> while in the OS menus? Do you maybe have any errors in the console (F1 > Toggle Developer Tools)? Does this repro when pressing <kbd>Cmd</kbd>+<kbd>]</kbd> which is an alternative binding for indent lines?  Here is the OSX version I'm trying on, maybe this makes a difference? <img width=""210"" alt=""screen shot 2016-02-10 at 12 23 13"" src=""https://cloud.githubusercontent.com/assets/5047891/12945938/1990c93e-cff1-11e5-8131-44ae2025a53b.png"">"
8954|Strange. I did search first.
8955|"As a workaround, extensions can be manually disabled by moving them away from your local extensions folder. (this is ""~/.vscode/extensions"" in Linux, I'm afraid I don't really know for other platforms)  But yes, I would also appreciate a more intuitive means of disabling extensions."
8956|Sorry, but you still need to intstall the node.d.ts file, this hasn't changed between pre-salsa and Salsa JS support.   Closing this issue - automatic fetching of typings is high on the backlog of Salsa.
8957|(it is a PR in the vscode-docs repo and not in the vscode repo)
8958|Can you please try to reproduce using the new Salsa JS infrastructure: https://code.visualstudio.com/updates/#_javascript-salsa-preview
8959|@jamesmenera it looks like `vscode.commands.executeCommand()` can run `cursorLeft`, `cursorRight` and other commands to control the cursor. This might be the next step for a TabSanity extension. I'm digging deeper when I have time.
8960|@egamma Thanks for the info
8961|This extension might help somewhat https://marketplace.visualstudio.com/items?itemName=jrieken.backspace-plusplus
8962|How about an interactive history view, something like git extentions (http://gitextensions.github.io/ ) would be cool!
8963|> Do you maybe press <kbd>Tab</kbd> while in the OS menus?  No  > Do you maybe have any errors in the console  No  > Does this repro when pressing <kbd>Cmd</kbd>+<kbd>]</kbd> which is an alternative binding for indent lines?  No, can't reproduce with this keybinding which is odd.  ---  This is how it always acts like that. 1. Open the project and open that `test.txt` file 2. Close VS Code entirely 3. Open VS Code which will open `test.txt` automatically 4. Select all the lines and press <kbd>Tab</kbd>  ---  My OS X is one patch version higher.  ![screen shot 2016-02-10 at 12 35 34](https://cloud.githubusercontent.com/assets/1913805/12946211/0901c7ce-cff3-11e5-9fc3-5d72d41f1578.png)
8964|> Nette GrÃ¼sse nach Wollishofen :) > Danke :smile:   The warning comes from Salsa - moving.
8965|This issue was moved to Microsoft/TypeScript#6997
8966|There is now a git history extension available that you can try: https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory
8967|Did you install the corresponding .d.ts files?  > To get IntelliSense for React/JSX, install the typings for react-global by running tsd install react-global from the terminal.
8968|OK. I did make abortive attempt but `typings install node` failed. Will try again.   Thanks for quick response
8969|@alexandrudima mentioned to me that the issue still exist. I'm must have tried on an older version.
8970|"Does it work in this simple hello world example:  ``` jsx var CommentBox = React.createClass({   render: function() {     return (       <div className=""commentBox"">         Hello, world! I am a CommentBox.       </div>     );   } });  ReactDOM.render(   <CommentBox />,   document.getElementById('content') ); ```"
8971|So need to use the mysterious typings [--ambient flag](https://github.com/DefinitelyTyped/tsd/issues/269) but then it hangs. Back to `tsd` which works fine
8972|You should probably add this to the javascript docs to make it crystal clear is needed for node.
8973|my bad
8974|You are right, I forgot to install the .d.ts file for the screenshot (but I tried before). ![bildschirmfoto 2016-02-10 um 13 04 57](https://cloud.githubusercontent.com/assets/832234/12946907/fb930df0-cff7-11e5-858c-8f8612f76bb7.png)  It does not offer the React-Component as the best option in your minimal example: ![bildschirmfoto 2016-02-10 um 13 08 08](https://cloud.githubusercontent.com/assets/832234/12946821/7aaa03ce-cff7-11e5-81ea-ef7af66af159.png)
8975|Using Salsa JS on the same example as I wrote before I get IntelliSense knowing the function, but now when I try to go to symbol I got no suggestion ( the go to symbol ( @ ) returns an empty list ).
8976|Yeah, has seen that one before, but its functionality is too limited.
8977|+1
8978|"I also have it on El Capitan 10.11.3  settings.json  ``` json {     ""files.trimTrailingWhitespace"": true,     ""editor.wrappingIndent"": ""indent"",     ""editor.renderWhitespace"": true } ```"
8979|"I also have it, this is my setting.json:  ``` json {   ""editor.insertSpaces"": true,   ""editor.tabSize"": 2,   ""search.exclude"": {     ""**/dist"": true   },   ""files.trimTrailingWhitespace"": true,   ""files.insertFinalNewline"": true,   ""editor.fontFamily"": ""hack"",   ""editor.fontSize"": 12,   ""editor.renderWhitespace"": true } ```  on El Capitan 10.11.3"
8980|Thank you - will give this a shot!  On Tue, Feb 9, 2016 at 4:30 PM, Erich Gamma notifications@github.com wrote:  > I've added a sample that illustrates how to use TextContentProviders and > the vscode.previewHtml commands. >  > Pls see: > https://github.com/Microsoft/vscode-extension-samples/blob/master/textdocumentprovider-sample/README.md >  > â > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/272#issuecomment-182108020.  ##   #   Raymond Camden, Developer Advocate for MobileFirst at IBM  Email : raymondcamden@gmail.com Blog : www.raymondcamden.com Twitter: raymondcamden
8981|What I described should happen is in Visual Studio 2015, Eclipse, Dreamweaver, Notepad++ and even Atom. It's perhaps one of the most basic ways to remove a line; you select the line and press delete. I'm not quite sure why it's necessary to have a keyboard shortcut for such a basic command.
8982|+1, seeing this as well
8983|I thought you were pointing to the fact that PHP variables are longer colored in the Visual Studio Dark theme, correct? In my comment before I wanted to explain that this is the new expected behavior for the Visual Studio Dark theme. The [release notes](https://code.visualstudio.com/Updates#_editor) has more background information on the change. If you want the color for the varaibles back, I'd recommend you to switch to the new Dark+ theme.  Let me know If I misunderstood your request.
8984|expected behavior: ![s3](https://cloud.githubusercontent.com/assets/5798340/12948579/95eb0750-d00b-11e5-86cf-02cbc42e4bcf.jpg)
8985|Should this work in the most recent mainline release? I'm getting errors when I try it:  Activating extension `eg2.vscode-css-properties` failed: Cannot find module '/Users/raymondcamden/Downloads/vscode-extension-samples-master/textdocumentprovider-sample/out/src/extension'. Activating extension `eg2.vscode-css-properties` failed:  Cannot find module '/Users/raymondcamden/Downloads/vscode-extension-samples-master/textdocumentprovider-sample/out/src/extension'  On Wed, Feb 10, 2016 at 7:17 AM, Raymond Camden raymondcamden@gmail.com wrote:  > Thank you - will give this a shot! >  > On Tue, Feb 9, 2016 at 4:30 PM, Erich Gamma notifications@github.com > wrote: >  > > I've added a sample that illustrates how to use TextContentProviders and > > the vscode.previewHtml commands. > >  > > Pls see: > > https://github.com/Microsoft/vscode-extension-samples/blob/master/textdocumentprovider-sample/README.md > >  > > â > > Reply to this email directly or view it on GitHub > > https://github.com/Microsoft/vscode/issues/272#issuecomment-182108020. >  > ##  >  > #  >  > Raymond Camden, Developer Advocate for MobileFirst at IBM >  > Email : raymondcamden@gmail.com > Blog : www.raymondcamden.com > Twitter: raymondcamden  ##   #   Raymond Camden, Developer Advocate for MobileFirst at IBM  Email : raymondcamden@gmail.com Blog : www.raymondcamden.com Twitter: raymondcamden
8986|Forgot to run npm install - sorry about that.  On Wed, Feb 10, 2016 at 7:49 AM, Raymond Camden raymondcamden@gmail.com wrote:  > Should this work in the most recent mainline release? I'm getting errors > when I try it:  ##   #   Raymond Camden, Developer Advocate for MobileFirst at IBM  Email : raymondcamden@gmail.com Blog : www.raymondcamden.com Twitter: raymondcamden
8987|@mbroadst What OS are you on? I am trying to reproduce in #2829, so far unsuccessfully. Do you have other steps?
8988|I've also published the sample to the market place just in case.
8989|@alexandrudima This bug seems only related in a file with `insertSpaces` set to `true`. In a file with tabs, this isn't an issue. Just so you know :).
8990|"@aeschli  Thank you for the help!  So this is my package.json  ``` javascript {     ""name"": ""js-next"",     ""displayName"": ""js-next"",     ""description"": ""Javascript Next Highlighting"",     ""version"": ""0.0.1"",     ""publisher"": ""rickmed"",     ""engines"": {         ""vscode"": ""^0.10.1""     },     ""categories"": [         ""Languages""     ],     ""contributes"": {         ""languages"": [{             ""id"": ""js-next"",             ""aliases"": [""JavaScript Next""],             ""extensions"": ["".js"","".htc"","".jsx""],             ""configuration"": ""./javascript.configuration.json""         }],         ""grammars"": [{             ""language"": ""javascript"",             ""scopeName"": ""source.js"",             ""path"": ""./syntaxes/js-next.tmLanguage""         }]     } } ```  When a place my extension folder in the vscode's extension folder I get these messages (the new js language is selected by default):  ![image](https://cloud.githubusercontent.com/assets/7104786/12949359/9349a0a6-cfd9-11e5-952d-ee56c8e0c95e.png)  When I select the core javascript language, I get this:  ![image](https://cloud.githubusercontent.com/assets/7104786/12949446/0d67865a-cfda-11e5-9e51-b893ceb21957.png)  This is the grammar I'm trying to use:  https://raw.githubusercontent.com/Benvie/JavaScriptNext.tmLanguage/master/JavaScriptNext.tmLanguage"
8991|Quick update: just updated to El Capitan 10.11.3 and I can now immediately reproduce even with the default settings
8992|\O/ JEEJ! :)
8993|"@alexandrudima I'm on OSX, vscode version 0.10.8. I just tried to make a gif screen grab of the behavior, and couldn't reproduce it every time though. It seems almost random, and during my attempts I also ran into some weird indentation bug where after I saved the file, and then indented, it indented in the middle of the string randomly.  my user settings are:  ``` {   ""javascript.validate.enable"": false,   ""jshint.enable"": true,   ""editor.renderWhitespace"": true,   ""editor.insertSpaces"": true,   ""editor.tabSize"": 2,   ""files.trimTrailingWhitespace"": true } ```"
8994|@mbroadst probably related to #2829
8995|WOOT! I have it working. I'm kinda guessing at a few things and it is 99% your code still, but it is there. I literally just need to polish it up a bit and then I can publish mine too. :) Thank you so much.  Quick question. This line:  ``` var previewUri = ```  vscode.Uri.parse('css-preview://authority/css-preview');  How would you describe that URI? This is what I went with but I was just guessing:  ``` let previewUri = ```  vscode.Uri.parse('html-escape://cfjedimaster/html-escape');  On Wed, Feb 10, 2016 at 8:04 AM, Erich Gamma notifications@github.com wrote:  > I've also published the sample to the market place just in case. >  > â > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/272#issuecomment-182388477.  ##   #   Raymond Camden, Developer Advocate for MobileFirst at IBM  Email : raymondcamden@gmail.com Blog : www.raymondcamden.com Twitter: raymondcamden
8996|This is an effect used in Github Desktop, as well as elsewhere.  ![commitmessage](https://cloud.githubusercontent.com/assets/6125444/12949765/f03dc4a6-d009-11e5-8507-681645887e79.png)  Although here the effect is a bit too subtle; I find it a bit difficult to see the limit. In Twitter it's much more visible.  ![commitmessage2](https://cloud.githubusercontent.com/assets/6125444/12949957/fbc28676-d00a-11e5-86b0-1c884e0a67b0.png)  Something between the two would be really neat, and maybe with the right balance it could be on by default.  However I don't know if the edit box is capable of that kind of rich text, so failing that, yeah the popup that comes up when entering an invalid filename is also nice and that would be ok (as you say, in a less flashy color).
8997|I see in your screenshot that you are using ES7 bind operator which is not yet supported by TypeScript which powers Salsa. As a consequence you get syntax errors and red squiggles which can make Intellisense fail.  In the second screenshot you are correct that the React-Component could be proposed first, but the React-Component is proposed so Intellisense is working but the sorting isn't optimal.  Moving over to TypeScript as an FYI.
8998|This issue was moved to Microsoft/TypeScript#7000
8999|Here's a video demonstrating Notepad++, Atom, VS2015 and VSCode: https://www.youtube.com/watch?v=bZdm1v3AUjE  Every editor apart from VSCode shown in the video places the caret at the start of the next line when selecting a line via the line numbers. VSCode doesn't do this which not only makes deleting lines very irritating, but also doesn't let you copy and paste lines with the standard Ctrl+C Ctrl+V.
9000|@philipgiuliani   > Can somebody provide a link for VSCode 0.10.6?  Previous releases are available from https://github.com/Microsoft/vscode/wiki/Previous-Releases
