1301|Extensions are only supported since version `0.10.1`.
1302|Reference for a possible improvement in this area:  https://en.wikipedia.org/wiki/Line_breaking_rules_in_East_Asian_languages
1303|"Indeed, this is due to the indentation logic ""normalizing"" indents, but being unaware of doc comments that should be left ""un-normalized"""
1304|duplicate of #71
1305|@bpasero seems like file events are missing here. Any idea why that might be?
1306|"I can't accept the PR for the time being. The find results (from `findMatches`) are converted to decorations. Decorations are copied and transformed in the view model (to take line wrapping into account).  The code around decorations is not prepared to deal with decorations count in the 1M range for sure, which is something that can happen when opening a ~20MB file and searching for ""a"" or something..."
1307|Easy to find out running with --verbose
1308|Did you try [ionide-fsharp](https://app.market.visualstudio.com/items/Ionide.Ionide-fsharp) Here is their repo for possible feature requests: https://github.com/ionide/ionide-vscode-fsharp
1309|Duplicate of #537
1310|thank you..
1311|@leixu2txtek we believe you might be missing file events, though you would see this in other places as well (git viewlet not being updated with a badge once you make changes). Can you run code with --verbose flag and via palette open developer: toggle developer tools and post the screenshot frmo the output if there are file events comming
1312|great idea
1313|"@alexandrudima Well to be simple you can separate non-space Unicode characters into four classes: - Ideographic:    - Han   - Common Kanas (except Small Kanas like `ぁ`)   - Hangul syllabaries   - Graphic symbols like `☺`. - Alphabetic: All letters, numbers, infix operators (like `*`). - Leading Character:   - Opening brackets/quotes, like `([\{‘“〈《「『【〔（［｛｢`   - Leading currency symbols, like `$£¥＄￡￥` - Trailing Character:   - Combining characters, like `U+0300` and `゛゜`   - Punctuations, like `,.:;?!%¢°′″‰℃、。｡､￠，．：；？！％・･`   - Small Kanas and Japanese repeation symbols: `ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ`   - Closing brackets/quotes, like `)]}’”〉》」』】〕）］｝｣`  The breakability is shown in the table:  | First Character →<br>Second Character ↓ | Ideographic | Alphabetic | Leading Character | Trailing Character | | --- | --- | --- | --- | --- | | Ideographic | yes | yes | no | yes | | Alphabetic | yes | no | no | yes | | Leading Character | yes | yes | no | yes | | Trailing Character | no | no | no | no |"
1314|Hello,  Did you try using the `preLaunchTask` in `launch.json`. More details about debugging and `preLaunchTask` can be found [here](https://code.visualstudio.com/docs/editor/debugging)
1315|@rhires Can you provide the omnisharp log (Cmd+L,L)
1316|The problem is that some symbols aren't part of `dnxcore50` - the error message lists only that project, not `dnx451` You need more dependencies in the `frameworks.dnxcore50.dependencies`-section
1317|We use the text mate grammar from https://github.com/textmate/coffee-script.tmbundle
1318|We use the text mate grammar from https://github.com/sublimehq/Packages
1319|For those wondering, Atom also falls back, but to spaces. Spaces is a better option because almost all compilers support spaces.
1320|"If the php executable is not on your path you can use the setting to point to the php executable. For example   ``` json php.validate.executablePath=""C:\\apps\\php\\php.exe"" ```"
1321|We are reluctant to add horizontal scrolling as no other terminal / repl has this and would be strange. Flowing text to the next line - word wrap is the way to go. We will look into this.
1322|@tinganho Can you explain why it is problematic that files aren't saved?
1323|@cfjedimaster The idea is that you can register for a URI-scheme, like `foo` and that someone will ask you provide the contents for `foo://something/anotherthing` when a corresponding call to [openTextDocument](https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L2988) is made.   Those document must not be able to be saved and can be readonly by some mechanism (TBD). Will that be enough for your needs?
1324|Also really don't like it, @jrieken ping.
1325|This can (and should) easily be done via extension.
1326|"If we expose this to extensions it should be possible to make changes. However, then maybe it should not be an event but rather a notion of ""save participant""."
1327|We currently don't know what a comment is. As soon as we know, we can make this change happen.
1328|"Or we provide a rich event which allows to express participation. That way, we enable the simple case of just knowing when something changed, and the complex case of delaying saving because other work must finish first.   A SaveEvent ala  ``` interface SaveEvent {     resource: Uri;     addPrecondition(task:() => Thenable<any> | any):void; } ```"
1329|Certainly understand. Thanks for feedback.
1330|@alexandrudima I'm used to alt+shift+down as the default for down (as on atom) and I guess I don't use the insert up because alt+shift+up conflicts as well. This is specific to Ubuntu, not sure about other distros. It would seem that we're running out of modifier key combinations. I'll see what Sublime uses by default tomorrow.
1331|@saviorisdead Can you provide some detail about how the edits look? They can not overlap and there is an issue with touching ranges
1332|off-topic
1333|VS Code is written in JavaScript without Cordova
1334|The unreadable error message has been fixed.
1335|The **Open with Code** action is gone by default since `0.8.0`. Code now registers itself as an editor and you can and should associate it with file extensions, like you would do any other application. If you manually install Code again, the installer will ask you if you still want the context menu actions, but you must install it as the user that you want the actions for.
1336|Duplicate of #534
1337|This issue was moved to Microsoft/TypeScript#5770
1338|+1 for providing enough space to show comments. I find Atoms solution interesting, its just a box below the IntelliSense window with the text:  ![image](https://cloud.githubusercontent.com/assets/900690/11363274/202dcc5a-9299-11e5-98a1-ceebfcd44c1c.png)
1339|"Hm, I kinda doubt there are many people that start a text selection, then press ctrl+mouseup to go to the definition. But of course I have 0 evidence for this.  So how could we resolve this? I suppose making this a setting is a bit overkill and bloats the settings. The same goes for completely turning off ""Go to definition"" on CTRL+Click.  I don't have many other editors to test this with, but WebStorm for example does not do this jump. Instead it just ends the selection, as I would expect."
1340|This issue was moved to Microsoft/TypeScript#5771
1341|This issue was moved to Microsoft/TypeScript#5772
1342|@splatonov92 Can you paste the problematic code here? Thanks a lot!
1343|see also Microsoft/vscode-go#26
1344|If one identifier touches a lot of files in my open works space, I need to save all those files in order to get the change working. It happens to me all the time.
1345|@thomastaylor312 does it work with Atom?
1346|**@akamud**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
1347|Well what about people that double click to select a word and then want to Ctrl+click to goto definition? I don't think text selection is limited to just copy/paste.  Unfortunately at the time the mouse button is released, i don't really know if you have pressed another key (V or C).
1348|:+1:
1349|"<pre> if (isset ( $_POST ['type'] ) && $_POST [""type""] == ""shlam"") {         info ( ""{$pref} remove mudlog index files"" );         $result = `$runTS rm -rf var/MudlogProxy/* && echo ""OK""`;         isError ( $result, ""remove var/MudlogProxy"", ""attempt to delete var/MudlogProxy"" );         if ($plugin == ""GeologProxy.jar"") {             $result = `$runTS rm -f var/GeologProxy/cuttings.dat var/GeologProxy/calcimetry.dat var/GeologProxy/descriptions.dat var/GeologProxy/lithology.dat && echo ""OK""`;             isError ( $result, ""remove var/GeologProxy"", ""attempt to delete var/GeologProxy"" );         }     } </pre>"
1350|_From @seanmcbreen on November 18, 2015 4:49_  I'm not aware of a way to do that [navigate as a user highlights but does not select] in QuickPick - we obviously event for theme previews so it's possible.  Adding @bpasero but I think this is something for us to look at adding vs something we have.
1351|_From @bpasero on November 18, 2015 8:26_  @alefragnani you will need to implement registerDocumentSymbolProvider !
1352|_From @alefragnani on November 21, 2015 3:23_  @bpasero how do I do it without interfere in the original `DocumentSymbolProvider` already associated to each document?  I could implement a `registerDocumentSymbolProvider` and fill the `SymbolInformation` array with my items. But only when I call _Go to Symbol_ command, my items appeared. And so, for files like `.ts`, `.json`, which already have their symbols, it merged. In the screenshot below, the first 3 items are mine, the other 3 are symbols automatically generated for this `.json` file  ![vscode-gotosymbol](https://cloud.githubusercontent.com/assets/3781424/11316333/c78c8f9c-8fea-11e5-9f0f-3bdc26197811.png)  If I could _cancel_ the other symbols, it could help, but I guess this is not the way. At least, it doesn't appears correct to use the _Go to Symbol_ command.  Thanks for your help
1353|_From @bpasero on November 21, 2015 7:29_  @jrieken is the one to answer
1354|The result of document symbol providers are always merged because the document symbol feature is there provide a full outline of all symbols in a document.   @alefragnani It seems we don't have the right API for you. What is your exact use-case and what do you want to do with apis (DocumentSymbol and quick pick)?
1355|_From @alefragnani on November 24, 2015 9:46_  @jrieken I would like to add an enhancement to my [Bookmarks](https://marketplace.visualstudio.com/items/alefragnani.Bookmarks) extension, listing the lines where the bookmarks are, with a preview of the line, and when the user hits UP/DOWN for each item, the editor would scroll to that line. In the screenshot above, the first 3 items that are the bookmarks (line number and preview).  This _detect user focusing items when moving up/down_ behavior is the reason why I asked to _replicate Go To Symbol_ command :smile:
1356|@alefragnani Thanks for clarifying. The document symbol provider doesn't seem like the right vehicle for this, despite its auto-revel behaviour. Being pinged on focus is a valid request. I will give it some though...
1357|Like changes in JS files and hitting reload in the browser? How about using the Auto-Save feature?
1358|Yes kind of.   I have not tried auto save. I will give it a try.
1359|"I'm not sure what the .travis.yml has to do with this issue.  Perhaps there is some miscommunication.  The following provides the information for the documentation request:  ``` # Standard package dependencies sudo apt-get install git-core sudo apt-get install build-essential  # Custom NodeJS dependency (distro packaged version will not work) # WARNING: This will cause a script to be downloaded and executed #          with root privileges.  If the web site is compromised #          the script can compromise your system. # See: https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash - sudo apt-get install nodejs  # Clone the repository git clone https://github.com/microsoft/vscode cd vscode  # Install VSCode dependecies sudo npm install -g mocha gulp # Uncomment below for 64bit Linux #./scripts/npm.sh install --arch=x64 # Uncomment below for 32bit Linux #./scripts/npm.sh install --arch=ia32  # Compile gulp compile  # Test/Run ./scripts/code.sh ```"
1360|I am working on integrating rustfmt to vscode. So i have file like this:  ``` rust use std::process::exit;  fn main() {     exit(0);     } ```  Rustfmt produces output formatted like this:  ``` Diff of /Users/sid/Desktop/code/rust/test_project/src/main.rs:   Diff at line 1:  use std::process::exit;⏎  ⏎ +fn main() {⏎ +    exit(0);⏎ -fn main()⏎ -{⏎ -    exit(0);    ⏎  }⏎ ```  So, basically, what i am doing. I am parsing this ouput and form two TextEdit's. First one to delete, second one to insert. For this example it would be:  ``` typescript let textEdits: vscode.TextEdit[] = [];  let deleteRange = new vscode.Range(2, 0, 3, Number.MAX_SAFE_INTEGER); let deleteEdit = vscode.TextEdit.delete(deleteRange);  let insertEdit = new vscode.TextEdit.insert(new vscode.Position(2, 0), newText);  textEdits.push(deleteEdit); textEdits.push(insertEdit); ```  I thought that TextEdit applied sequentially, so this could work.  I do this like that because if i use TextEdit.replace other issue comes up - dangling new lines, if new text has less lines.  Apparently only working solution right now is to replace whole file, which is a bit dirty and not ideal perfomance wise i guess.
1361|+1 for this feature.
1362|Thanks, I confirmed that this fix works on Windows too. Thanks!
1363|I think it could be done, as easy as checking if the current line has a comment opening character. And i believe you do know the comment characters because the `ctrl +/` command inserts and removes it.  Or maybe not. Things sound very easy but writing it into code is difficult.
1364|We improved this experience a bit. Now whenever a user has an empty configuration, or a really broken launch.json we show the debug environment picker again. So if you miss it for the first time we will prompt until one is explicitly selected. This way we hope to make it more discoverable.  This will be availble in our next monthly release, so check it out then and let us know what you think.
1365|"``` /* sorry but will not work |<ctrl+space> */ ```  We need to expose the scopes the tm-bundles define, it's on our plan but we are not there yet."
1366|Thanks for your reply.  Assign vscode with specified file extensions like .md works ok. But i can't set the association for folders to open a complete folder in vscode from within the explorer.  And unfortunately my working user account, which should use the actions, does not have adequate rights to install any programm on my computer (AD policy). So i can't select the options in setup for my working user.  Do you have any suggestion how i can add the context menu item manually? In regedit.exe?  tia, Andreas
1367|@PooLP thanks so much, I can finally reproduce locally :)
1368|Yes, you must use the replace semantics which is (1) select the range of text that is to be replaced, (2) provide the new text. If you format the whole document you must use the whole document range and the output from your formatter as new text. It's not a dirty solution considering it describes what you are doing: replacing the whole text with new text.
1369|The same problem. @ElliotChong solution work fine, thanks.
1370|There are two solutions here: - We can add this to our VSCode configurations, then each user would have to set debug.repl.showLines: false explicitly. Also this would be the first debug configuration that we introduce - though we will probably need more in the future - We can make this an attribute in the adapter. So when a user picks a powershell adapter we would automatically not render lines in the debug console  @bpasero @daviwil let me know what you prefer
1371|"Here's what we do in the installer, hope it's not too cryptic.  ``` Root: HKCU; Subkey: ""SOFTWARE\Classes\*\shell\VSCode""; ValueType: expandsz; ValueName: """"; ValueData: ""Open with Code""; Tasks: addcontextmenufiles; Flags: uninsdeletekey Root: HKCU; Subkey: ""SOFTWARE\Classes\*\shell\VSCode""; ValueType: expandsz; ValueName: ""Icon""; ValueData: ""{app}\Code.exe""; Tasks: addcontextmenufiles Root: HKCU; Subkey: ""SOFTWARE\Classes\*\shell\VSCode\command""; ValueType: expandsz; ValueName: """"; ValueData: """"""{app}\Code.exe"""" """"%1""""""; Tasks: addcontextmenufiles  Root: HKCU; Subkey: ""SOFTWARE\Classes\directory\shell\VSCode""; ValueType: expandsz; ValueName: """"; ValueData: ""Open with Code""; Tasks: addcontextmenufolders; Flags: uninsdeletekey Root: HKCU; Subkey: ""SOFTWARE\Classes\directory\shell\VSCode""; ValueType: expandsz; ValueName: ""Icon""; ValueData: ""{app}\Code.exe""; Tasks: addcontextmenufolders Root: HKCU; Subkey: ""SOFTWARE\Classes\directory\shell\VSCode\command""; ValueType: expandsz; ValueName: """"; ValueData: """"""{app}\Code.exe"""" """"%V""""""; Tasks: addcontextmenufolders  Root: HKCU; Subkey: ""SOFTWARE\Classes\directory\background\shell\VSCode""; ValueType: expandsz; ValueName: """"; ValueData: ""Open with Code""; Tasks: addcontextmenufolders; Flags: uninsdeletekey Root: HKCU; Subkey: ""SOFTWARE\Classes\directory\background\shell\VSCode""; ValueType: expandsz; ValueName: ""Icon""; ValueData: ""{app}\Code.exe""; Tasks: addcontextmenufolders Root: HKCU; Subkey: ""SOFTWARE\Classes\directory\background\shell\VSCode\command""; ValueType: expandsz; ValueName: """"; ValueData: """"""{app}\Code.exe"""" """"%V""""""; Tasks: addcontextmenufolders ```  I will actually reopen this and rename it according to the real issue."
1372|What's actually even more curious is that if I make a selection and then press delete to delete the text, and THEN press quote, I only get ONE quote, not two! So the behaviour is inconsistent there too.
1373|I saw about `preLaunchTask`. It looks need `gulp` tasks. I just want to build purely as `babel-node ./tools/run.js` (https://babeljs.io/docs/usage/cli/) `babel` actually can be executed in script side but I prefer command than gulp.
1374|This should be possible by introducing a task that does just that. Please read our [tasks doc](https://code.visualstudio.com/docs/editor/tasks) on how to do that. Then you can reference this task from the `preLaunchTask`
1375|Replace semantics has some issues or i am doing it wrong. Example:  ``` a, b c  d ```  Which transforms to:  ``` a, b c  d ```  So, TextEdit would be:  ``` typescript let replaceRange = new vscode.Range(0, 0, 2, Number.MAX_SAFE_INTEGER); let replaceEdit = new vscode.TextEdit.replace(replaceRange, newText); ```  Which produces:  ``` a, b c <- extra empty line  d ```  My great adventure with multiple TextEdits was desperate effort to get rid of this issue. :)
1376|Great. Thanks for looking into it. I believed the facilities for the languages supported out of the box was inbuilt.
1377|That box hits the same issue as us. The question is what does that **More...** link do.  One plan could be: 1. Like @sevin7676 suggests, embrace the inevitability of needing an extra panel and just implement it. 2. Don't show it by default, but rather a **More...** link like Atom that would should it. Need a keybinding as well. 3. Provide a configuration option that will just show it always by default, instead of only on demand.
1378|@bgashler1 UI guidance needed here.
1379|The core of VS Code is implemented using AMD and not CommonJS. We do this so that we can bundle/package the files, which gives us performance and we do not plan to change this. So I'll have to close this issue.
1380|The problem is that our JavaScript tokenizer isn't supporting ES6 yet.
1381|I think eventually when we move the repl to be a real editor we will drop the lines anyway, so I am even fine to not have them at all.
1382|@joaomoreno I would expect that box below intellisense to be as large as to fit the entire contents of the comment. Since that guy is outside of the tree it would not have to compute any height upfront.
1383|There is a folder named `locales`, but all files in it are blank. I believe translate support will come soon.   ![image](https://cloud.githubusercontent.com/assets/9635792/11365110/4a4e4ef6-92df-11e5-8f11-8a7dc1e2a96f.png)
1384|actually @stevencl has already come up with a proposal.
1385|@lucaslra Thanks a lot, sorry for the back and forth. Good point on providing more guidelines and documentation. I started by updating https://github.com/Microsoft/vscode/wiki/How-to-Contribute
1386|Can you elaborate about the fix? Which one are you hiding?
1387|"I am not sure if ES6 is the problem here... for example the ""let"" or ""const"" keywords are classified correctly. But the ""new"" keyword is not. Object keys are considered (if I am not wrong) to be constants. Document and Array objects poses also different colors."
1388|As soon as the quick open widget opens, all messages are hiding and restore when quick open widget hides. This was already the case before 0.10.x, but I forgot one case where quick open widget was used by extensions for asking for input or picker entries.
1389|Is there another issue telling about this folder? I couldn't find any
1390|Thanks. That helped. :+1:
1391|It seems like `newText` has a trailing line break character at the end. You don't need to provide that in order to _complete_ the line.
1392|+1
1393|I get something similar:   ``` workbench.main.js:1550 WARNING: Promise with no error callback:undefined workbench.main.js:1550 Error: Promise did not implement oncancel(…) workbench.main.js:1550 WARNING: Promise with no error callback:undefined workbench.main.js:1550 Error: Promise did not implement oncancel(…) workbench.main.js:1550 WARNING: Promise with no error callback:undefined workbench.main.js:1550 Error: Promise did not implement oncancel(…) workbench.main.js:1550 WARNING: Promise with no error callback:undefined workbench.main.js:1550 Error: Promise did not implement oncancel(…) workbench.main.js:1550 WARNING: Promise with no error callback:undefined workbench.main.js:1550 Error: Promise did not implement oncancel(…) ```  This is opening a `.ts` file, and mousing over statements. Before the Intellisense pops up, I get the error message. The Intellisense pops up a little after the error appears.
1394|ok - thanks for the update
1395|This is on a Mac.
1396|"**TL;DR;** It is an issue in the formatCommand.ts edit trimming. A fix is on the way in the November recovery drop.  The format command tries to do some smart front/rear trimming of edits to reduce edit ranges. E.g.  ``` Given a buffer containing ""some cool cool text"" replace [0,19] with ""some cool cool text"" => no-op replace [0,19] with ""something interesting"" => replace [4,19] with ""thing interesting"" replace [0, 19] with ""some interesting text"" => replace [5,14] with ""interesting"" It had a bug when prefix & suffix overlap. e.g.: replace [0, 19] with ""some cool and cool text"" => invalid edit replace [0, 19] with ""some cool text"" => invalid edit ```  You can either wait for our recovery drop due end of this week or early next week or you can try to massage the edits on your side such that there is no prefix & suffix overlap. Removing the same prefix would already work."
1397|Perhaps it is the `* as Fluxxor`?  `import * as Fluxxor from 'fluxxor'`  Nope. It's still there with:  `import Fluxxor = require('fluxxor');`
1398|Finished some reading on [this article](https://code.visualstudio.com/docs/customization/colorizer) and also found [TextMate reST syntax highlighting support files](https://github.com/textmate/restructuredtext.tmbundle). So I think I will revise the task list accordingly.
1399|ok...  ![dev](https://cloud.githubusercontent.com/assets/5109966/11367904/b7bd5e20-92f1-11e5-88ef-8207bf128bf5.png)
1400|I would like to give this a go, I will comment here when I have finished the extension
