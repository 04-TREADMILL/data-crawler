6501|"Thanks File > Preferences > Workspace Settings and added in settings.json  ""php.validate.executablePath"":""C:/wamp/bin/php/php5.4.3/php.exe"""
6502|The icon is the same across all OS. I think this is designed intentionally like this.  ![screenshot 4](https://cloud.githubusercontent.com/assets/10532611/12377357/637443ac-bd1b-11e5-80cc-fff7f70ad88d.png)  Visual Studio 2015 updated the icon with a white outline, which also included the inner white space. VS Code adapted it.
6503|OK, As far as the command knows where the user has clicked
6504|"Links points anywhere. They are just links. The URI is resolved using xml:base standard resolution and the target file might be local or external. When local, I open it on a side editor and I find the target element so it is highlighted. <img width=""1907"" alt=""_extension_development_host__-_202-01-hrefresolution_xsd_y_extension_ts_-_miextension_y_add_api_support_to_mouse_events_in_editor_ _issue__1805_ _microsoft_vscode_y_entrada_ _ignacio_reportingstandard_com__2959_mensajes_"" src=""https://cloud.githubusercontent.com/assets/16385090/12377425/3d8951ca-bd1e-11e5-9a2f-a4b88fefd738.png"">"
6505|@bpasero I had already left it open with just a single unedited working file last night, and checking this morning the memory usage does't appear to have changed much. I've now edited and done a build on the file, and will leave this to see what happens.  Note until I read through this issue, I hadn't ever cleared down the working files. (I hadn't really had a need to, I generally ignored this panel and switched files via the project file explorer underneath it, or with Ctrl+E).
6506|@Sankra I think it would make sense here. The icon looks kind of strange next to the other programs in my dock (like VMWare Fusion and MonoGame).
6507|Just some further insight: while I can't explain how in the adapter the breakpoint paths were being translated to lowercase, I have yet to be able to reproduce this issue since the VSCode-to-XDebug communication has been fixed in the adapter.   I'll update this if I run into an issue again while using the adapter during my usual weekday projects, otherwise I believe this is safe to close for now?
6508|I have used the example server to its fullest extent to create a python linter, but wish to go further with it. I have seen the JSDocs but struggled to produce documentation from it due to the limited community support to create docs from *.ts files. If you guys could include a gulp script or something similar to generate the docs that would be great :smile:
6509|+1 (I m currently copy pasting tabs)
6510|"Similar effects for ""place cursor left (or right) of 💩 and press Shift+Right / Shift+Left"". Expected: It selects the whole character. Actual behavior: It selects only half of it."
6511|Hi **@jkrems**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
6512|**@jkrems**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
6513|It would also be nice to not have a leading `*` automatically added when I add a new line to a comment.
6514|The new title made this difficult to find.  With Programmer's Notepad, Atom (with [Sublime Style Column Selection](https://atom.io/packages/Sublime-Style-Column-Selection)), Visual Studio 2015, and obviously Sublime, you can use Alt+Select.  It would make sense to support the same in VS Code.
6515|#84
6516|@bpasero Can you add the code snippet? Thanks!
6517|Duplicate of #84?
6518|@aeschli https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/files/node/watcher/unix/watcherService.ts#L34-L69
6519|@andy-hanson For jsdoc that should actually happen.
6520|@reflectiondm Good catch ;-) The omnisharp extension has moved out of the VS Code source tree and will move into the omnisharp/dotnet org. Currently it is in transit which makes your situation a little harder. Sorry for that. Currently the name of the extension is `jrieken.vscode-omnisharp` but I am afraid it will change once more.
6521|Yeah, lets reveal on F2
6522|Thanks. I think the best will be expose the `ILinkSupport` in some form. VS Code (as today) will come with a decent default implementation but for special cases (like above) you can mark for regions of a document as hyperlink.
6523|Hard to tell, after my change of only disposing documents from [contributed](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/node/extHostDocuments.ts#L176) schemes I haven't seen this...
6524|We will pass the link itself to the command
6525|This is a duplicate of #2003 please keep the discussion under that issue. Feel free to ask more questions there.
6526|This issue was moved to Microsoft/TypeScript#6525
6527|Duplicate of #84
6528|@frevds And what is the bug? Please provide expected vs actual behaviour
6529|Closing until we get reproducable steps. or more users complain
6530|That's currently not possible because each window acts like a new instance. We to have a IPC pipe to check that you don't open the same folder a second time but that's more or less it.   Valid request tho
6531|Do you see this regularly or only for one folder? If you only see it on one folder can you share that folder so we try to reproduce this? Does your last folder no longer exist, I am not getting that part? On what OS are you?
6532|Oh, sorry, please find attached a script and a screenshot showing what I mean. Thanks. I can also take a look at the regex in question..   ![js-highlighting-bug](https://cloud.githubusercontent.com/assets/5341447/12387402/908f49d4-bdcc-11e5-8854-d8f5302c7449.png)
6533|There is an assertion failure happening  ``` Assertion failed (item already registered: quickfix_#0): Error: Assertion failed (item already registered: quickfix_#0)     at Object.ok (file:////Users/jrieken/Code/vscode/out/vs/base/common/assert.js:12:19)     at ItemRegistry.register (file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:84:20)     at new Item (file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:115:27)     at file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:271:54     at CompletePromise_ctor.CompletePromise_then [as then] (file:////Users/jrieken/Code/vscode/out/vs/base/common/winjs.base.raw.js:1826:49)     at Item.refreshChildren.doRefresh (file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:260:40)     at file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:56:26     at new Promise_ctor (file:////Users/jrieken/Code/vscode/out/vs/base/common/winjs.base.raw.js:1901:17)     at Lock.run (file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:51:20)     at RootItem.Item.refreshChildren (file:////Users/jrieken/Code/vscode/out/vs/base/parts/tree/browser/treeModel.js:296:51) ```
6534|@jrieken let me take this one. I'll try to come up with repro steps.
6535|No point in moving this feature request to the TypeScript project. They already have the feature on their roadmap. It is planned for the 2.0 release of TypeScript.  https://github.com/Microsoft/TypeScript/wiki/Roadmap  I don't understand why Syntax checking of EcmaScript in Visual Studio Code is dependent on TypeScript though? Do you use TypeScript to check the syntax of plain .js files?
6536|@tomi Thanks for the code sample, helped me a lot
6537|@jrieken It does not for PHPDoc and I believe also not for JavaDoc.
6538|Pimped up the UI. Also did a few extra fixes as per commit messages.  ![image](https://cloud.githubusercontent.com/assets/22350/12388240/08a75e70-bdd2-11e5-9e02-0160af698295.png)
6539|`git fetch` is a background task that runs independently of the commit action.  So, to recap: you click **commit** and it stays spinning forever while actually committing successfully. Is this correct?
6540|Looks like it can be solved like this:   ![js-highlighting-bug-resolution](https://cloud.githubusercontent.com/assets/5341447/12388399/e66b0cca-bdd2-11e5-9abe-d3a7346770d7.png)  I will leave this in my JavaScript.tmLanguage. Not sure if that is lexically correct but it seems to work (saying the end of the string is where the line end, unless there is an escaped line feed (any of \r or \n depending on the system and file, but with a preceding backslash). Looking forward to the next release.
6541|Duplicate of #1138
6542|:+1:
6543|I wonder if I can detect that focus leaves the workbench. If yes, I think we could make this the default behaviour.
6544|Thanks for the files tho I cannot reproduce the issue with them. I see low cpu utilisation unless I open a different file where is spikes for a short moment (which is to be expected). There is no permanent CPU load.   @aaa132452 What extension do you have installed and can you test without them (`--disable-extensions command` line argument)
6545|Thanks @frevds. Yet another issue with the tm bundle
6546|for sure not
6547|Yes
6548|That's an issue with the installer
6549|duplicate of #2054
6550|duplicate of #140
6551|This issue was moved to OmniSharp/omnisharp-roslyn#380
6552|I think @jrieken worked on the hovers
6553|This is a duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/40.
6554|We use the tokenisers for that
6555|Duplicate of #1605
6556|"This happened to me last week while editing a legacy ASP application. I changed the company's logo url on template.asp and users started complaining about **accented words showing incorrectly** (ie: ""Usuários became Usu?rios). Back then I realized VSCode changed the file's encoding from **ISO-8859-1** to **UTF-8**.  I believe this is a bug and VSCode should check the file's encoding while opening it and keep that encoding."
6557|"@kuyur I assume you refer to the ""editor.renderWhitespace"" setting which shows tab characters but does not show spaces? What do your mean with ""full-width space character""?"
6558|This issue was moved to Microsoft/TypeScript#6527
6559|@AndrewNatoli Thanks for looking into this again and closing it.
6560|":+1:! This is really vital!  As Ward Bell stated in the comment on [John Papa's blog on debugging in VS Code](http://johnpapa.net/debugging-with-visual-studio-code/): ""Whether client or server side. Auto-refresh as we do with nodemon should be part of the solution.""  I switched over from Visual Studio NTVS to Visual Studio Code because of the terrible stalling of the UI in VS 2015 while editing typescript. VS Code is a lot more workable, but live debugging is now still not possible.  **EDIT**: It's working now somewhat, see my comment below."
6561|@DelvarWorld I've tried to reproduce it with a minimal setup and things work fine (see gif below). Since ES6 is now the default you no longer need to define it as the `target` in the `jsconfig.json`.   Since you do not even get a hover over `angle` hints at that Code's JavaScript worker has crashed. In this case you should see an exception in the console. Can you open the developer tools `Help>Toggle Developer Tools` and switch to the `Console` tab. Does an error show up?  Can you reproduce the above problems after a fresh restart?  Did you get into this situation after #1991? In this case the the JS worker will have crashed. The work around is to restart Code `cmd+p`, `Reload Window`.  Do you have any extensions installed (e.g. `eg2.js-is-jsx`)? Can you try to reproduce the problem when you start code with the `--disable-extensions` option.  ![bug2045](https://cloud.githubusercontent.com/assets/172399/12394089/08946b08-bdfa-11e5-94ff-7991d7d0338d.gif)
6562|Can you attach the single file that produces the error?
6563|full-width space is used in Japanese and Chinese.  for example, `　`, you can select the text and will see that its width is double of that of normal Latin character.
6564|I haven't seen this either.
6565|Yes. It commits locally successfully, but VSCode is waiting on git to do to other things I didn't ask git to do (intentionally, anyway).
6566|@Nimzozo I cannot reproduce. Is there something more to it?  ![replace-accent](https://cloud.githubusercontent.com/assets/5047891/12394878/31a955be-be07-11e5-91d2-7ec21a1c23fb.gif)
6567|"I feel bad commenting ""+1"" on this issue, especially after the open letter to GitHub, but there's no other way of letting you know how important this is to me without doing so. So +1. :)"
6568|We currently only allow for global encoding for the workspace. Please set it globally.
6569|@jrieken comments ?
6570|Crashed again, this time it was after regular usage but it was left in this state: - ~14000 file folder open - 5 working files active (.cc, .java, .h, .py, .json) - No file open in text editor  `ps aux` output:  ``` ❯ ps aux USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND ... daniimms  6086  0.0  0.5 970620 92180 pts/0    Sl   Jan11   0:36 /home/local/ANT/daniimms/VSCode-linux-x64/Code /home/local/ANT/daniimms/VSCode-linux-x64/resources/app/out/bootstrap --type=watcherService ```  As mentioned though this was after regular usage and not in safe mode so it _could_ have been due to an extension?
6571|unsure if this @alexandrudima or @bpasero
6572|closing. workaround might stay for another while
6573|@thewhitetulip maybe something off with permissions. are you sure the user you are opening code with has rights to write to the files in question?
6574|@bpasero please reopen if this remains
6575|Yes, the user I am running has full rights on the path where the files are stored.
6576|"@thewhitetulip actually the error indicates an issue spawning a command, not writing to a file. Does it reproduce when you disable extensions by running ""code --disableExtensions""? Can you attach the full error that is printed."
6577|I left a single file with a small edit open, just that file in the working files. Otherwise untouched all day. Memory has not increased from it's initial value.
6578|@jrieken IMO a bit hackish. One could think of useful snippets that make sense in comments. But that said, I'm not too emotional about it. Didn't we at one point had 24x7 disabled from comments (and strings). Maybe that's the right approach. Also I'd like to take out snippets out of intellisense and give them a separate shortcut. Maybe we could share that with emmet and even code actions (quick assist).
6579|@bartvanderwal I suggest that you file a separate issue for your feature request because this issue is a bug.
6580|@alexandrudima please reassign if @bpasero is the author of this code.
6581|@jrieken assigning to you since @bpasero removed his assignment.
6582|I think we are doing more than just JSON.stringify/parse though, there is code that knows how to marshall classes.
6583|@alexandrudima I remember that you have seen something like this before. Can you comment on this?
6584|1) I am using typescript, but not jsdoc. Since jsdoc won't run on typescript files anyway, it's a strange assumption that any `/**` comments must be jsdoc. 2) [typedoc](https://github.com/sebastian-lenz/typedoc) does not require leading stars. 3) I tested on some js files and it looks like jsdoc does not require leading stars either. In general, I would like it to always be possible to get the editor to stop interfering, regardless of the tools or coding styles it thinks I should be using.
6585|"Pada 19/01/2016 1:22 PG, ""Andy Hanson"" notifications@github.com menulis:  > 1) I am using typescript, but not jsdoc. Since jsdoc won't run on > typescript files anyway, it's a strange assumption that any /*\* comments > must be jsdoc. > 2) typedoc https://github.com/sebastian-lenz/typedoc does not require > leading stars. > 3) I tested on some js files and it looks like jsdoc does not require > leading stars either. > In general, I would like it to always be possible to get the editor to > stop interfering, regardless of the tools or coding styles it thinks I > should be using. >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/1657#issuecomment-172597062."
6586|yes, but marshalling is not serialising https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/marshalling.ts#L119
6587|ok, let discuss tomorrow. I also have complains about sorting between intellisense and snippets being off
6588|Excellent! This looks great.
6589|"I checked the console, looks like vscode crashes on startup (before I type anything):  ``` Main Thread sent to worker the following message:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Object {type: ""threadService"", payload: Array[3]} workbench.main.js:16 And the worker replied with an error:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Object {stack: ""RangeError: Maximum call stack size exceeded↵    a…escript/common/lib/typescriptServices.js:10:5103)"", message: ""RangeError: Maximum call stack size exceeded""} workbench.main.js:91 RangeError: Maximum call stack size exceeded: RangeError: Maximum call stack size exceeded     at o (typescriptServices.js:10)     at n (typescriptServices.js:10)     at r (typescriptServices.js:10)     at o (typescriptServices.js:10)     at n (typescriptServices.js:10)     at r (typescriptServices.js:10)     at o (typescriptServices.js:10)     at n (typescriptServices.js:10)     at r (typescriptServices.js:10)     at o (typescriptServices.js:10)e.onUnexpectedError @ workbench.main.js:91(anonymous function) @ workbench.main.js:91e.onUnexpectedError @ workbench.main.js:10u @ workbench.main.js:10e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Main Thread sent to worker the following message:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Object {type: ""threadService"", payload: Array[3]} workbench.main.js:16 And the worker replied with an error:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Object {stack: ""RangeError: Maximum call stack size exceeded↵    a…ript/common/js/importAndExportRewriter.js:4:5389)"", message: ""RangeError: Maximum call stack size exceeded""} workbench.main.js:91 RangeError: Maximum call stack size exceeded: RangeError: Maximum call stack size exceeded     at e.visitBinaryExpression (importAndExportRewriter.js:4)     at importAndExportRewriter.js:4     at r (typescriptServices.js:10)     at Object.o [as forEachChild] (typescriptServices.js:10)     at e._visitNode (importAndExportRewriter.js:4)     at e.visitBinaryExpression (importAndExportRewriter.js:4)     at importAndExportRewriter.js:4     at r (typescriptServices.js:10)     at Object.o [as forEachChild] (typescriptServices.js:10)     at e._visitNode (importAndExportRewriter.js:4)e.onUnexpectedError @ workbench.main.js:91(anonymous function) @ workbench.main.js:91e.onUnexpectedError @ workbench.main.js:10u @ workbench.main.js:10e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 javascript.js:4 Object {stack: ""RangeError: Maximum call stack size exceeded↵    a…ript/common/js/importAndExportRewriter.js:4:5389)"", message: ""RangeError: Maximum call stack size exceeded""} typescriptServices.js:10 Uncaught RangeError: Maximum call stack size exceededr @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10e @ typescriptServices.js:10r @ typescriptServices.js:10o @ typescriptServices.js:10 workbench.main.js:16 Main Thread sent to worker the following message:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Object {type: ""threadService"", payload: Array[3]} workbench.main.js:16 And the worker replied with an error:e._onError @ workbench.main.js:16e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 workbench.main.js:16 Object {stack: ""RangeError: Maximum call stack size exceeded↵    a…escript/common/lib/typescriptServices.js:10:5103)"", message: ""RangeError: Maximum call stack size exceeded""} workbench.main.js:91 RangeError: Maximum call stack size exceeded: RangeError: Maximum call stack size exceeded     at o (typescriptServices.js:10)     at e (typescriptServices.js:10)     at r (typescriptServices.js:10)     at o (typescriptServices.js:10)     at e (typescriptServices.js:10)     at r (typescriptServices.js:10)     at o (typescriptServices.js:10)     at e (typescriptServices.js:10)     at r (typescriptServices.js:10)     at o (typescriptServices.js:10)e.onUnexpectedError @ workbench.main.js:91(anonymous function) @ workbench.main.js:91e.onUnexpectedError @ workbench.main.js:10u @ workbench.main.js:10e._onmessage @ workbench.main.js:16e._onSerializedMessage @ workbench.main.js:16(anonymous function) @ workbench.main.js:16worker.onmessage @ workbench.main.js:19 javascript.js:4 Object {stack: ""RangeError: Maximum call stack size exceeded↵    a…escript/common/lib/typescriptServices.js:10:5103)"", message: ""RangeError: Maximum call stack size exceeded""} index.html?config={""pathArguments""%3A[]%2C""programStart""%3A0%2C""workers""%3A-1%2C""enablePerformance""…:24 [uncaught exception]: TypeError: Cannot convert object to primitive valueonError @ index.html?config={""pathArguments""%3A[]%2C""programStart""%3A0%2C""workers""%3A-1%2C""enablePerformance""…:24(anonymous function) @ index.html?config={""pathArguments""%3A[]%2C""programStart""%3A0%2C""workers""%3A-1%2C""enablePerformance""…:96emitOne @ events.js:77emit @ events.js:169window.onerror @ /Applications/Visual Studio Code.app/Contents/Resources/atom.asar/renderer/lib/init.js:70t @ workbench.main.js:45 index.html?config={""pathArguments""%3A[]%2C""programStart""%3A0%2C""workers""%3A-1%2C""enablePerformance""…:27 TypeError: Cannot convert object to primitive value     at new Error (native)     at Client.trackException (/Applications/Visual Studio Code.app/Contents/Resources/app/node_modules/applicationinsights/Library/Client.js:67:25)     at e.log (file:////Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:90:22274)     at t.handleEvent (file:////Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:45:31955)     at t.e.publicLog (file:////Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:45:29133)     at t.e.flushErrorBuffer (file:////Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:45:27142)     at file:////Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:45:27002onError @ index.html?config={""pathArguments""%3A[]%2C""programStart""%3A0%2C""workers""%3A-1%2C""enablePerformance""…:27(anonymous function) @ index.html?config={""pathArguments""%3A[]%2C""programStart""%3A0%2C""workers""%3A-1%2C""enablePerformance""…:96emitOne @ events.js:77emit @ events.js:169window.onerror @ /Applications/Visual Studio Code.app/Contents/Resources/atom.asar/renderer/lib/init.js:70t @ workbench.main.js:45 /Applications/Visual Studio Code.app/Contents/Resources/app/node_modules/applicationinsights/Librar…:67 Uncaught TypeError: Cannot convert object to primitive value ```  My [project in question is open source](https://github.com/DelvarWorld/some-game) and you can check it out. [This file, Game.js](https://github.com/DelvarWorld/some-game/blob/master/src/containers/Game/Game.js) is the only file I have open as you can see in the sidebar:  ![screen shot 2016-01-18 at 11 09 09 am](https://cloud.githubusercontent.com/assets/79215/12400277/eb5d2618-bdd3-11e5-9cd7-2e6d4db61a8a.png)"
6590|Ok, this is very strange :  I can reproduce the bug easily, but I was curious you couldn't. So I checked and found 2 situations : - if you copy/paste 'É' in the replacement text box, it works correctly. - if you type ALT + 0201 in the replacement text box, there comes the bug.
6591|"@Nimzozo Sorry about me cheating and pasting it in when trying to repro!   Indeed the find state would not update on ""input"" events, only on ""keydown"" events, which is incorrect.   Thank you for reporting this, it is a great find! :heart:"
6592|@DelvarWorld having access to the source code is great.  However, I wasn't yet able to reproduce your issues on OS X or Win see the gif below.   @jrieken any additional insights from the stack trace?  ![bug2054](https://cloud.githubusercontent.com/assets/172399/12402777/809b2648-be2f-11e5-9188-e733e580db6e.gif)
6593|This the refactoring scenario from #1991   ![bug2054-2](https://cloud.githubusercontent.com/assets/172399/12402870/3368bb64-be30-11e5-8f44-87eff1996d51.gif)
6594|It tells me I'm up to date...  Version 0.10.6 (0.10.6)  Does visual studio code do any sort of caching of the project?  I guess you could try an `npm install` too in the project root?
6595|@DelvarWorld could you please be more specific as to what is not working for you. I'm asking for real examples and reproducible steps here. Thanks.
6596|You're welcome. :smile:
6597|Thanks for the quick reply @weinand, but actually it IS working now. Somewhat. At least I won't post an issue. I posted some more details of my setup in a [Stackoverflow answer](http://stackoverflow.com/questions/34450175/can-visual-studio-code-be-configured-to-launch-with-nodemon/34864757#34864757) In case this might help anyone
6598|Yes 0.10.6 is the latest and the version I've used (in addition to the latest).  > Does visual studio code do any sort of caching of the project?  Code only caches the UI state (last opened file).  Running npm install is a good suggestion (I was assuming node_modules are excluded in jsconfig.json), but it is a difference. I currently run into npm timeouts I'll try again later.
6599|vscode keeps deleting my tsconfig.json whenever I checkout a new git branch
6600|Can't you just induce a crash manually? Either way take your pick: https://github.com/Microsoft/vscode/issues?utf8=%E2%9C%93&q=author%3ADelvarWorld
