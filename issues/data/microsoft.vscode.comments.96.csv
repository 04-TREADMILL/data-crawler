9501|That is very strange. I haven't changed anything on my PC in the last week except for updating VScode. Still no sign of it happening after 3 days on the new version.
9502|Yeah it is ignored. my git version is 2.6.4. It does seem like this is now a git issue rather than a vscode issue i will investigate it further.  Thanks for the assistance.
9503|I'm not 100% if exactly what you want is supported but something similar can be accomplished using find and replace. Here is what you use on Linux/Windows: - Select word - <kbd>ctrl</kbd>+<kbd>h</kbd> - Type new word - <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>enter</kbd> to replace all
9504|@LKorowicki and @ianwesterfield, I agree that if we show one brace we should show both.  @Ristaaf, you bring up a very good point about how VS does it by folding both.  These are both very good ideas that we will be considering.
9505|It was a case of user error.  My bash_profile was screwing up my path, Visual Studio Code was using that, it worked from the terminal for me because I was using zsh.
9506|@stevencl It's not clear in the pictures here, but I would like to make these expandos slightly larger in VS Code than in VS for this reason.  That way users get a visual reassurance that the hit area is larger instead of merely including a large and forgiving hit target.  Furthermore, I'm thinking the hit target should be the height of the line with some padding to both the left and the right.  I'll post some more images soon that we can discuss.
9507|@joaomoreno Maybe no more need to ship the plugin host sourcemap then?
9508|:+1:
9509|Closing then. We can always reopen if it comes back. Thanks for the info.
9510|Alright, let me know what you find, I'm curious in knowing.
9511|"Thanks for your amazing job and thanks for asking! :blush:  If the ""Tweet"" button will not require having a Twitter account, then it's a solution, I guess. I feel a bit weird reporting those super-tiny issues that still require developers time. Is the [Webkit issue](https://code.google.com/p/chromium/issues/detail?id=158652) related (then we should star it)? Probably even disabling line breaks (like turning `textarea` into line input) could be a solution."
9512|Yes that is the exact issue. Starred it!  I thought about disabling line breaks, but I think it would be a good thing for the user to do, considering Twitter supports line breaks.   The Tweet button wouldn't require a Twitter account, but once the Tweet button takes them to twitter they would need to login.
9513|@alanouri I'm not seeing a browser-based IDE as part of Visual Studio Team Services. Am I missing something, or has it been removed since December?  Thanks!
9514|Well, the need to login on Twitter is a requirement to have a Twitter account :blush: I wouldn't think it's a good UX :relaxed:
9515|Right. Unfortunately Twitter doesn't support anonymous tweets.
9516|Great work @aeschli @bgashler1 ! :+1:   I'm 100% sure my favourite is **2. Hierarchical in-context**. - The [+] / [-] signs are the best because really clear.  - It helps to see the hierarchy in the code !!  Will this be in the next release ? Or are you doing an extension ?
9517|+1. This is a real problem.
9518|"@alexandrudima  I had a look into it. In my env only the `ATOM_SHELL_INTERNAL_RUN_AS_NODE` was present, but you were right that setting it to '0' was not enough, I had to really unset it...  ```     // works     delete sp_env.ATOM_SHELL_INTERNAL_RUN_AS_NODE;     delete sp_env.ELECTRON_RUN_AS_NODE;      // does not work     // sp_env.ATOM_SHELL_INTERNAL_RUN_AS_NODE = ""0"";     // sp_env.ELECTRON_RUN_AS_NODE = ""0""; ```  So the above code fixed the issue and the electron process spawns just fine now.  To correctly switch to the selected VSCode window and activate it, I used the 'ffi', 'ref' and 'ref-struct' modules to call the necessary WinAPI methods. So I am currently not using any inter-proccess communication (stdout) in my solution, but I just perform the switching to the selected window directly in the opened electron process.  ``` const SW_SHOWMINIMIZED = 2; const SW_SHOW = 5; const SW_RESTORE = 9;  var wnd_plc_ptr = ref.alloc(WINDOWPLACEMENT); user32.GetWindowPlacement(hwnd, wnd_plc_ptr); var wnd_plc = wnd_plc_ptr.deref();  // when the window is minimized then SW_RESTORE if (wnd_plc.showCmd == SW_SHOWMINIMIZED)     user32.ShowWindow(hwnd, SW_RESTORE); // otherwise SW_SHOW else     user32.ShowWindow(hwnd, SW_SHOW);  user32.BringWindowToTop(hwnd); user32.SetForegroundWindow(hwnd); ```  @egamma  Right now, I have the first prototype version of the extension that I had in mind working just fine. The boot time is about half a second, so it could be ""okay"" for most users I guess (optimizations could be done in the future though).  For the short time that I tested the window interactions, everything seems to be ok so far. Also the keyboard focus seems to be just fine while switching between the windows. Time will tell if there are any other mishaps that are not immediately obvious right now.  Once I have implemented a usable UI experience for the extension I will put it on github / publish it to the extension gallery.  Thanks again for the help & feedback :grinning:"
9519|@LKorowicki I'm digging your suggestion for folding the closing brace to the same line, but keeping it visible.
9520|"@egamma thanks for suggestion, but unfortunately didn't solve the problem.   I've activated Salsa and installed a compatible TypeScript version.   Proof here: ![image](https://cloud.githubusercontent.com/assets/762847/13089297/a88194be-d4f8-11e5-83b9-aa3f7e950db3.png)  But as you can see **WebApp** object is not resolved from the Razor View.  ![image](https://cloud.githubusercontent.com/assets/762847/13089241/71f863f0-d4f8-11e5-8e31-8bf7624f51d0.png)  And if I type myself WebApp and hit ""."" then I repeatedly get ""WebApp"" each type I type "".""  ![image](https://cloud.githubusercontent.com/assets/762847/13089403/13fa9056-d4f9-11e5-86cc-d8b0606e72e2.png)  ![image](https://cloud.githubusercontent.com/assets/762847/13089415/1e20fe4e-d4f9-11e5-8883-11c0243abb8c.png)"
9521|Same issue on `OS X 10.11.3` Fixed by renaming `${workspaceRoot}` to something like `/User/VSCoder/MyApp/`
9522|+1 biggest usability problem for me
9523|+1 For built in or as extension
9524|I increased the size of my cursor and it is helping for now.
9525|@tomsontom I'm assuming you're in a TypeScript file?  Works for me: ![ts-completion](https://cloud.githubusercontent.com/assets/5047891/13093781/5b986cf4-d507-11e5-9fda-3457fd79dfb5.gif)
9526|@yageek The code looks good to me. Can you please also share the `package.json` contents?  i.e. is your extension activated?
9527|@ZombieProtectionAgency would `Ctrl+P` work?
9528|@TemaSM since I'm using the same OS X 10.11.3 and I've never experienced any problems with this new validation myself, I'd like to understand what the problem is.  Are you launching VS Code from the command line? Is your workspace on a case sensitive file system?
9529|"Awesome thanks.  Dos format works like a charm :) On Feb 16, 2016 11:43 AM, ""Alexandru Dima"" notifications@github.com wrote:  > @danlfarnell https://github.com/danlfarnell This is most likely a file > with a different encoding than UTF8. Please use the switcher at the bottom > right to open the file with a different encoding or use the > ""files.encoding"" setting to change the default from UTF8 to something > else. >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/3053#issuecomment-184761513."
9530|@isidorn thanks for the feedback (and for passing on Joao's feedback).  I've updated the icons accordingly.  89110456c2017f14ce66adca029f53af43c34313 ![breakpoint-dark](https://cloud.githubusercontent.com/assets/11839736/13095027/a6addda8-d4c3-11e5-8c96-50f4614a9ab3.png)  Concerning the light/dark icons looking the same as each other, the icons are actually slightly different.  The dark theme breakpoints are slightly lighter than the light theme ones.  This was intentional to match how our current breakpoints look between light and dark themes.
9531|@Thaina leave out the `editorTabMovesFocus` part.  The default shortcuts map this binding to `acceptSuggestedSelection`, and you need to override it.
9532|@bpasero I see this issue with Insiders (0.10.8) and Salsa enabled, pretty consistently running at a high energy impact (OSX)
9533|@alexandrudima Sorry, overriding by suggestWidgetVisible actually works. I just make some mistake  Thanks for @ghost help too. But where is acceptSuggestedSelection you mention?
9534|I'm also experiencing this behavior when pressing SHIFT+TAB. All the selected block of code is deleted and CMD+Z (undo) doesn't work at all.  OS X El Capitan 10.11.3 VS Code 0.10.8-insider
9535|maybe you don't set `Salsa` rightly, look this: #3005 , hope help you.
9536|Duplicate of #396
9537|@weinand fyi
9538|Thanks @meritozh  Some additional things to observe: - The Salsa indicator shows up only when a .js file is open in the editor. - When hovering over the Salsa indicator you can see the path to the tsdk that is used. Verify that it is valide and that it is a tsdk > 1.8  Closing as cannot reproduce.
9539|@isidorn looks there are three commands to launch (F5, 'play' in the toolbar, Debug:start). It is fair to expect that they are all using the same command underneath.
9540|Closing
9541|Pls add an example/snippet that illustrates the problem.
9542|"Thanks for the additional information. There is currently no support for Intellisense in Razor files, sorry. This is a fair feature request.   This leaves the issue with the lack of Intellisense in the original snippet https://github.com/Microsoft/vscode/issues/3031#issue-133825533. Can you please indicate with `>|<` where you are triggering Intellisense and where you do not get completion."
9543|@drywolf thanks much for exploring this. The feedback sounds promising. I'd be very interested to use the extension once you are happy with it.
9544|"@brunnopleffken haha ""SHIT + TAB"" :laughing:"
9545|@alexandrudima yes I am in ts-file - but i just saw that I have been on 0.10.6 - update to 0.10.8 and now things work!
9546|![delete](https://cloud.githubusercontent.com/assets/7543300/13103555/379dcc14-d592-11e5-9fd3-65dfbcdb5cb4.gif) like this, can delete a couple of empty brackets quotes and html tags by pressing once
9547|"Here is the contents of the `package.json` file:  ``` {     ""name"": ""Dart"",     ""displayName"": ""Dart"",     ""description"": ""Dart support"",     ""version"": ""0.0.1"",     ""publisher"": ""yageek"",     ""engines"": {         ""vscode"": ""^0.10.1""     },     ""categories"": [         ""Languages""     ],     ""activationEvents"": [         ""onLanguage:dart""     ],     ""main"": ""./out/src/extension"",     ""contributes"": {         ""commands"": [{             ""command"": ""dart.format"",             ""title"": ""Dart: Format file"",             ""description"" : ""Launch Dart format file""         }],         ""languages"": [{             ""id"": ""dart"",             ""aliases"": [""Dart"", ""dart""],             ""extensions"": ["".dart""],             ""configuration"": ""./dart.configuration.json""         }],         ""grammars"": [{             ""language"": ""dart"",             ""scopeName"": ""source.dart"",             ""path"": ""./syntaxes/dart.tmLanguage""         }]     },     ""scripts"": {         ""vscode:prepublish"": ""node ./node_modules/vscode/bin/compile"",         ""compile"": ""node ./node_modules/vscode/bin/compile -watch -p ./""     },     ""devDependencies"": {         ""typescript"": ""^1.6.2"",         ""vscode"": ""0.10.x""     } } ```"
9548|@egamma @weinand do we really want this? We originally had it but it is polluting the context menu thus we removed it. Most of our users are not using the debugger and this would be useless to them in the context menu. Maybe I can add it to the context menu only if the user has a `launch.json` in his workspace
9549|"@egamma this issue as described in ""TheLevenCreations"""
9550|Debug currently does not have a language understanding on the vscode side.  Due to this we treat comments as any other text. For this to be improved VSCode debug would need to have the understanding of the AST of the .js file, which we might do in the future.
9551|Nice job, I like it
9552|"@yageek Also didn't work for me until I realized that `formatOnType` is a setting that must be turned on before this functionality works. So, in your test folder or in your settings please try adding `""editor.formatOnType"": true`"
9553|Bonus points if it resolves the variable and shows a colour swatch when used in place of a colour :)
9554|Thanks for the help. Should not this be pointed out in the documentation of `registerOnTypeFormattingEditProvider` ?
9555|"Extracted comment from #2263  Yes, please!  With the PowerShell extension we want to provide a default task to run Pester tests.  It would be great if an extension could provide the initial tasks.json file you get with `Tasks: Configure Task Runner`.  We would also like to provide a problemMatcher that could be referenced from the Pester (test) task.  The problemMatcher is somewhat lengthy and it would be nice to reference it like so:  ``` javascript {     ""version"": ""0.1.0"",      // Start PowerShell     ""command"": ""${env.windir}\\sysnative\\windowspowershell\\v1.0\\PowerShell.exe"",      // The command is a shell script     ""isShellCommand"": true,      // Show the output window always     ""showOutput"": ""always"",      // Allow Pester to invoke scripts and run Pester     ""args"": [         ""-NoProfile"",         ""Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process;"",         ""Write-Host 'Invoking Pester...'; Invoke-Pester;"",         ""Invoke-Command { Write-Host \""Completed all tasks in task runner: $($args[0])\"" } -args""         ],      // Associate with test task runner     ""tasks"": [         {             ""taskName"": ""Pester"",             ""isTestCommand"": true,             ""problemMatcher"": ""$pester""          }     } } ```  Seems like the `package.json` needs a `contributes.Tasks` where extension authors can contribute both problemWatchers and task initial configurations."
9556|Moved the [comment](https://github.com/Microsoft/vscode/issues/2263#issuecomment-183599273) from @rkeithhill to #966.
9557|"For me the issue is **NOT** fixed. I tried 0.10.8 and 0.10.8 Insider. ""**end of central directory record signature not found**"" still persists. I am behind corporate proxy. I uninstalled previous versions of VS Code before installing. What can I do to get around this issue?"
9558|After discussing with @alexandrudima this issue happens because our actions can get exectued without a notion of a command. This usually happens through the UI and this does not have anything to do with debug, it is a general flaw in our action / command concept.  We will look into improving this in one of the debt weeks, which will requre refactoring all our actions to always be run through a command.
9559|@thoros1179 Did you configure the `http.proxy` and `http.proxyStrictSSL` settings?
9560|I configured http.proxy and https.proxy. The extensions can be browsed but fail to install. I also tried http.proxyStrictSSL: false but it doesn´t change anything. The error persists.  ![vscode](https://cloud.githubusercontent.com/assets/17291996/13107683/102754e8-d56f-11e5-9f4b-4c1cbf112631.png)
9561|What extension are you trying to install?
9562|After investigating into this issue we came up with the following proposal: - Handle the situation more gracefully when a `preLaunchTask` cannot be found. This is tracked in #3081  - The .net extension should avoid this situation all together by creating a task.json for the user when one doesn't exist yet. This can be done when the extension is activated.  Rejected proposals: - Support to launch a shell command as a `preLaunchTask`. To make this properly requires to support all the configuration options (e.g. platform specific commands) that is already provided by the `task.json`. It doesn't make sense to duplicate this inside the launch.json. - Generate the task.json by the generator yo or aspnet - the generators do not want to generate tool specific files.  Closing this issue.
9563|I tried different extensions, such as Go, Powershell (the first two shown when browsing with ext install), but also some Angular JavaScript and TypeScript Snippets extensions. None of them can be installed.
9564|I can confirm, using the same textmate bundle in sublime works, so this must have something to do with vscode.
9565|if I try to List the Extensions, it doesn't show anything. After a while I have an error  ![image](https://cloud.githubusercontent.com/assets/1577981/13109125/b1f4a70a-d577-11e5-815a-235aa1fed008.png)  When I toggle developper mode this is what I see getaddrinfo ENOTFOUND [mylogin] [mylogin]:80: Error: getaddrinfo ENOTFOUND [mylogin] [mylogin] :80     at errnoException (dns.js:25:10)     at GetAddrInfoReqWrap.onlookup [as oncomplete](dns.js:76:26)
9566|"yes that's what i meant i just forgot intellisense name :""D"
9567|Hi **@xNUTs**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
9568|☺
9569|@egamma FYI
9570|Any chance I can use the same proxy you do?
9571|Oh... Yes. That was what I had in mind, sorry!
9572|What do you get if you run `node` and in its interactive prompt run `require('url').parse('YOUR PROXY URL')`?  Namely, do the `host` and `auth` parameters look OK to you?
9573|Sorry, just one more command. What do you get with `git status -z -u`?
9574|I would like to add that I've seen other reserved words not being correctly colored. My theme is _Dark (Visual Studio)_. - `constructor` - `default` is blue but in `switch` statement turns back to normal color when followed by `:` - `delete` - `extends` - `in` - `instanceof` - `static` - `typeof` - `void` - `yield`  `in`, `instanceof`, `typeof` are operators but still reserved words, so I think they should be colored in order to help people not to use them as identifiers.  I'm still looking for other ones.
9575|I´m afraid this isn´t possible ;-) I will reconsider the issue with our proxy admin tomorrow. Maybe there is some other connection that is still blocked from our proxy. I will update you on the progress. Thank you.
9576|@Nimzozo can you check whether these keywords are are colored when you use the Dark+ theme?  In the example from @dbaeumer above the Dark+ theme colors  `function` as a key word.
9577|@egamma When I use Dark+ theme, that's exactly the same behaviours that I described.   I just see there are new colors for parameters, identifers, etc...
9578|Sorry, but it came back last night.  I'm not sure how I can help, other than to record a video of it? Not sure that would help though as it would only show you what I'm describing. Or I could try sending you copies of the index file?  I have tried taking two copies of the index file after it says it's been modified to see if it has actually been modified, but I can't even open it in VS code as it's a binary file.  And the fact that it didn't do it for a couple of days during which I had dropbox switched on is an absolute mystery. My PC in the office doesn't do it either. However I know it's VS Code doing it because it stops happening as soon as I switch VS Code off :(
9579|In _monokai_ theme : - `constructor` - `default` followed by `:` inside a `switch` statement - `extends` - `static` - `yield`  are not in pink color.
9580|@alexandrudima I've verified fix for the insider's build.
9581|@alexandrudima looks great for stable too
9582|"Repros on Ubuntu. Setup:  ``` bash touch test sudo chown root test sudo ~/tools/VSCode-linux-x64/Code . ```  ![hang](https://cloud.githubusercontent.com/assets/2193314/13113721/2b9250cc-d545-11e5-88b8-a5a18742a1d7.png)  Output:  ``` bash ~/temp ❯ sudo ~/tools/VSCode-linux-x64/Code . bash: cannot set terminal process group (-1): Inappropriate ioctl for device bash: no job control in this shell [VS Code]: detected unresponsive ```  Process stats:  ``` ❯ ps aux | grep VSCode root      2485  0.0  0.0  58860  3976 pts/0    S+   07:03   0:00 sudo /home/daniel/tools/VSCode-linux-x64/Code . root      2486 15.6  0.6 1353480 113552 pts/0  Sl+  07:03   0:22 /home/daniel/tools/VSCode-linux-x64/Code . root      2488  0.0  0.1 320284 28052 pts/0    S+   07:03   0:00 /home/daniel/tools/VSCode-linux-x64/Code --type=zygote --no-sandbox root      2504  0.5  0.6 459360 105128 pts/0   Sl+  07:03   0:00 /home/daniel/tools/VSCode-linux-x64/Code --type=gpu-process --channel=2486.0.602618759 --no-sandbox --supports-dual-gpus=false --gpu-driver-bug-workarounds=2,27,30,45,55,57 --disable-accelerated-video-decode --gpu-vendor-id=0x10de --gpu-device-id=0x1187 --gpu-driver-vendor=NVIDIA --gpu-driver-version=352.63 --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd root      2550  0.1  0.2 916508 46500 pts/0    Sl+  07:03   0:00 /home/daniel/tools/VSCode-linux-x64/Code /home/daniel/tools/VSCode-linux-x64/resources/app/out/bootstrap --type=SharedProcess root      2562  105  2.9 2609236 485880 pts/0  Rl+  07:03   2:32 /home/daniel/tools/VSCode-linux-x64/Code --type=renderer --no-sandbox --lang=en-US --node-integration=true --enable-delegated-renderer --num-raster-threads=2 --gpu-rasterization-msaa-sample-count=8 --content-image-texture-target=3553 --video-image-texture-target=3553 --disable-accelerated-video-decode --channel=2486.1.575172126 --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd root      2586 58.2  0.5 959572 93820 pts/0    Sl+  07:03   1:23 /home/daniel/tools/VSCode-linux-x64/Code /home/daniel/tools/VSCode-linux-x64/resources/app/out/bootstrap --type=pluginHost root      2587  0.1  0.3 912380 49384 pts/0    Sl+  07:03   0:00 /home/daniel/tools/VSCode-linux-x64/Code /home/daniel/tools/VSCode-linux-x64/resources/app/out/bootstrap --type=watcherService daniel    2824  0.0  0.0  13692  2220 pts/11   R+   07:06   0:00 grep --color=auto VSCode ```"
9583|@philipgiuliani Oops! Mistyping an issue may cause situations like this, HAHAHAHA
9584|that's exactly what I tracked down while I was debugging, the parsing has something wrong and you're right i tracked it down to the https-proxy module which leverages on the node url parser. the data is totally messed up.  I Managed to track it down to the presence of a '#' character in my password. might be worth url-encoding  the content maybe
9585|Close this?
9586|Close this?
9587|@goddyZhao, does the above comment work for you?  If not, what about Ctrl+F2?  @alexandrudima/@egamma, is there anything special that's going to happen with this?  I would have thought this could be closed pending a confirmation from goddyZhao, but I see this has been assigned.
9588|Ok so now that I solved the first issue on the '#' illegal character in the declaration of the proxy + user & password url. I ended up with the 'end of central directory record signature not found' error.  I managed to track it down to the error in the DNS resolution of vortex.data.microsoft.com which is clearly blocked by our corporate proxy. for confidentiality reasons
9589|👍   **UPDATE 6/21/16** ![eca501f82483cf063f73045316c8c2a1](https://cloud.githubusercontent.com/assets/15803541/16252781/0f7ef06c-37ff-11e6-884e-f058cfad32ca.jpg)  What sense does it make to thumbs-down posts from before reactions were introduced in [March 2016](https://github.com/blog/2119-add-reactions-to-pull-requests-issues-and-comments)?  Thumbs down if you think you think you should stop trolling and start contributing.
9590|Awesome, great to know this @kikokikok.  @thoros1179 can you please check whether your proxy is also blocking `vortex.data.microsoft.com`?
9591|Good catch. You should url encode the password before putting it in a url yeah.
9592|@mamartins  they fixed it in the latest update.
9593|One other thing that might be of interest is the fact that a lot of the resolutions have to be performed through the proxy any DNS resolution of external public domains from the internal are not allowed.  The proxy is doing the resolution silently. I didn't check the code but clearly seems like it might perform DNS resolution directly which might fail on corporate secured internal networks
9594|Ah, that was my error, I was expecting it to show for .ts files
9595|Here I still have this: ![screen shot 2016-02-17 at 17 51 22](https://cloud.githubusercontent.com/assets/856772/13119063/1ab623c8-d59f-11e5-94b9-ad62725f3a2f.png)  having a exact match for a for (in this case the second option) this should be the first one that only need a tab to auto-complete it. Same for `if` for e.g..  another annoying thing is the snippets, they still miss a lot, one I've added right away was `log + tab` to produce a `console.log`
9596|"@jasonnolanreed I wouldn't call it an IDE but rather a text editor.  You get intellisense for some files, SCM integration, syntax highlighting, markdown preview, etc.  To get to the text editor for a file: 1. ""Code"" 2. ""Explorer"" 3. Select a file 4. Click ""Edit""  In order to save you have to commit, you can't open multiple files other than opening them in multiple browser tabs, etc, so it isn't really optimized for doing ALL your coding in.  But if I were on ChromeOS I would be happy to have the functionality it has?"
9597|> @alexandrudima/@egamma, is there anything special that's going to happen with this? I would have thought this could be closed pending a confirmation from goddyZhao, but I see this has been assigned.  We assign issues once it has been initially triaged, pls see https://github.com/Microsoft/vscode/wiki/Issue-Tracking  Having said this, when @goddyZhao confirms, then the issue should be closed.
9598|@ghost thanks!   Closing
9599|Closing, thanks.
9600|I'm having the same issue. But mine doesn't work in Salsa or pre-Salsa.
