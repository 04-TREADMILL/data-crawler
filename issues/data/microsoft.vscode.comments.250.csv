24901|We already had discussion about how to bring terminal and tasks together. Having both in todays form doesn't make too much sense.
24902|Same problem here with the last version 1.2.0-1465219835 The exact same problem is present on Atom editor https://github.com/atom/atom/issues/2539 and could be related to this NodeJS issue https://github.com/nodejs/node-v0.x-archive/issues/6877  There you can find a possible fix.
24903|Very unlikely. Do you have some sort of backup software installed.   Some additional test we could do are: - start CodeHelper on the workspace again - open a non ts file in the workspace. Do you get a change event for it ? - use a different editor and open files in the workspace. Again, do you get change events ?
24904|https://github.com/Microsoft/vscode/issues/1105
24905|@calam1 looks like VS Code is running out of memory causing the crash. Please provide me with the workspace you see this on if possible so that I can reproduce.  @jack-pallot can you find out which of our processes is running with high CPU? The full command line is needed to identify.
24906|This issue was moved to Microsoft/TypeScript#9019
24907|This is currently by design and was reported already.
24908|Closing as dup of the exploration item in the June iteration plan here: https://github.com/Microsoft/vscode/issues/7253
24909|"Just added the config keys `terminal.integrated.shellArgs.<platform>`, tested by making sure .bash_profile ran with this config:  ``` json {   ""terminal.integrated.shell.linux"": ""bash"",   ""terminal.integrated.shellArgs.linux"": [ ""-l"" ] } ```"
24910|Still keeping it open since the iteration plan doesn't explicitly talk about emitting. But the idea is to use the tsserver for emit and project level type checking.
24911|Clearly not, just compare both timelines. I think there is enough information here already...
24912|+1
24913|Yep, this is a bit strange. Also, since settings can roam, there would need to be a format across all platforms and `%var%` is windows specific. Not a big fan, I'd let this be as designed.
24914|I was thinking about this yesterday and remembered that I have two context menu icons for VSCode. One is from one of the early build that I guess didn't uninstall/unregister correctly (same with Atom, as you can see) :  http://imgur.com/zr5uJlP  Could it be that OmniSharp (and Go) is somehow trying to use that one, but since it doesn't exist anymore it fails? Probably not that but just a thought.
24915|Btw link detection is running in outputWorker.ts which as far as I understand runs inside a worker (@alexandrudima can confirm). I believe most time is being spend in tokenizing the output using this monarch mode: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/output/common/outputMode.ts#L21
24916|I gotta reopen this. Here are identical cases which behave as I expected this one to too: - Setting up debug `launch.json`; - Setting up task `tasks.json`; - Setting up workspace settings.  All of those will just create the file in disk and not show me an unsaved indicator.  I clearly want that `jsconfig.json` file, since it took me 2 clicks to get it. If I regret it, it's a delete away. But showing me the unsaved indicator when I have auto-save enabled... üëé
24917|Code doesn't support cygwin's git.  Also, in Windows we have some heuristics to pick it up without depending on the `PATH`. That's why the `Program Files (x86)` one is being picked up.  Git has long ago released a [2.x.x version for Windows](https://git-scm.com/download/win), I suggest to install that one.
24918|Yes, please use the sass extensions and file request against them.
24919|Since the last update, the editor is very slow for me too. I'm on Mac (10.10.5) and I just upgraded to 1.2.0  _EDIT_: I run VS Code vanilla. No plugins.
24920|Which one? User or workspace settings?
24921|Yesterday it reproduced very clearly. I was about to close this since I can't reproduce today, until I was able to... just once, just now.  There is something about the combination of <kbd>Ctrl Click</kbd> and `Find all References` that triggers this behaviour, I just can't seem to quite put my finger on it.
24922|As a workaround, I suggest using a credential manager or ssh keys.
24923|I never noticed having this.
24924|Absolutely, looking forward to it.
24925|Yes, agree, the popup is too distracting.
24926|I really like this idea. We would: - never show the update popup again - automatically update on startup, if available - still show `Update available` in the menu, if that's the case
24927|Can't reproduce after updating to last night's build... It did repro in a build from Friday, though.
24928|"It would be great it if there was a ""Downgrade to previous"" in case something is seriously broken in the latest."
24929|duplicate
24930|@Tyriar There's a utility program ‚Äú[setfont.exe](https://github.com/rprichard/winpty/blob/master/misc/SetFont.cc)‚Äù provided in winpty. You can actually bundle it and run it if user specified console font and size.
24931|Same issue here on Linux, 1.2 release.  OS: Ubuntu Gnome 16.04 Shell: Zsh (oh-my-zsh) Zsh theme: powerlevel9k Font: Ubuntu Mono derivative Powerline Regular  I tried the mac workaround but unfortunately it did nothing.
24932|Should we close this then? Could you please reference a superseeding issue?
24933|Fix for Go To Definition confirmed to work. GJ @jrieken
24934|By analyzing the blame information on this pull request, we identified @egamma and @joaomoreno to be potential reviewers
24935|Hi **@sijad**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
24936|This can happen like so: (1) provider reports n references (potentially in non existent files), (2) we render all references (unchecked due to cost issues), and (3) load the file when you expand the tree note. If then loading of the file fails we show that behaviour. I have favoured that over big in your face error messages.   Pretty sure you had a stale tsserver leading to this
24937|Closing as designed. Need a better way to solve that problem though.
24938|Yes - that's the designed behaviour and the difference between _go to_ definition and _peek_ definition.
24939|"@user414 We have a new configuration option to disable word based suggestions: `""editor.wordBasedSuggestions"": true|false`"
24940|@bpasero I've update all my devices today, see how we go over next few days
24941|"OK I am able to confirm that ""setfont.exe"" trick can some sort work. Note the cursros position. ![image](https://cloud.githubusercontent.com/assets/240091/15889791/250a5d32-2d9f-11e6-8580-58adc8ba49aa.png) ![image](https://cloud.githubusercontent.com/assets/240091/15889825/49a8c9a8-2d9f-11e6-9ea0-4b0ff9ed4c52.png)"
24942|This issue was moved to felixfbecker/vscode-php-debug#40
24943|We have decided to open up that way - giving extensions the power to modify the configuration outweighs the risks.
24944|Sorry, invalid. I missed to install tslint when moving to insiders build.
24945|@isidorn we should clear all temporary breakpoints after the program has stopped again (step 3 from above)
24946|@dbaeumer most likely you are running into this node bug: https://github.com/nodejs/node/issues/7219
24947|I still think it happens more often when developing on extensions, e.g. when you launch an extension for debugging. That might explain why you do not see it and others more often (that happen to work on extensions more often).
24948|Hi, I'm using the Insiders release to trial the new ‚Äútabs‚Äù interface. I don't see a shortcut to go to the next file in an open editor?
24949|Maybe I run into this when with the integration tests, esp during dev when they don't always succeed or I kill the execution with `Ctrl+C`
24950|I agree, the popup is distracting. But I am not sure about automatically applying the update, especially if it could lead to breakages. There have been some issues recently with other products that automatically apply updates...  Many products show a message box on launch to communicate that an update is available. Once that is dismissed it never shows up again. This is still distracting but when we are releasing daily updates that haven't been fully tested I think it might be better to let the user know before we apply an update. Many people (especially those with bad network connections) get annoyed when they don't have control over when an app uses their network.   We could also have yet another setting that allows the user to choose whether or not to automatically apply updates.
24951|@OliverJAsh  ![image](https://cloud.githubusercontent.com/assets/900690/15890740/54048b72-2d71-11e6-862b-4bae1a64b85f.png)
24952|Visual Studio has a setting that enables or disables the preview tab in each tool window where files could be opened: ![image](https://cloud.githubusercontent.com/assets/1704059/15890875/ab751942-2d69-11e6-9507-6077dcc20661.png) - we could have something like previewTab.enableInExplorer {true/false}, previewTab.enableInQuickOpen, etc.
24953|Thanks!  On Wed, 8 Jun 2016 at 11:06 Benjamin Pasero notifications@github.com wrote:  > @OliverJAsh https://github.com/OliverJAsh > [image: image] > https://cloud.githubusercontent.com/assets/900690/15890740/54048b72-2d71-11e6-862b-4bae1a64b85f.png >  > ‚Äî > You are receiving this because you were mentioned. >  > Reply to this email directly, view it on GitHub > https://github.com/Microsoft/vscode/issues/6965#issuecomment-224545847, > or mute the thread > https://github.com/notifications/unsubscribe/AA4QCRwwfq--WiaP6mkbZmvxGVwDc-vYks5qJpQigaJpZM4IoZjV > .
24954|Ëøô‰∏™ÈóÆÈ¢òÊó©Â∞±ÂèçÈ¶àËøá‰∫ÜÔºÅÁé∞Âú® 1.3Áâà ‰æùÊóßÂ¶ÇÊ≠§
24955|@bpasero so the markers are not having the complete information?
24956|Hey is there any update on this issue? It would be really helpful!
24957|I've just repro'd this on another different machine (Windows 7). This was a clean machine, I had to install Node, GIT and VSCode. Behaves exactly as described in OP.  Is it possible the TS5009 error you get is somehow related to the bug? The problem is path confusion after all. And clearly the two files `src/index.ts` and `src/other/thing.ts` have the common root `src/`, so the TS5009 is very strange and suspicious.  I mean, how else could you structure a two-file project, with one file nested in a subdirectory, if tsc can't work out the common root? Do you still get TS5009 on your machine if you run `tsc index.ts subdir/index.ts` in a fresh directory with those files created?
24958|Hey, that helped a ton! I didn't realize there was a way to launch without extensions. It worked, so then I was able to move out my extensions one by one until I found the culprit. It was a random syntax ext. I had made months ago to fix the fact that vscode wasn't highlighting angular2 templates correctly (because of the weird [] \* and () syntax in the attributes). Not related to PHP, but I'm sure the config of it broke it somehow.   Either way, it's not needed anymore since vscode supports angular2 syntax by default.  Thanks!
24959|@sandy081 the output was showing multi line error and the marker was showing single line in hover and problems view. Not sure if this is a UI problem or marker problem.
24960|I am experiencing the same thing to plus saving the JS file the title are start to flicker and will not save.
24961|@alexandrudima @jrieken It would be so awesome and so helpful for lots of our users if you could you add it, or perhaps to suggest where to start looking if you reckon it could be done as a pull request.
24962|A clue... in `index.ts`, if I comment out the `import Thing...` and `let thing...` lines, and then build in VSCode with Shift+Ctrl+B, both built files are correctly placed under `../built`.
24963|Another one that I often see ![screen shot 2016-06-08 at 11 45 27 2](https://cloud.githubusercontent.com/assets/3898363/15891856/84fa5304-2d6e-11e6-8bb9-9038a3d713a5.png)
24964|"@egamma, @aeschli  - I wonder if I should implement a restriction wrt setting configurations. For me it makes sense that you cannot write a setting which isn't defined anywhere, like `""editor.foobar"": true` will throw unless _some_ extension has contributed this using the [contribution-point](https://code.visualstudio.com/docs/extensionAPI/extension-points#_contributesconfiguration). What do you think?"
24965|@weinand Supporting that opens many doors. I'd rather we jump on the issue, fix it and publish an update instead.
24966|> We could also have yet another setting that allows the user to choose whether or not to automatically apply updates.  üëç
24967|Given that our settings are just key-value pairs, why would we care about settings like 'foo.bar'. We also have some hidden settings that aren't defined in the settings and there's always the the case that an extension is not present. I'd rather worry about validating the type of the setting (string, number, boolean...)
24968|Error occurs on this [line](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/terminal/electron-browser/terminalInstance.ts#L139)  See chrome debug log [attached](https://github.com/Microsoft/vscode/files/304581/vs-code-terminal-error.txt)
24969|@alexandrudima Yes. I rechecked everything and my `keybinding.json` is there and it contains exactly what you have provided. However, I still have the problem.
24970|> Given that our settings are just key-value pairs, why would we care about settings like 'foo.bar'.  Because they end up in a file which is supposed to be human readable, if an extension by accident fills it up with random stuff your configuration is effectively lost.
24971|@aeschli can comment
24972|"@jrieken we tried and in   Version 1.2.0-insider Commit 24e811aaa256f9d45c10fbe2491a5938f57482c0  the changing of   ``` ""editor.wordBasedSuggestions"": true|false ```  Has no effect on the issue originally described. Does changing those setting fix the problem for you?"
24973|I am experiencing the same thing if i open a third file-tab.  It also does not refresh the window if i (alt-tab) into an other open programm, like browser etc. _ Edit: I work on Windows 7._
24974|@Tyriar I've fixed your tests. Please review.
24975|Since we're in June is this already in the main branch?
24976|Ummmm, yeah, I'll see if I can find the time. We're pedal-to-the-metal at the moment! >_<
24977|Probably related to https://github.com/nodejs/node/issues/7219
24978|Any reason why Code doesn't/can't support Cygwin's git?
24979|Just never really looked into it.
24980|You can have a peek at https://github.com/Microsoft/vscode/pull/7181. It adds a before and after to the decoration type and decoration instance, to be used for text, images or some css magic.
24981|@aeschli Awesome, thanks! Looks great, looking forward to see the change merged and released.
24982|First a BIG THANK YOU to all of the contributors to this feature!!!!  @Aarilight did you figure out how to do change the binding to just `Alt + drag`? `Alt+shit` is very annoying : (
24983|I don't have any problem matchers and the task doesn't produce a lot of output- maybe 25 lines total or so.  On Wed, Jun 8, 2016, 4:02 AM Dirk B√§umer notifications@github.com wrote:  > @spongessuck https://github.com/spongessuck do you have problem > matchers installed in your task? Does the task produce lots of output. We > are aware of the fact that task with lots of output run slower due to > rendering the text in the output panel. >  > ‚Äî > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub > https://github.com/Microsoft/vscode/issues/7353#issuecomment-224517380, > or mute the thread > https://github.com/notifications/unsubscribe/AGE0TnZWpxibaBWe3kXHroqbYlg3Oqoiks5qJnclgaJpZM4IwTxq > .
24984|@aeschli Can you point me at any documentation or example that shows how to add completion options for HTML language as you mentioned? Did some searching yesterday and didn't find anything.
24985|@joaomoreno let me know how it goes in selfhost, I pushed a change to disable monarch coloring and also some of the language configuration that imho does not make much sense there.
24986|I pushed a change to use the markers only for closed documents (https://github.com/Microsoft/vscode/commit/d9491c040dc85867427381c9d788d6b5f1b1a0f8). I will report back if this improves my experience.
24987|Sounds like a fun extension to write :)
24988|Yestarday i removed 1.2 and installed 1.0.. 1.0 is working stable, but 1.2 version eats 99% CPU time on load, on opening and on save (on save ~60 CPU time).  _p.s.: sorry for my english_
24989|I have added `workbench.files.action.collapseFilesExplorerFolders` and `workbench.files.action.refreshFilesExplorer` as global actions. I also added `explorerViewletVisible` as context if you want to assign a keybinding that only runs when the explorer is visible.
24990|@aeschli Should we close this dupe?
24991|Yes - with that setting set to `false` you should not get completions inside comments unless you have another extension installed that does that
24992|started codeHelper on cmdLine promt. Then started vsCode from context menu of file explorer on my project folder. In vsCode the file tsconfig.json was opened by default, --> no events happend in codeHelper.  Then navigated to a subfolder of my project where some of my ts files resides and at this time, events are shown in codeHelper. Then opend a ts file in Notepad++ and codeHelper lists this file again and again... until I close the ts file in Notpad++.
24993|Who can help take a look?  I think it's a problem here: https://github.com/Microsoft/vscode/blob/1.2.0/src/vs/editor/contrib/find/common/findModel.ts#L37
24994|"@sandy081 I would not expect the problems view to show me problems for anything but markers for `file://` and `untitled://` resources.  Please debug this and see where the ""`then`"" failure happens (I do not get this warning and cannot reproduce)."
24995|https://github.com/Microsoft/vscode/issues/5887
24996|"Same problem here, I've the 0.10.6 version and it says ""no update available"" (though 1.2.0 is out). Proxy is ok I can install extension without problem. I tried using Administrator rights too but nothing work. I'll install by hand, but I would have preferred the update checking system to work."
24997|The language syntax files already have foldingStartMarker/foldingStopMarker.  It seems that one way forward would be to use these, if available, then fall back to the current/default behavior of indentation-based folding.
24998|"just like ""ctrl+d"" in sublime"
24999|"If you mean the default setting when you mention workspace, here it is:  I have an empty settings.json  ``` {     //-------- Editor configuration --------      // Controls the font family.     ""editor.fontFamily"": ""Menlo, Monaco, 'Courier New', monospace"",      // Controls the font size.     ""editor.fontSize"": 12,      // Controls the line height.     ""editor.lineHeight"": 0,      // Controls visibility of line numbers     ""editor.lineNumbers"": true,      // Controls visibility of the glyph margin     ""editor.glyphMargin"": false,      // Columns at which to show vertical rulers     ""editor.rulers"": [],      // Characters that will be used as word separators when doing word related navigations or operations     ""editor.wordSeparators"": ""`~!@#$%^&*()-=+[{]}\\|;:'\"",.<>/?"",      // The number of spaces a tab is equal to.     ""editor.tabSize"": 4,      // Insert spaces when pressing Tab.     ""editor.insertSpaces"": true,      // When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.     ""editor.detectIndentation"": true,      // Controls if selections have rounded corners     ""editor.roundedSelection"": true,      // Controls if the editor will scroll beyond the last line     ""editor.scrollBeyondLastLine"": true,      // Controls after how many characters the editor will wrap to the next line. Setting this to 0 turns on viewport width wrapping (word wrapping). Setting this to -1 forces the editor to never wrap.     ""editor.wrappingColumn"": 300,      // Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.     ""editor.wrappingIndent"": ""same"",      // A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events     ""editor.mouseWheelScrollSensitivity"": 1,      // Controls if quick suggestions should show up or not while typing     ""editor.quickSuggestions"": true,      // Controls the delay in ms after which quick suggestions will show up     ""editor.quickSuggestionsDelay"": 10,      // Controls if the editor should automatically close brackets after opening them     ""editor.autoClosingBrackets"": true,      // Controls if the editor should automatically format the line after typing     ""editor.formatOnType"": false,      // Controls if suggestions should automatically show up when typing trigger characters     ""editor.suggestOnTriggerCharacters"": true,      // Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.     ""editor.acceptSuggestionOnEnter"": true,      // Controls whether the editor should highlight similar matches to the selection     ""editor.selectionHighlight"": true,      // Controls the number of decorations that can show up at the same position in the overview ruler     ""editor.overviewRulerLanes"": 3,      // Controls the cursor blinking animation, accepted values are 'blink', 'visible', and 'hidden'     ""editor.cursorBlinking"": ""blink"",      // Controls the cursor style, accepted values are 'block' and 'line'     ""editor.cursorStyle"": ""line"",      // Enables font ligatures     ""editor.fontLigatures"": false,      // Controls if the cursor should be hidden in the overview ruler.     ""editor.hideCursorInOverviewRuler"": false,      // Controls whether the editor should render whitespace characters     ""editor.renderWhitespace"": false,      // Controls if the editor shows reference information for the modes that support it     ""editor.referenceInfos"": true,      // Controls whether the editor has code folding enabled     ""editor.folding"": true,      // Inserting and deleting whitespace follows tab stops     ""editor.useTabStops"": true,      // Remove trailing auto inserted whitespace     ""editor.trimAutoWhitespace"": true,      // Keep peek editors open even when double clicking their content or when hitting Escape.     ""editor.stablePeek"": false,      // Controls if the diff editor shows the diff side by side or inline     ""diffEditor.renderSideBySide"": true,      // Controls if the diff editor shows changes in leading or trailing whitespace as diffs     ""diffEditor.ignoreTrimWhitespace"": true,       //-------- Window configuration --------      // When enabled, will open files in a new window instead of reusing an existing instance.     ""window.openFilesInNewWindow"": true,      // Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.     ""window.reopenFolders"": ""one"",      // Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.     ""window.zoomLevel"": 0,       //-------- Files configuration --------      // Configure glob patterns for excluding files and folders.     ""files.exclude"": {         ""**/.git"": true,         ""**/.svn"": true,         ""**/.DS_Store"": true     },      // Configure file associations to languages (e.g. ""*.extension"": ""html""). These have precedence over the default associations of the languages installed.     ""files.associations"": {},      // The default character set encoding to use when reading and writing files.     ""files.encoding"": ""utf8"",      // The default end of line character.     ""files.eol"": ""\n"",      // When enabled, will trim trailing whitespace when you save a file.     ""files.trimTrailingWhitespace"": false,      // Controls auto save of dirty files. Accepted values:  ""off"", ""afterDelay"", ""onFocusChange"". If set to ""afterDelay"" you can configure the delay in ""files.autoSaveDelay"".     ""files.autoSave"": ""off"",      // Controls the delay in ms after which a dirty file is saved automatically. Only applies when ""files.autoSave"" is set to ""afterDelay""     ""files.autoSaveDelay"": 1000,      // Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.     ""files.watcherExclude"": {         ""**/.git/objects/**"": true,         ""**/node_modules/**"": true     },       //-------- Emmet configuration --------      // When enabled, emmet abbreviations are expanded when pressing TAB.     ""emmet.triggerExpansionOnTab"": true,       //-------- File Explorer configuration --------      // Maximum number of working files to show before scrollbars appear.     ""explorer.workingFiles.maxVisible"": 9,      // Controls if the height of the working files section should adapt dynamically to the number of elements or not.     ""explorer.workingFiles.dynamicHeight"": true,      // Controls if the explorer should automatically reveal files when opening them.     ""explorer.autoReveal"": true,       //-------- HTTP configuration --------      // The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables     ""http.proxy"": """",      // Whether the proxy server certificate should be verified against the list of supplied CAs.     ""http.proxyStrictSSL"": true,       //-------- Search configuration --------      // Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.     ""search.exclude"": {         ""**/node_modules"": true,         ""**/bower_components"": true     },       //-------- Update configuration --------      // Configure the update channel to receive updates from. Requires a restart after change.     ""update.channel"": ""default"",       //-------- Git configuration --------      // Is git enabled     ""git.enabled"": true,      // Path to the git executable     ""git.path"": null,      // Whether auto fetching is enabled.     ""git.autofetch"": true,       //-------- Telemetry configuration --------      // Enable usage data and errors to be sent to Microsoft.     ""telemetry.enableTelemetry"": true,       //-------- Markdown preview configuration --------      // A list of URLs or local paths to CSS style sheets to use from the markdown preview.     ""markdown.styles"": [],       //-------- CSS configuration --------      // Controls CSS validation and problem severities.      // Enables or disables all validations     ""css.validate"": true,      // When using a vendor-specific prefix make sure to also include all other vendor-specific properties     ""css.lint.compatibleVendorPrefixes"": ""ignore"",      // When using a vendor-specific prefix also include the standard property     ""css.lint.vendorPrefix"": ""warning"",      // Do not use duplicate style definitions     ""css.lint.duplicateProperties"": ""ignore"",      // Do not use empty rulesets     ""css.lint.emptyRules"": ""warning"",      // Import statements do not load in parallel     ""css.lint.importStatement"": ""ignore"",      // Do not use width or height when using padding or border     ""css.lint.boxModel"": ""ignore"",      // The universal selector (*) is known to be slow     ""css.lint.universalSelector"": ""ignore"",      // No unit for zero needed     ""css.lint.zeroUnits"": ""ignore"",      // @font-face rule must define 'src' and 'font-family' properties     ""css.lint.fontFaceProperties"": ""warning"",      // Hex colors must consist of three or six hex numbers     ""css.lint.hexColorLength"": ""error"",      // Invalid number of parameters     ""css.lint.argumentsInColorFunction"": ""error"",      // Unknown property.     ""css.lint.unknownProperties"": ""warning"",      // IE hacks are only necessary when supporting IE7 and older     ""css.lint.ieHack"": ""ignore"",      // Unknown vendor specific property.     ""css.lint.unknownVendorSpecificProperties"": ""ignore"",      // Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect     ""css.lint.propertyIgnoredDueToDisplay"": ""warning"",      // Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.     ""css.lint.important"": ""ignore"",      // Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.     ""css.lint.float"": ""ignore"",      // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.     ""css.lint.idSelector"": ""ignore"",       //-------- Telemetry configuration --------      // Enable crash reports to be sent to Microsoft.     // This option requires restart to take effect.     ""telemetry.enableCrashReporter"": true,       //-------- HTML configuration --------      // Maximum amount of characters per line (0 = disable).     ""html.format.wrapLineLength"": 120,      // List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.     ""html.format.unformatted"": ""a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, script, select, small, span, strong, sub, sup, textarea, tt, var"",      // Indent <head> and <body> sections.     ""html.format.indentInnerHtml"": false,      // Whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.     ""html.format.preserveNewLines"": true,      // Maximum number of line breaks to be preserved in one chunk. Use 'null' for unlimited.     ""html.format.maxPreserveNewLines"": null,      // Format and indent {{#foo}} and {{/foo}}.     ""html.format.indentHandlebars"": false,      // End with a newline.     ""html.format.endWithNewline"": false,      // List of tags, comma separated, that should have an extra newline before them. 'null' defaults to ""head, body, /html"".     ""html.format.extraLiners"": ""head, body, /html"",       //-------- JSON configuration --------      // Associate schemas to JSON files in the current project     ""json.schemas"": [],       //-------- LESS configuration --------      // Controls LESS validation and problem severities.      // Enables or disables all validations     ""less.validate"": true,      // When using a vendor-specific prefix make sure to also include all other vendor-specific properties     ""less.lint.compatibleVendorPrefixes"": ""ignore"",      // When using a vendor-specific prefix also include the standard property     ""less.lint.vendorPrefix"": ""warning"",      // Do not use duplicate style definitions     ""less.lint.duplicateProperties"": ""ignore"",      // Do not use empty rulesets     ""less.lint.emptyRules"": ""warning"",      // Import statements do not load in parallel     ""less.lint.importStatement"": ""ignore"",      // Do not use width or height when using padding or border     ""less.lint.boxModel"": ""ignore"",      // The universal selector (*) is known to be slow     ""less.lint.universalSelector"": ""ignore"",      // No unit for zero needed     ""less.lint.zeroUnits"": ""ignore"",      // @font-face rule must define 'src' and 'font-family' properties     ""less.lint.fontFaceProperties"": ""warning"",      // Hex colors must consist of three or six hex numbers     ""less.lint.hexColorLength"": ""error"",      // Invalid number of parameters     ""less.lint.argumentsInColorFunction"": ""error"",      // Unknown property.     ""less.lint.unknownProperties"": ""warning"",      // IE hacks are only necessary when supporting IE7 and older     ""less.lint.ieHack"": ""ignore"",      // Unknown vendor specific property.     ""less.lint.unknownVendorSpecificProperties"": ""ignore"",      // Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect     ""less.lint.propertyIgnoredDueToDisplay"": ""warning"",      // Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.     ""less.lint.important"": ""ignore"",      // Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.     ""less.lint.float"": ""ignore"",      // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.     ""less.lint.idSelector"": ""ignore"",       //-------- Sass configuration --------      // Controls Sass validation and problem severities.      // Enables or disables all validations     ""sass.validate"": true,      // When using a vendor-specific prefix make sure to also include all other vendor-specific properties     ""sass.lint.compatibleVendorPrefixes"": ""ignore"",      // When using a vendor-specific prefix also include the standard property     ""sass.lint.vendorPrefix"": ""warning"",      // Do not use duplicate style definitions     ""sass.lint.duplicateProperties"": ""ignore"",      // Do not use empty rulesets     ""sass.lint.emptyRules"": ""warning"",      // Import statements do not load in parallel     ""sass.lint.importStatement"": ""ignore"",      // Do not use width or height when using padding or border     ""sass.lint.boxModel"": ""ignore"",      // The universal selector (*) is known to be slow     ""sass.lint.universalSelector"": ""ignore"",      // No unit for zero needed     ""sass.lint.zeroUnits"": ""ignore"",      // @font-face rule must define 'src' and 'font-family' properties     ""sass.lint.fontFaceProperties"": ""warning"",      // Hex colors must consist of three or six hex numbers     ""sass.lint.hexColorLength"": ""error"",      // Invalid number of parameters     ""sass.lint.argumentsInColorFunction"": ""error"",      // Unknown property.     ""sass.lint.unknownProperties"": ""warning"",      // IE hacks are only necessary when supporting IE7 and older     ""sass.lint.ieHack"": ""ignore"",      // Unknown vendor specific property.     ""sass.lint.unknownVendorSpecificProperties"": ""ignore"",      // Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect     ""sass.lint.propertyIgnoredDueToDisplay"": ""warning"",      // Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.     ""sass.lint.important"": ""ignore"",      // Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.     ""sass.lint.float"": ""ignore"",      // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.     ""sass.lint.idSelector"": ""ignore"",       //-------- Integrated terminal configuration --------      // The path of the shell that the terminal uses on Linux.     ""terminal.integrated.shell.linux"": ""/bin/bash"",      // The path of the shell that the terminal uses on OS X.     ""terminal.integrated.shell.osx"": ""/bin/bash"",      // The path of the shell that the terminal uses on Windows.     ""terminal.integrated.shell.windows"": ""cmd.exe"",      // The font family used by the terminal (CSS font-family format).     ""terminal.integrated.fontFamily"": ""Menlo, Monaco, Consolas, \""Droid Sans Mono\"", \""Courier New\"", monospace, \""Droid Sans Fallback\"""",       //-------- External terminal configuration --------      // Customizes which terminal to run on Windows.     ""terminal.external.windowsExec"": ""cmd"",      // Customizes which terminal to run on Linux.     ""terminal.external.linuxExec"": ""xterm"",       //-------- Open in Github extension configuration --------      // GitHub server address. Modify this setting in your workspace settings of projects using custom GitHub server     ""openInGitHub.gitHubAddress"": ""https://github.com"",       //-------- Git History configuration --------      // Informations to display in history as label     ""gitHistory.displayLabel"": ""${name} <${email}> on ${date}"",      // Informations to display in history as description     ""gitHistory.displayDescription"": ""${message}"",       //-------- amVim configuration --------      // Bind `ctrl+c` as the same behaviour in Vim.     ""amVim.bindCtrlC"": false,       //-------- TypeScript configuration --------      // Specifies the folder path containing the tsserver and lib*.d.ts files to use.     ""typescript.tsdk"": null,      // Complete functions with their parameter signature.     ""typescript.useCodeSnippetsOnMethodSuggest"": false,      // Enable / disable TypeScript validation     ""typescript.validate.enable"": true,      // Enables tracing of messages send to the TS server     ""typescript.tsserver.trace"": ""off"",      // Defines space handling after a comma delimiter     ""typescript.format.insertSpaceAfterCommaDelimiter"": true,      //  Defines space handling after a semicolon in a for statement     ""typescript.format.insertSpaceAfterSemicolonInForStatements"": true,      // Defines space handling after a binary operator     ""typescript.format.insertSpaceBeforeAndAfterBinaryOperators"": true,      // Defines space handling after keywords in control flow statement     ""typescript.format.insertSpaceAfterKeywordsInControlFlowStatements"": true,      // Defines space handling after function keyword for anonymous functions     ""typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions"": true,      // Defines space handling after opening and before closing non empty parenthesis     ""typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"": false,      // Defines space handling after opening and before closing non empty brackets     ""typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"": false,      // Defines whether an open brace is put onto a new line for functions or not     ""typescript.format.placeOpenBraceOnNewLineForFunctions"": false,      // Defines whether an open brace is put onto a new line for control blocks or not     ""typescript.format.placeOpenBraceOnNewLineForControlBlocks"": false,      // Enable / disable JavaScript validation     ""javascript.validate.enable"": true,      // Defines space handling after a comma delimiter     ""javascript.format.insertSpaceAfterCommaDelimiter"": true,      //  Defines space handling after a semicolon in a for statement     ""javascript.format.insertSpaceAfterSemicolonInForStatements"": true,      // Defines space handling after a binary operator     ""javascript.format.insertSpaceBeforeAndAfterBinaryOperators"": true,      // Defines space handling after keywords in control flow statement     ""javascript.format.insertSpaceAfterKeywordsInControlFlowStatements"": true,      // Defines space handling after function keyword for anonymous functions     ""javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions"": true,      // Defines space handling after opening and before closing non empty parenthesis     ""javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"": false,      // Defines space handling after opening and before closing non empty brackets     ""javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"": false,      // Defines whether an open brace is put onto a new line for functions or not     ""javascript.format.placeOpenBraceOnNewLineForFunctions"": false,      // Defines whether an open brace is put onto a new line for control blocks or not     ""javascript.format.placeOpenBraceOnNewLineForControlBlocks"": false,       //-------- PHP Configuration options --------      // Whether php validation is enabled or not.     ""php.validate.enable"": true,      // Points to the php executable.     ""php.validate.executablePath"": null,      // Whether the linter is run on save or on type.     ""php.validate.run"": ""onSave"",      // Enable word based suggestions.     ""editor.wordBasedSuggestions"": true  } ```"
25000|yes.. windows 10. Funny this doesn't occur on my mac which i created this zip on for you. I retested on windows machine again and it is still a issue.  [vscode-test.zip](https://github.com/Microsoft/vscode/files/305063/vscode-test.zip)
