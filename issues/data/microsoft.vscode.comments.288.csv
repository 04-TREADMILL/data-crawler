28701|"And on my Linux VM which doesn't show the problem I also see:  ``` cat  /usr/share/code-insiders/resources/app/extensions/json/node_modules/vscode-languageclient/package.json | grep version   ""version"": ""2.3.0""  cat  /usr/share/code-insiders/resources/app/extensions/json/node_modules/vscode-jsonrpc/package.json | grep version   ""version"": ""2.2.0"" ```  So I have no idea what the difference is."
28702|The version I run under Linux is:  ``` Version 1.3.0-insider Commit a21c12346f388e51858c930875ca30968604c116 Date 2016-06-30T05:01:41.590Z Shell 0.37.6 Renderer 49.0.2623.75 Node 5.10.0 ```
28703|Upstream issue: https://github.com/chjj/pty.js/issues/137, going to remove the config for the time being.
28704|Thank you, also there is another reference to `vs/editor/node/model/modelBuilder` in `vs/workbench/parts/files/browser/textFileServices`.
28705|@ezwiebel can you provide me with the full command line of the process that starts eating up the memory and CPU. This will help to track this down. And is your project public. Then I could clone it and have a look.
28706|By analyzing the blame information on this pull request, we identified @bpasero and @isidorn to be potential reviewers
28707|That would indicate that the module is not in your `node_modules` folder. I just deleted my `node_modules` folder and ran `./scripts/npm.sh install`. It's installing it fine. The only recommendation I have is to rerun `./scripts/npm.sh install` on your machine.
28708|This is in the Dark+ theme. In the Dark theme we only color the character used as bullet.
28709|"@Tyriar yes the plus icon was off a little in size and in weight.  It was 4px weight when it should have been 3px.  Someone gave me the wrong asset, but I just pushed a fix.  <img width=""279"" alt=""screen shot 2016-06-30 at 12 17 49 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/16501211/2d945ef6-3ebd-11e6-8ccd-ece771470d4d.png""> <img width=""284"" alt=""screen shot 2016-06-30 at 12 17 24 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/16501212/2da72da6-3ebd-11e6-9538-ba072cad4cc2.png"">"
28710|@bpasero Can you pls clarify: What do you mean by global command?
28711|@Tyriar I'll assign this back to you to verify; feel free to merge in when ready.
28712|See #7725.
28713|@mrmlnc a question about the implementation of the encode/decode support. Usually an emmet feature  forwards to the corresponding emmet action. Why isn't this the case for encode/decode and there is quite some code in the action? My concern is that this code will need to be adapted when emmet evolves.
28714|@mrmlnc thanks, please notice that I've remove the fileAccessor module in the latest. Since this code is only needed by base64.js I've moved the helper there. Can you pls review and adjust this PR.  I also wonder whether we should use the IFileService.
28715|@egamma, problems: 1. Emmet uses the synchronous API for `save` and does not know how to save files in the directory (`save` in `fileAccessor.ts`) https://github.com/Microsoft/vscode/commit/2e0f883bb0ae15c1172b3092791059ab3d96e41f#commitcomment-18085303 2. Emmet throws errors when working with paths that don't exist.  If it's a question of time, let's remove (temporarily: July 2016) support for Encode\Decode action. Other editors also implement the API for working with the file system.
28716|"@dbaeumer  - /app is just one of the nested apps in the repo. it could be server in the file tree I posted above. I need to cwd into it because vscode cannot find `package.json` in the root. - I run my npm tasks on each nested app folder.  I get the tasks running correctly now with the following configuration  ``` js {     // See https://go.microsoft.com/fwlink/?LinkId=733558     // for the documentation about the tasks.json format     ""version"": ""0.1.0"",     ""command"": ""npm"",     ""isShellCommand"": true,     ""showOutput"": ""always"",     ""suppressTaskName"": true,     ""options"": {       // to be able to find the package.json       ""cwd"": ""${cwd}/app/""     },     ""tasks"": [         {             ""taskName"": ""install"",             ""args"": [""install""]         },         {             ""taskName"": ""build"",             ""isBuildCommand"": true,             ""problemMatcher"": {                 ""base"": ""$tsc"",                 ""fileLocation"": [""relative"", ""${cwd}/app/""]             },             ""args"": [""run"", ""build""]         },         {           ""taskName"": ""lint"",           ""problemMatcher"": {               ""owner"": ""tslint"",               ""fileLocation"": [""relative"", ""${cwd}/app/""],               ""severity"": ""warning"",               ""pattern"": {                 ""regexp"": ""^(.*?)\\[(\\d+),\\s(\\d+)\\]:\\s(.*)$"",                 ""file"": 1,                 ""line"": 2,                 ""column"": 3,                 ""message"": 4               }           },           ""args"": [             ""run"", ""lint""           ]         },         {             ""taskName"": ""test"",             ""isTestCommand"": true,             ""args"": [""run"", ""test""]         }     ] } ```  But I still cannot run linters on the files while editing them. I keep getting these errors because binaries are not found.  ![screen shot 2016-06-30 at 12 47 12](https://cloud.githubusercontent.com/assets/30582/16501927/cf5447ee-3ec0-11e6-9867-66068889b10b.PNG)  As I said, this is the result of nested folder structure and I need a way to tell vscode where to look for these binaries."
28717|@egamma, tomorrow (before lunch in Moscow 13:00 GMT+3) i can provide the code with comments (on good English language) that describe the what, where and why.
28718|@bpasero What about ctrl + db click (for selection) + c/v
28719|On `color-mod`, I was just discussing this with @bgashler1. We could mod the color in JavaScript and use additional variables to get around this:  ``` ts cssRules.push(`:root { --monaco-editor-background: ${background}; }`); cssRules.push(`:root { --monaco-editor-background-light: ${lighten(background, 20%)}; }`); cssRules.push(`:root { --monaco-editor-background-dark: ${darken(background, 20%)}; }`);  function lighten(hex, percent) {...} function darken(hex, percent) {...} ```  This would save relying on CSS 4.
28720|"@dbaeumer see `// line 18` comment:  ``` ts /* --------------------------------------------------------------------------------------------  * Copyright (c) Microsoft Corporation. All rights reserved.  * Licensed under the MIT License. See License.txt in the project root for license information.  * ------------------------------------------------------------------------------------------ */ 'use strict'; var is = require('./is'); var messages_1 = require('./messages'); exports.ResponseError = messages_1.ResponseError; exports.ErrorCodes = messages_1.ErrorCodes; var messageReader_1 = require('./messageReader'); exports.StreamMessageReader = messageReader_1.StreamMessageReader; exports.IPCMessageReader = messageReader_1.IPCMessageReader; var messageWriter_1 = require('./messageWriter'); exports.StreamMessageWriter = messageWriter_1.StreamMessageWriter; exports.IPCMessageWriter = messageWriter_1.IPCMessageWriter; var events_1 = require('./events'); exports.Event = events_1.Event; exports.Emitter = events_1.Emitter; // line 18 var cancellation_1 = require('./cancellation'); exports.CancellationTokenSource = cancellation_1.CancellationTokenSource; exports.CancellationToken = cancellation_1.CancellationToken; var CancelNotification; (function (CancelNotification) {     CancelNotification.type = { get method() { return '$/cancelRequest'; } }; })(CancelNotification || (CancelNotification = {})); (function (Trace) {     Trace[Trace[""Off""] = 0] = ""Off"";     Trace[Trace[""Messages""] = 1] = ""Messages"";     Trace[Trace[""Verbose""] = 2] = ""Verbose""; ... ```"
28721|It's kind of random, in some cases it works and in some it doesn't  but its really easy to reproduce it
28722|@bpasero I found more instances. Do you want me to add them here or you will review them all when you get time for working on it?
28723|@alexandrudima   > That being said, you could try to workaround it. From your example about macros, why not make all the edits caused by a macro in a single textEditor.edit call...  If I understand right, that's not possible, because a macro could insert and delete in overlapping regions, which is something the TextEditorEdit doesn't support.
28724|By the way, I have a Surface Pro 4 and have set the UI scaling of Ubuntu to 1.75 to accommodate the high DPI of the screen. I have checked, setting the UI scaling back 1.0 still produces the same rendering problem. Is possible that it could have anything to do with that?
28725|This should be fixed in v1.3.0, you can verify on the Insiders build.
28726|Upstream issue https://github.com/sourcelair/xterm.js/issues/124
28727|Behavior is different now, the lines are chopped off and not restored when resizing back https://github.com/Microsoft/vscode/issues/8336
28728|This no longer happens. Here are some selection-related upstream issues: - https://github.com/sourcelair/xterm.js/issues/69 - https://github.com/sourcelair/xterm.js/issues/68
28729|Resolving as designed.
28730|Apparently there is no issue anymore.
28731|Done with multiple terminals dropdown
28732|This is fixed temporarily by my fork Tyriar/pty.js
28733|I believe this is no longer an issue, upstream resizing logic has been changed significantly since 1.1.0
28734|No longer an issue
28735|Upstream issue https://github.com/sourcelair/xterm.js/issues/69
28736|This will probably involve sending a particular key sequence to the xterm object.
28737|I improved the documentation in the user settings. You can use URLs like `file:///your file path` or `http://...`. I also made a couple changes to ensure we look workspace relative if there is an open workspace.
28738|In general, this issue can be expanded to evaluating any expression. I hadn't even thought of the repl in the debug console, but you can trigger expressions such as `a = 3`, and `a` won't update in the locals / watches that depend on `a` won't reevaluate. I'm not seeing a way for a debug adapter to work around this issue either, since afaik VS Code needs to send a variables request first in order to care about a variables response. VS Code needs to either handle stale expression reevaluation, or add something to the protocol where a debug adapter can notify VS Code that its variable state is stale.
28739|"Hello, I have a similar issue. I do have git installed and I overwrote the git.path setting to point to my program files directory, however once I did that I still get the issue. Side note, I am sure this may be the culprit, but my company recently installed security software to run unknown apps in sandbox mode and I know git & git-bash falls into this category. This is of course if they are executed directly from explorer.  **System info:** -  Windows 7 **64-bit** -  VSC Version **1.2.1** -  Git Version: **2.7.1.Windows.1** -  Git Path: _C:\Program Files\Git\cmd\git.exe_ -  Git Path (as shown in user settings - _override_):   ``` json {   ""git.path"": ""C:\\Program Files\\Git\\cmd\\git.exe"" } ```"
28740|As @cbreeden points your header is not a header according to the CommonMark spec. However GitHub allows it. So, we could add our own handler to support to support that. See https://github.com/markdown-it/markdown-it/issues/240.
28741|That doesn't seem to be the case anymore with the latest code base.
28742|Steps to reproduce: 1. open a markdown file whose preview is larger than the editor window 1. open markdown preview to the side 1. make a change in the markdown file
28743|See #8287.
28744|When installing an extension with the 'File -> Open -> .vsix file' workflow, there is no prompt for a restart, nor does the 'Enable' button appear in the Extensions viewlet. Please reopen this issue.
28745|![vsix](https://cloud.githubusercontent.com/assets/6598594/16507001/4255064c-3edb-11e6-824d-3d4d2ee99da4.gif)
28746|+1 2
28747|"## Problem  Trying to solve this color blindness issue for markdown header syntax (and possibly other places where this color value is used).  This is a simulation I created using color tools in Illustrator of Protanopia (color blindness where you can't see red) ![untitled picture](https://cloud.githubusercontent.com/assets/11839736/16508722/d7b852f2-3eea-11e6-8520-e2d24d47120c.png)  Notice the red headers look almost exactly the same as the black text.  This is only an issue in the light theme, not the dark theme, because we a nice blue in the dark theme which works with the two most common forms of color-blindness.  I like how Quiet Light theme solves this.  ![untitled picture](https://cloud.githubusercontent.com/assets/11839736/16508728/ef9ba6c6-3eea-11e6-8009-b11d4ba799c3.png)  They bold their text, and it's a different shade of red.  It also helps you understand the hierarchy while you write it and the monospaced nature of the font is not compromised, so no alignment issues.  However, I don't want to change our color if possible, because it's used in hundreds of places in our code and is consistent with Visual Studio IDE.  So what if we just bolded our current color like Quiet Light?  ![untitled picture](https://cloud.githubusercontent.com/assets/11839736/16508739/0123f33a-3eeb-11e6-8b44-77ba4f2b7eb0.png)  While it fixes it in the plain text, as you can see a header is not rendered bold in our preview of markdown.  So, bolding isn't actually literally how it will be styled, and this could be confusing potentially.  Also, we don't use bold in the dark theme, so we would need to apply it there as well.  Would changing the shade of the color, though, make a difference?  <img width=""725"" alt=""screen shot 2016-06-30 at 5 49 55 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/16508751/19290434-3eeb-11e6-9e15-461bd16fbddc.png"">  Obviously, you can see that there is numerically more color present in all color channels (meaning more brightness to contrast against text).  But actually all colors are not showing up well in red color blindness.  Notice how even Quiet Light doesn't have enough contrast in their red when I take the boldness off of it on the headers. <img width=""462"" alt=""screen shot 2016-06-30 at 5 55 08 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/16508834/d24a333e-3eeb-11e6-895f-2c3a48678a9b.png"">  ## Possible solutions 1. Make bold (like Quiet Light theme), and do that as well in dark theme for consistency. 2. Make markdown headers very similar to the color as **bold** markdown token (which is like what we already do in the dark theme).    - This would leave other usage of this color unaddressed, but the only one reported so far that I know of is with markdown.  So it would buy us some time to reevaluate all our colors. 3. Change all instances of this color  Difficult to do, and we should carefully test it in all situations.  We can't simply make the red more bright, because for example in HTML, this color is used to mark tags and another lighter shade of red is used to mark attributes (which sit right next to tags).  ## My proposal  Go with option 2 for now, which will fix the markdown and also be more consistent with the dark theme.   We can put this as part of our UI/UX holistic work on colors which Steven and I will be working on (moving to July so this can be part of that)."
28748|"This is what that option looks like...  **(simulating red-color-blindness)** <img width=""368"" alt=""screen shot 2016-06-30 at 6 06 04 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/16508991/5a309c88-3eed-11e6-8e4d-e8bb9170f9c2.png"">  **(regular)** <img width=""429"" alt=""screen shot 2016-06-30 at 6 08 45 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/16509022/bc7f4574-3eed-11e6-985d-7c9f438e5115.png"">  Pretty similar, huh?  I'm using `rgb(36, 36, 181)`, but we can of course discuss that."
28749|Thanks @dbaeumer for your quick answer! Unfortunately the project is not public but I set up [another project that reproduces the problem](https://github.com/ezwiebel/VSCode_issue)  All instructions to reproduce are in the [README.md](https://github.com/ezwiebel/VSCode_issue#README.md)  Here is the full command line of the problematic process:   ``` /usr/share/code/code /usr/share/code/resources/app/extensions/typescript/out/utils/electronForkStart /usr/share/code/resources/app/extensions/typescript/server/typescript/lib/tsserver.js ```  Looks like it comes from a typescript extension...
28750|That is a regression introduced by https://github.com/Microsoft/vscode/commit/0a386aea9cd22a246cf3b6a23a378cd7ae9c2d3a.
28751|@Tyriar Just a naive question, why not [Less.js](https://www.npmjs.com/package/less)? :D
28752|I'm not yet sure what happens. But when I add a`\n` or `;` in front of the last '}' the tokenization is correct.  It seems the minimal case causing the wrong tokenization is:  ![screen shot 2016-06-30 at 7 16 20 pm](https://cloud.githubusercontent.com/assets/4674940/16509991/2ce27328-3ef7-11e6-8e54-b731c307efd0.png)
28753|Yes, it is very internal from Chromium framework.
28754|@kieferrm in the F1 command palette
28755|Uh double click is tricky and I see the issue. Is it as annoying as this issue was?
28756|Yes, that was my idea as well.
28757|@malekpour that would be great. It is too bad we do not have a linter to give us a warning for this. I am sure we have many more cases throughout our code.  May I ask where and how you use the workbench standalone?
28758|@Tyriar what about introducing CSS variables for all of this [here](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/themes/electron-browser/themeService.ts#L357)?  We would still need a shim for standalone editor though...
28759|@MugeshBTech are you using an extension? Are you launching a server on F5? I am having issues understanding in what area of Code there is a bug.
28760|@dryganets what is your git version?
28761|@lecode-official does this help? https://code.visualstudio.com/Docs/supporting/faq#_vs-code-main-window-is-blank
28762|@kieferrm those actions are now in the context menu of a tab and we have a UX item to improve discoverability of those actions.
28763|Thanks for finding this 👍
28764|@Serjster are you on the insider channel or stable?
28765|@karabaja4 what is your node version?
28766|@egamma that's a pitty....  Yes, I tried using JS Doc comments and it works, but now I have to write a lot of types manually in my comments and maintain them.  There is no play to get back the support?  Thank you.
28767|Since @aeschli is out, pls someone jump in. Also, we might need to run the OSS tool after this again 👻
28768|Yeah - it's an issue with the web view that it doesn't inherit the `zoomLevel`. Closing this duplicate of #5745
28769|It now depends on us updating Electron. @bpasero is that on the plan for July?
28770|Reopening issue - this flow is not the main scenario how users would use the viewlet -> removing important, july
28771|I can do it instead of @aeschli
28772|The idea with variable path substition is that they always substitue for an absolute path.  If you need a relative path just do not use those variables, and istead put 'test/integration/my_test.rb' as args.
28773|@bpasero introducing Sass would be about more than just using variables, it would be best to use both pre-processor variables (for non-theming uses) and CSS variables (for themes) (#8151)  @eyalsk personal preference (syntax is nicer), popularity (community and commits), libsass is very mature so no longer needs ruby.
28774|@jrieken yes 👍
28775|I updated the description with this important step: - Copy the npm-shrinkwrap.json file into same location as the package.json file in the extension
28776|I can see it works as intended now. Thanks!
28777|@bpasero i didn't test it a lot for now. But as i know its  probably not as annoying as the other one !  From what i have seen its working very good at the moment.
28778|Updating node modules helped.
28779|@Tyriar gotcha.
28780|Adding @joaomoreno since such an information is best presented in the Extension UI.   I am up for a more general solution. TS currently shows the TS version is uses in the status bar iff it is different than the preshipped one (the tsdk setting is used). If every extension does that we have a very populated status bar :-)
28781|"Yes, it does come from the tsserver. Before you spent the time creating another project that reproduces the problem (which I highly appreciate) lets do the following:  In VS Code enable the tsserver trace setting by adding the following to the settings.json: `""typescript.tsserver.trace"": ""messages""`. Then start VS Code open a TS/JS/JSX file open the Output view and switch to the TypeScript channel. Could you provide the trace here. That might help to understand what is happening."
28782|OK good, I am not sure how to fix the double click thing...
28783|@mrmlnc we are finishing the June update today, so I will remove the encode/decode action for June, then we have enough time to clean things up in July. This also means no stress for you with the update.
28784|With vscode-textmate@2.0.1 on the first 10k lines of sqllite3.c  BEFORE: ![image](https://cloud.githubusercontent.com/assets/5047891/16515250/3178550e-3f71-11e6-9b85-3c11a7c58963.png)  AFTER: ![image](https://cloud.githubusercontent.com/assets/5047891/16515263/487b5f3a-3f71-11e6-9a35-4e75635ef303.png)  [AFTER-Heap-20160701T094643.zip](https://github.com/Microsoft/vscode/files/343038/AFTER-Heap-20160701T094643.zip) [BEFORE-Heap-20160701T094538.zip](https://github.com/Microsoft/vscode/files/343039/BEFORE-Heap-20160701T094538.zip)
28785|@mrmlnc   > Emmet uses the synchronous API for save and does not know how to save files in the directory   This fully explains the problem, thank you. Then we should revisit how to implement this emmet action. The current implementation also has the exception issue #8324.
28786|@bpasero makes sense. It was result of clean up while fixing.  In this case, replace preview should not open but we can still show replace specific actions on the entries.
28787|@egamma,  LGTM. I think this is the right thing to do. Please don't forget to remove this condition:  https://github.com/Microsoft/vscode/blob/2e0f883bb0ae15c1172b3092791059ab3d96e41f/src/vs/workbench/parts/emmet/node/emmetActions.ts#L46  ``` ts if (Object.keys(syntaxProfile).length !== 0) { // <------------------------     _emmet.profile.reset();     _emmet.loadProfiles(syntaxProfile); } ```  Description: https://github.com/Microsoft/vscode/pull/8542#issue-163042454
28788|@egamma soon I will prepare PR with a detailed explanation and comments.
28789|@ihaving can you provide more details?
28790|Ok setting for June then.
28791|Please not for June 👍
28792|not reproducable
28793|Thank you so much, that solved my problem.
28794|This is even worse when you have the following (our smoke test):  ![image](https://cloud.githubusercontent.com/assets/900690/16516954/375e559a-3f7b-11e6-8a46-dde895ca86cb.png)
28795|Most likely a duplicate of #7062, a lot is different now in 1.3.0
28796|In stable:  ![image](https://cloud.githubusercontent.com/assets/900690/16516976/5a003438-3f7b-11e6-983c-01c78aa3fe0f.png)
28797|@JostCrow so what happens? can you share a video or screen shots?
28798|@isidorn maybe you connect with @JostCrow to debug this?
28799|Same issue here with build-in Pinyin IM on OS X El Capitan.  it ok when Input a Chinese word,but can't Input continuously  continuously input ![fc8a6938-dec0-4e8c-ae1d-2e84f5489459](https://cloud.githubusercontent.com/assets/8351089/16517244/1a308f9a-3faf-11e6-8fab-599e45e91bc9.png)  single word ![qq20160701-0](https://cloud.githubusercontent.com/assets/8351089/16517303/4ff11618-3faf-11e6-8b3f-96f262aada50.png)
28800|@JostCrow thanks for the awesome screenshot! It seems like you have a broken extension installed. What happens if you delete all your extensions via the command line and install them again? You can do that using the following commands:  ``` code-insiders --list-extensions code-insiders --uninstall-extension ... code-insiders --install-extension ... ```  I can put some null guards in the code - but I do not think that is the solution since the code is based that either `this.local` or `this.gallery` are not `null`. In your case somehow both of them are and since the original author is on vacation this week I am a bit puzzled.
