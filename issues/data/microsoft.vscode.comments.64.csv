6301|Do you see this for any JS folder? If it is only on one folder can you share it so we try to reproduce this issue on our side?
6302|Can you please explain what does this command exactly do? I think this should be done as an extension to vscode.
6303|I think this is as designed, since changing all occurrences changes **all** occurrences. Try using **rename** instead.  Giving to @jrieken to comment more or close
6304|@chrisdias I already felt bad in taking 30px from the search input to add the matches count. Perhaps we can do it if we make the widget more wide?  ![image](https://cloud.githubusercontent.com/assets/5047891/12320325/4f5eb796-baa8-11e5-8d73-d81fa2b96a4a.png)  @bgashler1 @stevencl what do you think?
6305|It also include HTML and CSS. I can not upload the file as zip because GitHub tells me they don't support that file type.
6306|@SrTobi Yeah, the <kbd>Ctrl</kbd>+<kbd>D</kbd> respects the modifiers of the find widget. Match case makes sense, whole words makes sense, I wasn't sure what to do about the regex, so I left it to honor that as well.  I'm not sure how useful it is though... I personally never use it like that. Maybe I'll just take it out.
6307|@aaa132452 Can you outline the structure of the project or attach a screen shot showing the explorer? Also check with process explorer what child process of VS Code takes that much CPU
6308|This issue was moved to OmniSharp/omnisharp-roslyn#377
6309|Yes - that the point of the feature. It's basically a second UI for find & replace
6310|@jrieken Should we try to make the IntelliSense request pass in the scopes besides the position?
6311|@BleyChen The source is currently in transit and will move to the OmniSharp org. What you need to do is this: - find the extension folder for ./script/code in your _home_ dir, like `~/.code-oss-build-dev/extension` - add a sym link that points to the omnisharp extension (for now from your installation, soon from the github project)
6312|I think what can happen is that in some configurations the native browser selection occurs on double click. @massimocode To help us try to reproduce, can you please share any settings you have customized (e.g. font family, font size, etc.)
6313|That makes it related to #1172 which is about adding more contextual information to the provider. Two other options that I favour is either something like `TextDocument.scopesAtPosition/Offset` or the extend the document selector to know about scopes `{ language: 'javascript', scopes: 'comment.doc' }`. The latter might be easiest to implement since it's evaluated on the main side
6314|"@kalbun Does this happen when you type ""Ã¨"" or ""Ã¹"" in a new file or when you open a specific file. If this happens when you open a specific file, it might be that the file is using a different encoding. The status bar shows the current encoding the file is opened with and allows you to open it with a different encoding:  ![image](https://cloud.githubusercontent.com/assets/5047891/12321142/e50cde5e-baac-11e5-9422-2128b0fd0fec.png)"
6315|@tht13 I like the thought. Perhaps <kbd>Space</kbd> could extend the input into a chord. The reason is that <kbd>Ctrl</kbd>+<kbd>K</kbd> is just one possible chord start, a chord can start with any keybinding.  So the flow could be: - type key combination - press <kbd>Space</kbd> - now you can enter a second level key combination
6316|:+1: Cool request!
6317|@rhbecker I've just pushed a few days ago a match counter, but it doesn't show at this time X of Y, it just shows Y:  ![image](https://cloud.githubusercontent.com/assets/5047891/12321305/a3bf564c-baad-11e5-9893-3b6c12c6d941.png)
6318|@chrisdias @bgashler1 @stevencl Let's discuss this in #1476 , as that was there before
6319|"You can configure a global encoding in workspace settings or global settings (File | Preferences)."
6320|interestingly, it works on windows
6321|Anything in the console?
6322|@jrieken How do you think we should better handle this?  Should we expose `ILinkSupport` in the api and accumulate & dedup the links from all parties? Or should DefinitionProvider be expanded in scope to capture any link?
6323|ok, your right. for Case Matching and whole words it does make sense.  Hmmm... I think it is a little strange for regex, though. It is a little bit distracting to select a dot and the hole text gets highlighted...  On the other side it is some kind of feature.
6324|@alexandrudima it now works on OS X too, I've just verified with the latest. May be this is the issue that Isi had found with the hover?
6325|@othebe Can you help me with more specific steps so that I could reproduce. What is your OS? Do you open files individually, do you open a folder, what is the predominant languages you use, do you work with very large files, for how many hours do you leave it running before opening again, etc. Do you close the working file set from time to time (to free up memory -- to clean all the undo stacks?).   Also, what do you mean by laggy, do you have something specific in mind (like typing or scrolling) or rich language features (such as go to definition, squiggles, etc.).  Please share anything that could help us reproduce.
6326|You're correct. the `RenameInputField` is exactly an `IContentWidget` with `allowEditorOverflow` = `true`
6327|fyi thanks @isidorn !
6328|Unsure if this is you @bpasero
6329|That would be a logical way to enable this feature :+1:
6330|@jrieken I am not sure who introduced that though, might be very old and I do not think the intent was to duplicate markdown but just have some way to provide more rich formatting in some UI places. We can change it to markdown but we have to adopt it everywhere then.
6331|Why? to clean up memory leaks?
6332|@IgnacioHR Are the documents those links point to usually inside the workspace or something like a http-url that you want to be opened in a browser?
6333|ðŸ˜‡
6334|@jrieken looks like Jeff (https://monacotools.visualstudio.com/DefaultCollection/_git/Monaco/commit/b345e4742e33197d24c817abf804d52f2e451400#path=%2Fclient%2Fvs%2Fbase%2Fdom%2FhtmlContent.ts&_a=compare).
6335|"I wouldn't say it's just about leaks, but yes, memory consumption would be ""improved"" :)."
6336|wow, long time ago. I wonder if we should leave it like that and add way to feed in markdown and a markdown lib (marked, markit) or just allowing some sort of plain html we are sure of doesn't harm
6337|@SrTobi Thank you for your thoughts. Just pushed the change that the regex toggle is not taken into account in these cases :+1:
6338|might be unexpected for extensions that drive some process with state
6339|I removed the entire file in the meantime.
6340|@Risurz This is to be expected when using a non-monospace font, as we compute the wrapping cut points ourselves using an approximation for each character width.  However, I see that you are using a monospace font, I'm wondering what Windows version you're on and if you have made other changes to the font family in the settings. I'm also wondering if you can reproduce if you turn `renderWhitespace` to `false` ?  Thank you!
6341|@dstorey Seems good !
6342|@jrieken in what area would we allow markdown/html? is this for preview?
6343|I would consider putting the label x of y next to the next and previous arrows rather than next to the search options. For example (without and with a border around the x of y label below)  ![xofy](https://cloud.githubusercontent.com/assets/1704059/12322291/ffe2bd22-baaa-11e5-9d23-e09b51b95366.png)  Just to check though, what is the UX problem that we are trying to solve with this? Is it that without this, the user is unaware when they have reviewed all of the search results? Or is this solving another UX problem? That could help determine how important it is to show an x of y label.  How should search results be indexed? I think I would expect, if I wanted to be aware when I have reviewed all of the search results, that the result labeled 1 of y should be the first result found after the current insertion point, rather than the first item in the file.
6344|"@isidorn I do not see an issue here, you typed ""partsService"" which does not exist?"
6345|nah, it's for hovering over jsdoc comments that use markdown, like in our `vscode.d.ts` file
6346|@jrieken I see. I think it would be relatively straight forward to just pipe whatever is in the hover through our marked library which is already bundled with the markdown language (vs/src/vs/languages/markdown/common/marked.js). Maybe we keep it separate from our simple markup method so that we are not causing issues for existing clients.
6347|"@wmaurer You can escape the `{` and `}`:  ``` ""rxjs .do(x => console.log(`${JSON.stringify()}`))"": {     ""prefix"": ""rxdoj"",     ""body"": [         "".do(x => console.log(`$\\{JSON.stringify($1)\\}`))""     ],     ""description"": ""rxjs .do(x => console.log(`${JSON.stringify()}`))"" } ```"
6348|CC @weinand
6349|![codec](https://cloud.githubusercontent.com/assets/16668962/12340152/bf5384cc-bb21-11e5-9174-9d2e09ee19e2.png) @aeschli 2) not exactly the same problem
6350|"Hi @alexandrudima   My settings are as below: `{   ""editor.formatOnType"": true,   ""editor.insertSpaces"": true,   ""filePicker.alternateFileNameMatching"": true,   ""window.zoomLevel"": 1,   ""editor.tabSize"": 2 }`  I think the only setting I have that might be influencing this is the window.zoomLevel"
6351|@dstorey  > F12, which is also based on Monaco and uses TypeScript has a colour picker  F12 is using the Monaco editor when presenting source code. The DOM explorer from the Screenshot above is implemented in TypeScript but it is in a separate code base, which isn't OSS.
6352|"@stevencl Wow that looks so much better and makes a lot of sense to put them next to the prev/next buttons :+1:  How should the replace buttons be aligned then?: ![image](https://cloud.githubusercontent.com/assets/5047891/12322675/d6d6df0c-bab5-11e5-9778-ace0a5d29d76.png)  I personally would expect them to be always indexed from the top and then you'd start at ""5 of 14"" if that would be the next match. That is what Chrome's find does for example.  I am not sure what the underlying UX problem is, we have always been asked to show some numbers in there. Maybe @chrisdias and @ricmed205 can add more details."
6353|Please note that it is very difficult to replicate. It happens maybe 1 in every 20 times or something. So it will need some persistence!
6354|Suggest to add test sample for this test case to the vscode-samples project.
6355|@massimocode Indeed, the zooming (due to Chromium bugs?) might leave tiny 1px gaps in between lines. Then, double clicking in there could get the native browser selection occur. I'm wondering why do you prefer changing the `zoomLevel` over customizing the `editor.fontSize` and `editor.lineHeight`?
6356|we would have to handle the case when auto save is off, so that the user doesn't get prompted to save the file.
6357|This is most likely caused by us keeping the input textarea empty. I can only imagine that this external tool works by finding the current focused UI element and extracting the selected text from it. So it is more likely that the shortcuts do work, its just that the external tool finds no selected text and there is no visible output in the file.
6358|"@bgashler1 @aeschli   The selection color comes from the monokai theme: rgba(73, 72, 62, 0.5);  The ""selection matches"" color comes from our css:  ``` .monaco-editor.vs-dark .selectionHighlight {     background-color: rgba(173,214,255,.15); } ```  Should we dynamically compute the `.selectionHighlight` color starting off the theme selection color?"
6359|Starting at 5 of 14 would work too I think, that sounds good. I would continue to align the replace buttons next to the right edge of the replace text box. Fortuitously, this also means that the replace button sits underneath the index and the replace all button sits underneath the count :-). ![xofyreplace](https://cloud.githubusercontent.com/assets/1704059/12322981/c2915e60-baaf-11e5-938e-433ae91f142c.png)
6360|"Maybe we should have an option for ""dumbing down"" the indent/unindent actions. Our thinking was to optimize them for source code, where mostly I'd say ""leading whitespace aligned"" lines are highly desirable."
6361|I have just spent some time trying out the font size and line height settings and managed to find the correct ones to replicate the window.zoomLevel setting I had set. However, everything else (apart from the editor) is still small (i.e. the folder navigation pane on the left, the popup command window, the status bar, etc).  I guess if this is a Chromium bug then nothing much can be done and I'll continue using window.zoomLevel for now because squinting at small text is difficult!  I can confirm that it is only in certain pixels that this behaviour occurs so you are most likely correct.
6362|:+1:
6363|Stupid me
6364|![homer](http://i.giphy.com/4pMX5rJ4PYAEM.gif)
6365|You mean in the Debug Console? Nothing there.  I keep getting the error periodically while a node project is open, not when I run the node app. So that makes me thinks this is about the linter / intellisense / etc. background workers.
6366|I can not reproduce this with the latest vscode which has updates to the find widget
6367|I know the find widget is undergoing some reconstruction but @alexandrudima is better to comment on this
6368|I do not like the gray color for the ligth+ theme for method names. It makes it look **blury** compared to the nice black text that the rest of the document has. I would like a special color but something that looks sharp  Just my opinion as an every day light+ theme user
6369|"I meant the VS Code developer console (from Help menu | toggle developer tools)"
6370|Well then is there a way to change all occurrences within the scope only?
6371|@ajkerrigan PR welcome! :+1:  I don't have any big changes planned in the find widget anymore, perhaps only to address feedback in #1476 (to move the match count outside the find input), but that shouldn't prevent you from doing a PR :).  I would suggest the following: - add two new commands in `findController.ts` (similar to `CloseFindWidgetCommand`) - maybe you have ideas for default keybindings for them that don't collide with others, otherwise they would be fine even without any keybindings - use the new ids to lookup their keybindings for the labels when the widget is constructed in `findWidget.ts`   Looking forward to the PR! :+1:
6372|Ah! Well I find it much better now, thanks. I hope that it will stick.
6373|"""5 of 50"" just like Chrome is perfect -where the index starts at the top of the doc.  @stevencl :+1: UX "" Is it that without this, the user is unaware when they have reviewed all of the search results?"" <- This"
6374|Yes I can see the same error there. Anyway I can see the stack trace with unminified code?  ``` ENOENT: no such file or directory, lstat 'w:\cygdrive': Error: ENOENT: no such file or directory, lstat 'w:\cygdrive',    at Error (native) e.doShow @ workbench.main.js:63 e.show @ workbench.main.js:63 (anonymous function) @ workbench.main.js:63 e.show @ workbench.main.js:63 (anonymous function) @ workbench.main.js:62 t @ workbench.main.js:15 __dirname.undefined.t.Class.define.done @ workbench.main.js:6 p @ workbench.main.js:6 __dirname.undefined.F.enter @ workbench.main.js:6 __dirname.undefined.t.Class.define._run @ workbench.main.js:6 __dirname.undefined.t.Class.define._chainedError @ workbench.main.js:6 __dirname.undefined.D.enter.n @ workbench.main.js:6 p @ workbench.main.js:6 __dirname.undefined.F.enter @ workbench.main.js:6 __dirname.undefined.t.Class.define._run @ workbench.main.js:6 __dirname.undefined.t.Class.define._error @ workbench.main.js:6 (anonymous function) @ workbench.main.js:15 __dirname.undefined.t.Class.define.done @ workbench.main.js:6 p @ workbench.main.js:6 __dirname.undefined.F.enter @ workbench.main.js:6 __dirname.undefined.t.Class.define._run @ workbench.main.js:6 __dirname.undefined.t.Class.define._error @ workbench.main.js:6 (anonymous function) @ workbench.main.js:15 __dirname.undefined.t.Class.define.done @ workbench.main.js:6 p @ workbench.main.js:6 __dirname.undefined.F.enter @ workbench.main.js:6 __dirname.undefined.t.Class.define._run @ workbench.main.js:6 __dirname.undefined.t.Class.define._error @ workbench.main.js:6 __dirname.undefined.t.Class.derive.join.d @ workbench.main.js:6 __dirname.undefined.t.Class.derive.join.s.forEach.q.then.a.(anonymous function) @ workbench.main.js:6 h @ workbench.main.js:5 __dirname.undefined.P.enter @ workbench.main.js:6 __dirname.undefined.t.Class.define._run @ workbench.main.js:6 __dirname.undefined.t.Class.define._completed @ workbench.main.js:6 setTimeout (async)(anonymous function) @ workbench.main.js:6 __dirname.undefined.t.Class.derive._oncancel @ workbench.main.js:6 E @ workbench.main.js:6 __dirname.undefined.t.Class.derive.timeout @ workbench.main.js:6 (anonymous function) @ workbench.main.js:15 e.queue @ workbench.main.js:15 (anonymous function) @ workbench.main.js:15 e.queue @ workbench.main.js:15 (anonymous function) @ workbench.main.js:15 (anonymous function) @ workbench.main.js:15 h @ workbench.main.js:5 __dirname.undefined.P.enter @ workbench.main.js:6 __dirname.undefined.t.Class.define._run @ workbench.main.js:6 __dirname.undefined.t.Class.define._completed @ workbench.main.js:6 (anonymous function) @ workbench.main.js:15 setTimeout (async)e.trigger @ workbench.main.js:15 t.trigger @ workbench.main.js:15 t.trigger @ workbench.main.js:15 t.triggerStatus @ workbench.main.js:62 t @ workbench.main.js:62 t @ workbench.main.js:62 m @ workbench.main.js:4 (anonymous function) @ workbench.main.js:36 e.runUnlocked @ workbench.main.js:36 e.createInstance @ workbench.main.js:36 e._ensureInstances @ workbench.main.js:36 e.registerService.Object.defineProperty.get @ workbench.main.js:36 (anonymous function) @ workbench.main.js:36 e.runUnlocked @ workbench.main.js:36 (anonymous function) @ workbench.main.js:36 e.createInstance @ workbench.main.js:36 t.createInstance @ workbench.main.js:36 e.instantiate @ workbench.main.js:37 e.setInstantiationService @ workbench.main.js:37 e.initServices @ workbench.main.js:88 e.startup @ workbench.main.js:88 e.createContents @ workbench.main.js:91 e.open @ workbench.main.js:91 (anonymous function) @ workbench.main.js:91 s @ workbench.main.js:5 processImmediate @ timers.js:374 ```
6375|Option 3 will not work for breakpoints that have long paths inside a workspace â€“ we show the path in the breakpoint widget and there will be no place in the breakpoint pane Will experiment with first two ideas. More ideas are welcome
6376|Yikes, that sounds like a 'solution' I've seen in Java sites... Ha, @joaomoreno   Events, with OS listeners is the best, most scalable option IMHO.
6377|#1771
6378|Here is a much slower real world example: https://gist.github.com/Wosi/9603b02b0fc4268abc16 It causes a hang of ~14 seconds on my machine.
6379|@isidorn the `InitializeRequest` now returns an attribute `supportEvaluateForHovers` and the `EvaluateRequest` accepts a category `hover`.
6380|@isidorn I've introduced a new `OutputEvent` category `telemetry` and added an optional attribute `data`.  Please send output events with category `telemetry` to telemetry. The name of the telemetry event is expected in the `output` attribute and properties for the event live in the `data` object.
6381|"I would recommend the default behavior be ""dumb"" block indenting (same as Visual Studio, Notepad++, every other editor), with an option ""Block indent performs auto-formatting"" or the like.  Even in source code this can be destructive/annoying.  Unless every line is already aligned to a tab stop, stuff is liable to get jumbled.  Certainly I like that my editor _can_ auto-format for me when I ask it to, but I don't want it to do so during a bulk indent action.  ![indent](https://cloud.githubusercontent.com/assets/5943573/12329261/5cb87b34-ba94-11e5-9a36-87c1e037bb27.gif)"
6382|In emacs, in the editor, if you hit ctrl+space a mark is set. This is essentially activated selection where in the user can navigate the cursor around with either arrow keys or keyboard shortcuts and highlight will be active wherever moved. ctrl+space again will then deactivate the selection. Hence ctrl+space is basically a toggle for the selection.
6383|@alexandrudima would this be possible to be done via an extension? If yes, then close this I guess
6384|"@alexandrudima   Your responsiveness to our suggestions is very much appreciated!  @stevencl   > what is the UX problem that we are trying to solve with this?  In addition to what's already been stated ...  #### I find y useful in determining whether to add more detail to my query.  I type ""dog"" on my way to ""doggy"". I'm lazy, so as soon as typing ""dog"" gets me to a small y, I'll start tabbing through results. Maybe I was inconsistent in my usage of the ""gy"" suffix, and it's handy to see that some of my matches are like ""dogYears"". But maybe ""dog"" didn't get my y small enough, because someone else used ""doge"" like 40 times, so I'll keep typing to distinguish, in order to get y smaller - to a quantity that's easier to deal with.  #### I find x useful as a [wayfinding](https://en.wikipedia.org/wiki/Wayfinding) mechanism.  I'm the sort of person who gets confused if I'm not starting at either the beginning or end of a document. If I start in the middle, I'll forget where in the middle, and won't know when I've arrived back at where I started. If I run a search and my x is closer to 1 than y, I'll scroll backward to get to 1 before I start dealing with my matches, while if my x is closer to y, I'll scroll forward to get to y (or will go one more ""forward"" to circle back to 1) before I start dealing with my matches.  The matches visualization in the scroll bar is nice, but it's also a bit ambiguous. I can't always tell at a glance whether I'm really on the first or last match. Certainly, it doesn't help me know I'm on the 34th match.  If I'm reviewing / discussing a document with someone else, it's handy to say ""go to the 8th match""."
6385|This is a workbench bug that on shutdown is not being called when we update. We do not persist anything not just breakpoint
6386|:+1:
6387|You should see rename being enabled for C# files
6388|Dupe
6389|+1  I am seeing the same thing.
6390|"The rules I used for selfhost once are:  ``` {     ""rules"": {         ""no-duplicate-variable"": true,         ""no-unreachable"": true,         ""no-unused-expression"": true,         ""no-unused-variable"": true,         ""no-var-keyword"": true,         ""no-use-before-declare"": true,         ""curly"": true,         ""semicolon"": true     } } ```"
6391|Okay. I tried that on my Linux machine last night and was getting an error. Seems to work on my Windows machine though.
6392|Here is the console output, when I have opened a new window of editor and no files opened  connect ENOENT \.\pipe\Code-6c3a8d-shared-sock: Error: connect ENOENT \.\pipe\Code-6c3a8d-shared-sock     at Object.exports._errnoException (util.js:837:11)     at exports._exceptionWithHostPort (util.js:860:20)     at PipeConnectWrap.afterConnect [as oncomplete](net.js:1060:14)e.onUnexpectedError @ /C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:91 /C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:63 Plugin host terminated unexpectedly. Please restart VSCode to recover.e.doShow @ /C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:63 /C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:67 Plugin host terminated unexpectedly. Code:  0  Signal:  null(anonymous function) @ /C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:67 index.html:24 [uncaught exception]: TypeError: Cannot convert object to primitive valueonError @ index.html:24 index.html:27 TypeError: Cannot convert object to primitive value     at new Error (native)     at Client.trackException (C:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\applicationinsights\Library\Client.js:67:25)     at e.log (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:90:22274)     at t.handleEvent (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:45:31955)     at t.e.publicLog (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:45:29133)     at t.e.flushErrorBuffer (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:45:27142)     at file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:45:27002onError @ index.html:27 C:\Program Files (x86)\Microsoft VS Code\resources\app\node_modules\applicationinsights\Library\Client.js:67 Uncaught TypeError: Cannot convert object to primitive value
6393|@joaomoreno is this the shared process failing maybe?
6394|I have to revert this for now. I find it very frustrating that I type `recent` and the best match is `Remove Line Comment` and no longer `File: Open Recent` only because the scorer decides to give the first one a high score because `R` and `C` are beginning of words.  I still do not like that our camel case matcher kicks in for commands though. So I would expect that `Focus Right` matches on `Focus into Right Hand Editor` as well as `Focus into Next Editor to the Right`.  Opened https://github.com/Microsoft/vscode/issues/2031 for that issue.
6395|@aeschli not sure I like the color of functions in light theme:  ![image](https://cloud.githubusercontent.com/assets/900690/12333503/d0aecad8-baf4-11e5-9a1f-6ffa853ecac9.png)  A function name should stand out from other things like the visibility. Using a grey here puts the name to the background and it is harder to catch with the other colours we now use.
6396|"Please consider also supporting ""unsolicited"" breakpoint notifications.  It would be nice if breakpoints created via debugger's REPL interface could be displayed in the UI and be preserved across debugging sessions.  (Note that this might require round-tripping a custom data chunk to account for advanced breakpoint attributes which VSCode does not know about.)"
6397|Haa. So the score isn't also relative to the distance between characters in the string. I'll try to understand how it works.
6398|Duplicate of #1923. For some reason, something changed here.
6399|Oh sorry, I've forgotten to notify yourself that I already noticed about the @echo off and tested.  Still the same output unfortunately.
6400|See this issue for a discussion about this: #1476
