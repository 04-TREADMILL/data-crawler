23101|I am afraid it's too late already
23102|@digeff I have just pushed a fix in ca2ca08c63c88f7c0bc2735a37a97ff3b8f600fc that fixes that the `<textarea>` sync we had for accessibility purposes (screen readers) was unbounded and we still have some issues with memory consumption when opening a file (the file gets allocated minimum 2 times), but it gets GC'd after a while (so for your testcase I see the renderer process at 200MB) and with the fix I can select all and have no issue:  ![lnaojqzf2f](https://cloud.githubusercontent.com/assets/5047891/15572576/b700ecc8-2341-11e6-8e82-028278983ffa.gif)  The fix will come with the May release and please open a separate issue if you still see the crash in this case.
23103|I understand the space problem. But I am not convinced that combining these sections is the best solution. Perhaps the viewlet needs to support an experience where section headers can be 'docked' to the bottom of the section above them such that they expand and contract with the space available. Similar to how the working files/open editors section works in the explorer but with the addition that there is an interaction the user can take to dock and undock sections. For example, if you drag the section header up to the bottom of the previous section it could dock. Then you could drag it off the bottom of the section to give it a fixed height.
23104|No worries. Let's get it done for June then
23105|@sergeykhrykov Thank you for the repro, I can reproduce the crash immediately. I have opened #6916 to better track it. On a first look, it seems it goes OOM.
23106|From a quick look, it seems the JavaScript grammar enters 50 nested states while tokenizing (similar to how it gets confused in #4828). This means each token gets 50+ scopes which brings us to an OOM situation
23107|"This snippet alone also causes the crash:  ``` /*! Hammer.JS - v2.0.4 - 2014-09-28  * http://hammerjs.github.io/  *  * Copyright (c) 2014 Jorik Tangelder;  * Licensed under the MIT license */ typeof window!==""undefined""&&(!function(a,b,c,d){""use strict"";function e(a,b,c){return setTimeout(k(a,c),b)}function f(a,b,c){return Array.isArray(a)?(g(a,c[b],c),!0):!1}function g(a,b,c){var e;if(a)if(a.forEach)a.forEach(b,c);else if(a.length!==d)for(e=0;e<a.length;)b.call(c,a[e],e,a),e++;else for(e in a)a.hasOwnProperty(e)&&b.call(c,a[e],e,a)}function h(a,b,c){for(var e=Object.keys(b),f=0;f<e.length;)(!c||c&&a[e[f]]===d)&&(a[e[f]]=b[e[f]]),f++;return a}function i(a,b){return h(a,b,!0)}function j(a,b,c){var d,e=b.prototype;d=a.prototype=Object.create(e),d.constructor=a,d._super=e,c&&h(d,c)}function k(a,b){return function(){return a.apply(b,arguments)}}function l(a,b){return typeof a==kb?a.apply(b?b[0]||d:d,b):a}function m(a,b){return a===d?b:a}function n(a,b,c){g(r(b),function(b){a.addEventListener(b,c,!1)})}function o(a,b,c){g(r(b),function(b){a.removeEventListener(b,c,!1)})}function p(a,b){for(;a;){if(a==b)return!0;a=a.parentNode}return!1}function q(a,b){return a.indexOf(b)>-1}function r(a){return a.trim().split(/\s+/g)}function s(a,b,c){if(a.indexOf&&!c)return a.indexOf(b);for(var d=0;d<a.length;){if(c&&a[d][c]==b||!c&&a[d]===b)return d;d++}return-1}function t(a){return Array.prototype.slice.call(a,0)}function u(a,b,c){for(var d=[],e=[],f=0;f<a.length;){var g=b?a[f][b]:a[f];s(e,g)<0&&d.push(a[f]),e[f]=g,f++}return c&&(d=b?d.sort(function(a,c){return a[b]>c[b]}):d.sort()),d}function v(a,b){for(var c,e,f=b[0].toUpperCase()+b.slice(1),g=0;g<ib.length;){if(c=ib[g],e=c?c+f:b,e in a)return e;g++}return d}function w(){return ob++}function x(a){var b=a.ownerDocument;return b.defaultView||b.parentWindow}function y(a,b){var c=this;this.manager=a,this.callback=b,this.element=a.element,this.target=a.options.inputTarget,this.domHandler=function(b){l(a.options.enable,[a])&&c.handler(b)},this.init()}function z(a){var b,c=a.options.inputClass;return new(b=c?c:rb?N:sb?Q:qb?S:M)(a,A)}function A(a,b,c){var d=c.pointers.length,e=c.changedPointers.length,f=b&yb&&d-e===0,g=b&(Ab|Bb)&&d-e===0;c.isFirst=!!f,c.isFinal=!!g,f&&(a.session={}),c.eventType=b,B(a,c),a.emit(""hammer.input"",c),a.recognize(c),a.session.prevInput=c}function B(a,b){var c=a.session,d=b.pointers,e=d.length;c.firstInput||(c.firstInput=E(b)),e>1&&!c.firstMultiple?c.firstMultiple=E(b):1===e&&(c.firstMultiple=!1);var f=c.firstInput,g=c.firstMultiple,h=g?g.center:f.center,i=b.center=F(d);b.timeStamp=nb(),b.deltaTime=b.timeStamp-f.timeStamp,b.angle=J(h,i),b.distance=I(h,i),C(c,b),b.offsetDirection=H(b.deltaX,b.deltaY),b.scale=g?L(g.pointers,d):1,b.rotation=g?K(g.pointers,d):0,D(c,b);var j=a.element;p(b.srcEvent.target,j)&&(j=b.srcEvent.target),b.target=j}function C(a,b){var c=b.center,d=a.offsetDelta||{},e=a.prevDelta||{},f=a.prevInput||{};(b.eventType===yb||f.eventType===Ab)&&(e=a.prevDelta={x:f.deltaX||0,y:f.deltaY||0},d=a.offsetDelta={x:c.x,y:c.y}),b.deltaX=e.x+(c.x-d.x),b.deltaY=e.y+(c.y-d.y)}function D(a,b){var c,e,f,g,h=a.lastInterval||b,i=b.timeStamp-h.timeStamp;if(b.eventType!=Bb&&(i>xb||h.velocity===d)){var j=h.deltaX-b.deltaX,k=h.deltaY-b.deltaY,l=G(i,j,k);e=l.x,f=l.y,c=mb(l.x)>mb(l.y)?l.x:l.y,g=H(j,k),a.lastInterval=b}else c=h.velocity,e=h.velocityX,f=h.velocityY,g=h.direction;b.velocity=c,b.velocityX=e,b.velocityY=f,b.direction=g}function E(a){for(var b=[],c=0;c<a.pointers.length;)b[c]={clientX:lb(a.pointers[c].clientX),clientY:lb(a.pointers[c].clientY)},c++;return{timeStamp:nb(),pointers:b,center:F(b),deltaX:a.deltaX,deltaY:a.deltaY}}function F(a){var b=a.length;if(1===b)return{x:lb(a[0].clientX),y:lb(a[0].clientY)};for(var c=0,d=0,e=0;b>e;)c+=a[e].clientX,d+=a[e].clientY,e++;return{x:lb(c/b),y:lb(d/b)}}function G(a,b,c){return{x:b/a||0,y:c/a||0}}function H(a,b){return a===b?Cb:mb(a)>=mb(b)?a>0?Db:Eb:b>0?Fb:Gb}function I(a,b,c){c||(c=Kb);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return Math.sqrt(d*d+e*e)}function J(a,b,c){c||(c=Kb);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return 180*Math.atan2(e,d)/Math.PI}function K(a,b){return J(b[1],b[0],Lb)-J(a[1],a[0],Lb)}function L(a,b){return I(b[0],b[1],Lb)/I(a[0],a[1],Lb)}function M(){this.evEl=Nb,this.evWin=Ob,this.allow=!0,this.pressed=!1,y.apply(this,arguments)}function N(){this.evEl=Rb,this.evWin=Sb,y.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function O(){this.evTarget=Ub,this.evWin=Vb,this.started=!1,y.apply(this,arguments)}function P(a,b){var c=t(a.touches),d=t(a.changedTouches);return b&(Ab|Bb)&&(c=u(c.concat(d),""identifier"",!0)),[c,d]}function Q(){this.evTarget=Xb,this.targetIds={},y.apply(this,arguments)}function R(a,b){var c=t(a.touches),d=this.targetIds;if(b&(yb|zb)&&1===c.length)return d[c[0].identifier]=!0,[c,c];var e,f,g=t(a.changedTouches),h=[],i=this.target;if(f=c.filter(function(a){return p(a.target,i)}),b===yb)for(e=0;e<f.length;)d[f[e].identifier]=!0,e++;for(e=0;e<g.length;)d[g[e].identifier]&&h.push(g[e]),b&(Ab|Bb)&&delete d[g[e].identifier],e++;return h.length?[u(f.concat(h),""identifier"",!0),h]:void 0}function S(){y.apply(this,arguments);var a=k(this.handler,this);this.touch=new Q(this.manager,a),this.mouse=new M(this.manager,a)}function T(a,b){this.manager=a,this.set(b)}function U(a){if(q(a,bc))return bc;var b=q(a,cc),c=q(a,dc);return b&&c?cc+"" ""+dc:b||c?b?cc:dc:q(a,ac)?ac:_b}function V(a){this.id=w(),this.manager=null,this.options=i(a||{},this.defaults),this.options.enable=m(this.options.enable,!0),this.state=ec,this.simultaneous={},this.requireFail=[]}function W(a){return a&jc?""cancel"":a&hc?""end"":a&gc?""move"":a&fc?""start"":""""}function X(a){return a==Gb?""down"":a==Fb?""up"":a==Db?""left"":a==Eb?""right"":""""}function Y(a,b){var c=b.manager;return c?c.get(a):a}function Z(){V.apply(this,arguments)}function $(){Z.apply(this,arguments),this.pX=null,this.pY=null}function _(){Z.apply(this,arguments)}function ab(){V.apply(this,arguments),this._timer=null,this._input=null}function bb(){Z.apply(this,arguments)}function cb(){Z.apply(this,arguments)}function db(){V.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function eb(a,b){return b=b||{},b.recognizers=m(b.recognizers,eb.defaults.preset),new fb(a,b)}function fb(a,b){b=b||{},this.options=i(b,eb.defaults),this.options.inputTarget=this.options.inputTarget||a,this.handlers={},this.session={},this.recognizers=[],this.element=a,this.input=z(this),this.touchAction=new T(this,this.options.touchAction),gb(this,!0),g(b.recognizers,function(a){var b=this.add(new a[0](a[1]));a[2]&&b.recognizeWith(a[2]),a[3]&&b.requireFailure(a[3])},this)}function gb(a,b){var c=a.element;g(a.options.cssProps,function(a,d){c.style[v(c.style,d)]=b?a:""""})}function hb(a,c){var d=b.createEvent(""Event"");d.initEvent(a,!0,!0),d.gesture=c,c.target.dispatchEvent(d)}var ib=["""",""webkit"",""moz"",""MS"",""ms"",""o""],jb=b.createElement(""div""),kb=""function"",lb=Math.round,mb=Math.abs,nb=Date.now,ob=1,pb=/mobile|tablet|ip(ad|hone|od)|android/i,qb=""ontouchstart""in a,rb=v(a,""PointerEvent"")!==d,sb=qb&&pb.test(navigator.userAgent),tb=""touch"",ub=""pen"",vb=""mouse"",wb=""kinect"",xb=25,yb=1,zb=2,Ab=4,Bb=8,Cb=1,Db=2,Eb=4,Fb=8,Gb=16,Hb=Db|Eb,Ib=Fb|Gb,Jb=Hb|Ib,Kb=[""x"",""y""],Lb=[""clientX"",""clientY""];y.prototype={handler:function(){},init:function(){this.evEl&&n(this.element,this.evEl,this.domHandler),this.evTarget&&n(this.target,this.evTarget,this.domHandler),this.evWin&&n(x(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&o(this.element,this.evEl,this.domHandler),this.evTarget&&o(this.target,this.evTarget,this.domHandler),this.evWin&&o(x(this.element),this.evWin,this.domHandler)}};var Mb={mousedown:yb,mousemove:zb,mouseup:Ab},Nb=""mousedown"",Ob=""mousemove mouseup"";j(M,y,{handler:function(a){var b=Mb[a.type];b&yb&&0===a.button&&(this.pressed=!0),b&zb&&1!==a.which&&(b=Ab),this.pressed&&this.allow&&(b&Ab&&(this.pressed=!1),this.callback(this.manager,b,{pointers:[a],changedPointers:[a],pointerType:vb,srcEvent:a}))}});var Pb={pointerdown:yb,pointermove:zb,pointerup:Ab,pointercancel:Bb,pointerout:Bb},Qb={2:tb,3:ub,4:vb,5:wb},Rb=""pointerdown"",Sb=""pointermove pointerup pointercancel"";a.MSPointerEvent&&(Rb=""MSPointerDown"",Sb=""MSPointerMove MSPointerUp MSPointerCancel""),j(N,y,{handler:function(a){var b=this.store,c=!1,d=a.type.toLowerCase().replace(""ms"",""""),e=Pb[d],f=Qb[a.pointerType]||a.pointerType,g=f==tb,h=s(b,a.pointerId,""pointerId"");e&yb&&(0===a.button||g)?0>h&&(b.push(a),h=b.length-1):e&(Ab|Bb)&&(c=!0),0>h||(b[h]=a,this.callback(this.manager,e,{pointers:b,changedPointers:[a],pointerType:f,srcEvent:a}),c&&b.splice(h,1))}});var Tb={touchstart:yb,touchmove:zb,touchend:Ab,touchcancel:Bb},Ub=""touchstart"",Vb=""touchstart touchmove touchend touchcancel"";j(O,y,{handler:function(a){var b=Tb[a.type];if(b===yb&&(this.started=!0),this.started){var c=P.call(this,a,b);b&(Ab|Bb)&&c[0].length-c[1].length===0&&(this.started=!1),this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:tb,srcEvent:a})}}});var Wb={touchstart:yb,touchmove:zb,touchend:Ab,touchcancel:Bb},Xb=""touchstart touchmove touchend touchcancel"";j(Q,y,{handler:function(a){var b=Wb[a.type],c=R.call(this,a,b);c&&this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:tb,srcEvent:a})}}),j(S,y,{handler:function(a,b,c){var d=c.pointerType==tb,e=c.pointerType==vb;if(d)this.mouse.allow=!1;else if(e&&!this.mouse.allow)return;b&(Ab|Bb)&&(this.mouse.allow=!0),this.callback(a,b,c)},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var Yb=v(jb.style,""touchAction""),Zb=Yb!==d,$b=""compute"",_b=""auto"",ac=""manipulation"",bc=""none"",cc=""pan-x"",dc=""pan-y"";T.prototype={set:function(a){a==$b&&(a=this.compute()),Zb&&(this.manager.element.style[Yb]=a),this.actions=a.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var a=[];return g(this.manager.recognizers,function(b){l(b.options.enable,[b])&&(a=a.concat(b.getTouchAction()))}),U(a.join("" ""))},preventDefaults:function(a){if(!Zb){var b=a.srcEvent,c=a.offsetDirection;if(this.manager.session.prevented)return void b.preventDefault();var d=this.actions,e=q(d,bc),f=q(d,dc),g=q(d,cc);return e||f&&c&Hb||g&&c&Ib?this.preventSrc(b):void 0}},preventSrc:function(a){this.manager.session.prevented=!0,a.preventDefault()}};var ec=1,fc=2,gc=4,hc=8,ic=hc,jc=16,kc=32;V.prototype={defaults:{},set:function(a){return h(this.options,a),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(a){if(f(a,""recognizeWith"",this))return this;var b=this.simultaneous;return a=Y(a,this),b[a.id]||(b[a.id]=a,a.recognizeWith(this)),this},dropRecognizeWith:function(a){return f(a,""dropRecognizeWith"",this)?this:(a=Y(a,this),delete this.simultaneous[a.id],this)},requireFailure:function(a){if(f(a,""requireFailure"",this))return this;var b=this.requireFail;return a=Y(a,this),-1===s(b,a)&&(b.push(a),a.requireFailure(this)),this},dropRequireFailure:function(a){if(f(a,""dropRequireFailure"",this))return this;a=Y(a,this);var b=s(this.requireFail,a);return b>-1&&this.requireFail.splice(b,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(a){return!!this.simultaneous[a.id]},emit:function(a){function b(b){c.manager.emit(c.options.event+(b?W(d):""""),a)}var c=this,d=this.state;hc>d&&b(!0),b(),d>=hc&&b(!0)},tryEmit:function(a){return this.canEmit()?this.emit(a):void(this.state=kc)},canEmit:function(){for(var a=0;a<this.requireFail.length;){if(!(this.requireFail[a].state&(kc|ec)))return!1;a++}return!0},recognize:function(a){var b=h({},a);return l(this.options.enable,[this,b])?(this.state&(ic|jc|kc)&&(this.state=ec),this.state=this.process(b),void(this.state&(fc|gc|hc|jc)&&this.tryEmit(b))):(this.reset(),void(this.state=kc))},process:function(){},getTouchAction:function(){},reset:function(){}},j(Z,V,{defaults:{pointers:1},attrTest:function(a){var b=this.options.pointers;return 0===b||a.pointers.length===b},process:function(a){var b=this.state,c=a.eventType,d=b&(fc|gc),e=this.attrTest(a);return d&&(c&Bb||!e)?b|jc:d||e?c&Ab?b|hc:b&fc?b|gc:fc:kc}}),j($,Z,{defaults:{event:""pan"",threshold:10,pointers:1,direction:Jb},getTouchAction:function(){var a=this.options.direction,b=[];return a&Hb&&b.push(dc),a&Ib&&b.push(cc),b},directionTest:function(a){var b=this.options,c=!0,d=a.distance,e=a.direction,f=a.deltaX,g=a.deltaY;return e&b.direction||(b.direction&Hb?(e=0===f?Cb:0>f?Db:Eb,c=f!=this.pX,d=Math.abs(a.deltaX)):(e=0===g?Cb:0>g?Fb:Gb,c=g!=this.pY,d=Math.abs(a.deltaY))),a.direction=e,c&&d>b.threshold&&e&b.direction},attrTest:function(a){return Z.prototype.attrTest.call(this,a)&&(this.state&fc||!(this.state&fc)&&this.directionTest(a))},emit:function(a){this.pX=a.deltaX,this.pY=a.deltaY;var b=X(a.direction);b&&this.manager.emit(this.options.event+b,a),this._super.emit.call(this,a)}}),j(_,Z,{defaults:{event:""pinch"",threshold:0,pointers:2},getTouchAction:function(){return[bc]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.scale-1)>this.options.threshold||this.state&fc)},emit:function(a){if(this._super.emit.call(this,a),1!==a.scale){var b=a.scale<1?""in"":""out"";this.manager.emit(this.options.event+b,a)}}}),j(ab,V,{defaults:{event:""press"",pointers:1,time:500,threshold:5},getTouchAction:function(){return[_b]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime>b.time;if(this._input=a,!d||!c||a.eventType&(Ab|Bb)&&!f)this.reset();else if(a.eventType&yb)this.reset(),this._timer=e(function(){this.state=ic,this.tryEmit()},b.time,this);else if(a.eventType&Ab)return ic;return kc},reset:function(){clearTimeout(this._timer)},emit:function(a){this.state===ic&&(a&&a.eventType&Ab?this.manager.emit(this.options.event+""up"",a):(this._input.timeStamp=nb(),this.manager.emit(this.options.event,this._input)))}}),j(bb,Z,{defaults:{event:""rotate"",threshold:0,pointers:2},getTouchAction:function(){return[bc]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.rotation)>this.options.threshold||this.state&fc)}}),j(cb,Z,{defaults:{event:""swipe"",threshold:10,velocity:.65,direction:Hb|Ib,pointers:1},getTouchAction:function(){return $.prototype.getTouchAction.call(this)},attrTest:function(a){var b,c=this.options.direction;return c&(Hb|Ib)?b=a.velocity:c&Hb?b=a.velocityX:c&Ib&&(b=a.velocityY),this._super.attrTest.call(this,a)&&c&a.direction&&a.distance>this.options.threshold&&mb(b)>this.options.velocity&&a.eventType&Ab},emit:function(a){var b=X(a.direction);b&&this.manager.emit(this.options.event+b,a),this.manager.emit(this.options.event,a)}}),j(db,V,{defaults:{event:""tap"",pointers:1,taps:1,interval:300,time:250,threshold:2,posThreshold:10},getTouchAction:function(){return[ac]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime<b.time;if(this.reset(),a.eventType&yb&&0===this.count)return this.failTimeout();if(d&&f&&c){if(a.eventType!=Ab)return this.failTimeout();var g=this.pTime?a.timeStamp-this.pTime<b.interval:!0,h=!this.pCenter||I(this.pCenter,a.center)<b.posThreshold;this.pTime=a.timeStamp,this.pCenter=a.center,h&&g?this.count+=1:this.count=1,this._input=a;var i=this.count%b.taps;if(0===i)return this.hasRequireFailures()?(this._timer=e(function(){this.state=ic,this.tryEmit()},b.interval,this),fc):ic}return kc},failTimeout:function(){return this._timer=e(function(){this.state=kc},this.options.interval,this),kc},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==ic&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),eb.VERSION=""2.0.4"",eb.defaults={domEvents:!1,touchAction:$b,enable:!0,inputTarget:null,inputClass:null,preset:[[bb,{enable:!1}],[_,{enable:!1},[""rotate""]],[cb,{direction:Hb}],[$,{direction:Hb},[""swipe""]],[db],[db,{event:""doubletap"",taps:2},[""tap""]],[ab]],cssProps:{userSelect:""none"",touchSelect:""none"",touchCallout:""none"",contentZooming:""none"",userDrag:""none"",tapHighlightColor:""rgba(0,0,0,0)""}};var lc=1,mc=2;fb.prototype={set:function(a){return h(this.options,a),a.touchAction&&this.touchAction.update(),a.inputTarget&&(this.input.destroy(),this.input.target=a.inputTarget,this.input.init()),this},stop:function(a){this.session.stopped=a?mc:lc},recognize:function(a){var b=this.session;if(!b.stopped){this.touchAction.preventDefaults(a);var c,d=this.recognizers,e=b.curRecognizer;(!e||e&&e.state&ic)&&(e=b.curRecognizer=null);for(var f=0;f<d.length;)c=d[f],b.stopped===mc||e&&c!=e&&!c.canRecognizeWith(e)?c.reset():c.recognize(a),!e&&c.state&(fc|gc|hc)&&(e=b.curRecognizer=c),f++}},get:function(a){if(a instanceof V)return a;for(var b=this.recognizers,c=0;c<b.length;c++)if(b[c].options.event==a)return b[c];return null},add:function(a){if(f(a,""add"",this))return this;var b=this.get(a.options.event);return b&&this.remove(b),this.recognizers.push(a),a.manager=this,this.touchAction.update(),a},remove:function(a){if(f(a,""remove"",this))return this;var b=this.recognizers;return a=this.get(a),b.splice(s(b,a),1),this.touchAction.update(),this},on:function(a,b){var c=this.handlers;return g(r(a),function(a){c[a]=c[a]||[],c[a].push(b)}),this},off:function(a,b){var c=this.handlers;return g(r(a),function(a){b?c[a].splice(s(c[a],b),1):delete c[a]}),this},emit:function(a,b){this.options.domEvents&&hb(a,b);var c=this.handlers[a]&&this.handlers[a].slice();if(c&&c.length){b.type=a,b.preventDefault=function(){b.srcEvent.preventDefault()};for(var d=0;d<c.length;)c[d](b),d++}},destroy:function(){this.element&&gb(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},h(eb,{INPUT_START:yb,INPUT_MOVE:zb,INPUT_END:Ab,INPUT_CANCEL:Bb,STATE_POSSIBLE:ec,STATE_BEGAN:fc,STATE_CHANGED:gc,STATE_ENDED:hc,STATE_RECOGNIZED:ic,STATE_CANCELLED:jc,STATE_FAILED:kc,DIRECTION_NONE:Cb,DIRECTION_LEFT:Db,DIRECTION_RIGHT:Eb,DIRECTION_UP:Fb,DIRECTION_DOWN:Gb,DIRECTION_HORIZONTAL:Hb,DIRECTION_VERTICAL:Ib,DIRECTION_ALL:Jb,Manager:fb,Input:y,TouchAction:T,TouchInput:Q,MouseInput:M,PointerEventInput:N,TouchMouseInput:S,SingleTouchInput:O,Recognizer:V,AttrRecognizer:Z,Tap:db,Pan:$,Swipe:cb,Pinch:_,Rotate:bb,Press:ab,on:n,off:o,each:g,merge:i,extend:h,inherit:j,bindFn:k,prefixed:v}),/*Workaround for 'define' being overridden in A360 */ false && typeof define==kb&&define.amd?define(function(){return eb}):""undefined""!=typeof module&&module.exports && false /* Workaround for 'module' being defined by Angular.js in Columbus. */ ?module.exports=eb:a[c]=eb}(window,document,""Hammer"")); ```"
23108|@arixse Is it slow but finishes... or it never finishes?  Are you behind a proxy?
23109|@dbaeumer Is this true?
23110|"And here is the JavaScript grammar going crazy. After the line it has ~50 pushed states!  ``` [ {""ruleId"":1,""enterPos"":-1,""endRule"":null,""scopeName"":""source.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":71,""enterPos"":29,""endRule"":null,""scopeName"":null,""contentName"":null,""whileRule"":null}, {""ruleId"":142,""enterPos"":31,""endRule"":null,""scopeName"":""meta.function.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":48,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":142,""enterPos"":170,""endRule"":null,""scopeName"":""meta.function.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":187,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":71,""enterPos"":251,""endRule"":null,""scopeName"":null,""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":255,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":91,""enterPos"":10214,""endRule"":null,""scopeName"":""meta.object.type.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":94,""enterPos"":11267,""endRule"":null,""scopeName"":""meta.field.declaration.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":142,""enterPos"":11275,""endRule"":null,""scopeName"":""meta.function.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":11286,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":71,""enterPos"":11290,""endRule"":null,""scopeName"":null,""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":11298,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":135,""enterPos"":12685,""endRule"":null,""scopeName"":""meta.type.paren.cover.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":91,""enterPos"":12689,""endRule"":null,""scopeName"":""meta.object.type.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":94,""enterPos"":12900,""endRule"":null,""scopeName"":""meta.field.declaration.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":142,""enterPos"":12905,""endRule"":null,""scopeName"":""meta.function.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":12917,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":184,""enterPos"":12963,""endRule"":null,""scopeName"":""meta.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":74,""enterPos"":12964,""endRule"":null,""scopeName"":""meta.var.expr.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":76,""enterPos"":12967,""endRule"":null,""scopeName"":""meta.var-single-variable.expr.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":12970,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":135,""enterPos"":14453,""endRule"":null,""scopeName"":""meta.type.paren.cover.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":91,""enterPos"":14458,""endRule"":null,""scopeName"":""meta.object.type.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":94,""enterPos"":14588,""endRule"":null,""scopeName"":""meta.field.declaration.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":142,""enterPos"":14596,""endRule"":null,""scopeName"":""meta.function.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":14608,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":74,""enterPos"":14609,""endRule"":null,""scopeName"":""meta.var.expr.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":76,""enterPos"":14660,""endRule"":null,""scopeName"":""meta.var-single-variable.expr.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":14663,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":14699,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":91,""enterPos"":14791,""endRule"":null,""scopeName"":""meta.object.type.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":94,""enterPos"":14836,""endRule"":null,""scopeName"":""meta.field.declaration.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":14870,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":14932,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":91,""enterPos"":15883,""endRule"":null,""scopeName"":""meta.object.type.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":94,""enterPos"":16107,""endRule"":null,""scopeName"":""meta.field.declaration.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":142,""enterPos"":16117,""endRule"":null,""scopeName"":""meta.function.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":16129,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":184,""enterPos"":16163,""endRule"":null,""scopeName"":""meta.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":71,""enterPos"":16292,""endRule"":null,""scopeName"":null,""contentName"":null,""whileRule"":null}, {""ruleId"":83,""enterPos"":16300,""endRule"":null,""scopeName"":""meta.type.parameters.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":91,""enterPos"":17132,""endRule"":null,""scopeName"":""meta.object.type.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":97,""enterPos"":17213,""endRule"":null,""scopeName"":""meta.method.declaration.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":125,""enterPos"":17229,""endRule"":null,""scopeName"":""meta.decl.block.js"",""contentName"":null,""whileRule"":null}, {""ruleId"":71,""enterPos"":17299,""endRule"":null,""scopeName"":null,""contentName"":null,""whileRule"":null} ] ```  This means that each and every token at one point has 40+ scopes. This is insane!"
23111|"@isidorn Nice batches for Pause/Running. Tho, I still see a thread which is paused but has no children. How is that possible? Should the UI show a placeholder?  <img width=""404"" alt=""screen shot 2016-05-26 at 13 39 15"" src=""https://cloud.githubusercontent.com/assets/1794099/15573439/59b84cae-2347-11e6-84f1-e5fade5bbdc4.png"">  (to repo) - get latest dot net cli stuff and have an app like this  ``` using System; using System.Threading.Tasks;  namespace ConsoleApplication {     public class Program     {         public static void Main(string[] args)         {             var rnd = new Random();              Task.Factory.StartNew(async () => {                 while(true) {                     await Task.Delay((int) (rnd.NextDouble() * 4000));                     Console.WriteLine(""1"");                 }             });              Task.Factory.StartNew(async () => {                 while(true) {                     await Task.Delay((int) (rnd.NextDouble() * 4000));                     Console.WriteLine(""2"");                 }             });              Console.WriteLine(""Hello World!"");             Console.ReadLine();         }     } } * break in both workers when they console.writeline ```"
23112|"I've tracked it down to this rule that matches **for** loops!  Around position 255: `for(e=0;e<a.length;)`  So the grammar thinks that `<a.length` is a type parameter...  ``` <key>type-parameters</key>         <dict>             <key>begin</key>             <string>([a-zA-Z_$][\w$]*)?(&lt;)</string>             <key>beginCaptures</key>             <dict>                 <key>1</key>                 <dict>                     <key>name</key>                     <string>entity.name.type.js</string>                 </dict>                 <key>2</key>                 <dict>                     <key>name</key>                     <string>meta.brace.angle.js</string>                 </dict>             </dict>             <key>end</key>             <string>(?=$)|(&gt;)</string>             <key>endCaptures</key>             <dict>                 <key>2</key>                 <dict>                     <key>name</key>                     <string>meta.brace.angle.js</string>                 </dict>             </dict>             <key>name</key>             <string>meta.type.parameters.js</string>             <key>patterns</key>             <array>                 <dict>                     <key>match</key>                     <string>\b(extends)\b</string>                     <key>name</key>                     <string>keyword.other.js</string>                 </dict>                 <dict>                     <key>include</key>                     <string>#comment</string>                 </dict>                 <dict>                     <key>include</key>                     <string>#type</string>                 </dict>             </array>         </dict> ```"
23113|@isidorn @bpasero Is there a new build for verification?
23114|**verifier** have a workspace folder that contains a `#` character
23115|@aeschli Please see #6916 where we crash with OOM because the JavaScript grammar produces ridiculous amount of scopes. Disabling the `type-parameters` rule seems to help it considerably, considering that every `<` entered this state.
23116|@aeschli Where do we get the JavaScript grammar from? https://github.com/Microsoft/TypeScript-Sublime-Plugin ?
23117|"<img width=""258"" alt=""screen shot 2016-05-26 at 14 00 12"" src=""https://cloud.githubusercontent.com/assets/1794099/15573859/31ba1b94-234a-11e6-88f3-35ffb7858132.png"">  It's OK we don't need to fix this"
23118|This still happens for me. Still, in the same weird way as before - not always but almost always.
23119|@jrieken is this project living on a filesystem that is shared between OS X and Windows?
23120|Assigning this to @stevencl to coordinate this effort across all the areas @joaomoreno mentioned above
23121|No, local to the VM `C:\Users\jrieken\Code\ddd\src\extension.ts`
23122|@jrieken build is just triggered should be out in 20mins
23123|It is still possible for a thread to be stopped and that for some reason the callstack could not be retrieved (like in the node v6 issue that andre was mentioning in the standuo). It is up to the adapter to decide if it reports a thread with no call stack as stopped. So this is comming from the c# debug adapter.  fyi @weinand @gregg-miskelly
23124|@jrieken we triggered a build if you want to verify this new behavior
23125|@isidorn would appreciate if @weinand could verify on your machine because I am out until next week
23126|@jrieken does this problem occur if longstring is short, e.g. <= 80 ?
23127|sometimes this occurs already on the first `console.log` statement here  ``` let v = process.version; console.log(v); ```
23128|So I think it's unrelated to that.
23129|@bpasero there is still nothing to verify since we depend on the PHP debugger on this one
23130|Ah ok.
23131|Dup of #6247
23132|Dup of #6247
23133|@jrieken but it only occurs for 'console.log' (and it does not happen if you comment out the console.logs)?   If yes, then this could be a hint towards finding the culprit.  'console.log' in the extension is somewhat 'heavy' because it is read by the EH instance of VS Code, which sends it back to the original VS Code instance where the debugger runs. There it is broadcasted and the debugger picks it up to append it to the debug console.
23134|"for Code, this feature can be impelmented in CSS only: Assign `font-feature-settings` to `token.<type>`, like:  ``` css token.js{     --webkit-font-feature-settings: ""XJS_"" 1;     font-feature-settings: ""XJS_"" 1; } ```  Perhaps these CSSes can be automatically built from syntax extension list registered."
23135|yes - only ever in `console.log`-statements
23136|"@aeschli This still has some rough edge, esp with revealing on type and when the prefix ends with a whitespace:  ```         ""prefix"": ""// --- "",         ""description"": ""TOC"",         ""body"": [             ""// --- $1 ------"",             ""$2""         ] ```"
23137|Glad you found the hidden `.git` folder. Closing as a duplicate of #6162.
23138|God, stop posting these +1's. And wouldn't it be easy as calling the find&replace function over the found files? I'll try looking it up
23139|@jrieken you are seeing this when running Windows in a VM?  When reading all the other comments in this issue it seems that this problem only occurs when running in a VM, but not in real Windows. This supports the hypothesis that this problem is connected to the heavy 'console.log' flow which is more easily affected by a slow setup, e.g. a VM.
23140|It's the TypeScriptReact grammar from https://github.com/Microsoft/TypeScript-TmLanguage
23141|@aeschli I'm working with php.
23142|It's known as https://github.com/Microsoft/TypeScript-TmLanguage/issues/11.
23143|Sorry, the out-of-the box PHP extension doesn't support goto definition. Please check out the marketplace for a PHP extension.
23144|"Sorry, can share you my project. I 've got it repro on another machine.  Install old version VScode,  maybe the previous version before 1.1.1.  and open a typescript - project . Then new version prompt shows when I launch the VS Code. I click the update prompt link directly and Update VS Code to 1.1.1. The issue happens.  Open Same typescript project.  Click F5 to run with NodeJS. (Actually it's a protractor project) Then Strike F1 ---Run build project ---Here no build logs now. Click F5 again after build complete.  ----- Here no Run logs at all.  Thanks JEN.LEE  At 2016-05-24 17:21:25, ""Dirk Bäumer"" notifications@github.com wrote:  @cc5zhenhua I can't reproduce this with my project. Can you share the TypeScript based nodejs project you are seeing this in.  — You are receiving this because you were mentioned. Reply to this email directly or view it on GitHub"
23145|My quick open provider's `DataSource` is being sent data from another input that didn't come from me. Notably, it's getting a [`HelpEntry`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/quickopen/browser/helpHandler.ts#L20) in the `getId()` call... Not cool.  Quick open needs some serious rewriting, @bpasero ... I don't want to give you this issue since I was the last to touch the quick open code. But I also don't want to go into it either since the beast is huge as it is, and hard to comprehend...
23146|yes - win10 VM
23147|@joaomoreno 5998 ![3](https://cloud.githubusercontent.com/assets/8943787/15575995/311f9ab8-2388-11e6-8567-2a260343194d.png) sorry for that i do not answer timely
23148|I'm affected by the same problem. Here is a stack trace and a [Repository to reproduce this issue](https://github.com/marvinhagemeister/vscode-todo2/tree/vscode_prelaunch) (checkout the `vscode_prelaunch` branch).  First run of the `Test Extension` task is fine, all subsequent runs produce the described error message `Build errors have been detected during preLaunchTask 'npm'`.  ``` js e.doShow                                       @  messageService.ts:128 e.show                                         @  messageService.ts:112 i.configurationManager.adapter.i.runPreLaunchTask.then.i.messageService.show.message  @ debugService.ts:537 __dirname.undefined.t.Class.define.then        @  winjs.base.raw.js:1826 (anonymous function)                           @  debugService.ts:530 __dirname.undefined.t.Class.define.then        @  winjs.base.raw.js:1826 (anonymous function)                           @  debugService.ts:513 __dirname.undefined.t.Class.define.then        @  winjs.base.raw.js:1826 (anonymous function)                           @  debugService.ts:512 h                                              @  winjs.base.raw.js:1440 __dirname.undefined.P.enter                    @  winjs.base.raw.js:1127 __dirname.undefined.t.Class.define._run        @  winjs.base.raw.js:1343 __dirname.undefined.t.Class.define._completed  @  winjs.base.raw.js:1311 __dirname.undefined.t.Class.define.then        @  winjs.base.raw.js:1826 __dirname.undefined.L.enter                    @  winjs.base.raw.js:1023 __dirname.undefined.t.Class.define._run        @  winjs.base.raw.js:1343 __dirname.undefined.t.Class.define._setCompleteValue  @  winjs.base.raw.js:1327 h                                              @  winjs.base.raw.js:1440 __dirname.undefined.P.enter                    @  winjs.base.raw.js:1127 __dirname.undefined.t.Class.define._run        @  winjs.base.raw.js:1343 __dirname.undefined.t.Class.define._completed  @  winjs.base.raw.js:1311 h                                              @  winjs.base.raw.js:1440 __dirname.undefined.P.enter                    @  winjs.base.raw.js:1127 __dirname.undefined.t.Class.define._run        @  winjs.base.raw.js:1343 __dirname.undefined.t.Class.define._completed  @  winjs.base.raw.js:1311 d                                              @  winjs.base.raw.js:2072 q.then.a.(anonymous function)                  @  winjs.base.raw.js:2097 h                                              @  winjs.base.raw.js:1440 __dirname.undefined.P.enter                    @  winjs.base.raw.js:1127 __dirname.undefined.t.Class.define._run        @  winjs.base.raw.js:1343 __dirname.undefined.t.Class.define._completed  @  winjs.base.raw.js:1311 (anonymous function)                           @  configurationService.ts:65 (anonymous function)                           @  /Applications/Visual Studio Code.app/Contents/Resources/app/node_modules/graceful-fs/graceful-fs.js:76 readFileAfterClose                             @  fs.js:404 ```  VSCode version: 1.1.1 (tried insider as well) Node: v6.2.0  ## EDIT:  Turns out this is indeed intended behaviour. Although my main code is written in typescript, I use the node `assert` module inside tests. The installed `vscode-eslint` extensions was not properly configured for es6 and showed a parsing error because assert uses `const` variable declarations.
23149|Why are you working on a repository that has 5998 pending changes? You must either commit them more often or work outside of a git repository.
23150|@joaomoreno thanks for the update
23151|When it is the tab key and happens on first time, then this is the loading of the emmet node module.  https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/emmet/node/emmetActions.ts#L26  > or an indeterminate amount of time has passed  however this doesn't explain this, since the emmet module is loaded only once into the renderer process.  @alexandrudima any other ideas what could go on?
23152|"> usually only for the first time I press tab after opening vscode  Yes this is caused by emmet loading the first time it is invoked.   @M-Zuber once the May release comes out you can use the following rule in your `keybindings.json` to remove that `Tab` loads and executes emmet:  ``` { ""key"": ""tab"", ""command"": ""-editor.emmet.action.expandAbbreviation"" } ```  Here I am loading emmet (typing tab for the first time in a html file) on my quite powerful desktop at home: 488ms to load.  ![image](https://cloud.githubusercontent.com/assets/5047891/15576786/da6d8cf8-2359-11e6-9322-b6828d8c0e6d.png)  I think the way forward here is to move emmet to an extension, thus the 500ms loading hit will be taken by the extension host."
23153|The slowness on our side is dealt with for this example, let's use this to track Microsoft/TypeScript-TmLanguage#174
23154|@stevencl we briefly talked about this during my time in Edinburgh, the explorer is very keen on restoring the context you are in when switching views.   Since now we have an explicit way of closing editors we should maybe revisit this.
23155|This is somehow strange. Like the named pipe stops working.  Is your machine managed by some domain? Is there any thing special about it that comes to mind?
23156|Actually closing as duplicate of #4921.
23157|Fantastic!
23158|Right, but here the context when I leave the explorer is that there are no files open. So I would expect that remains when I go back to the explorer. But instead the file that I had closed before switching to another viewlet is reopened.
23159|what about for scss?
23160|I can't seem to reproduce. Is there anything special about your system? Corporate managed, for example?  The `EPERM` error indicates that it can't connect to the named pipe crated by the first instance. Rests to figure out whether that happens because it fails to connect or maybe the first instance drops the named pipe at some point.  If you keep trying repeatedly, it sometimes works, did I get that right?
23161|@jrieken if you were confused, you can certainly open a bug at https://github.com/Omnisharp/Omnisharp-vscode/issues for us to add a placeholder (ex: '[No current call stack]') frame.
23162|I made new video. can you check this video available for you. https://www.dropbox.com/s/4jp06ucrk4ka8a1/bug2.mp4?dl=0
23163|After the change in ca2ca08c63c88f7c0bc2735a37a97ff3b8f600fc that limits the ammount of text we sync to the `<textarea>` these files are no longer slow for me.
23164|I'm sorry but something is wrong here... I changed my system's language to German and I get:  ![image](https://cloud.githubusercontent.com/assets/22350/15579118/80110b72-2363-11e6-8d7f-6411412da23a.png)  Do you guys still see this? cc @egamma @dbaeumer
23165|![http://static1.squarespace.com/static/53951756e4b00bb4cdae2705/t/565bab83e4b05079e4bcc313/1448848265740/?format=original](http://static1.squarespace.com/static/53951756e4b00bb4cdae2705/t/565bab83e4b05079e4bcc313/1448848265740/?format=original)
23166|"A preview: ![image](https://cloud.githubusercontent.com/assets/240091/15580068/db383e36-2399-11e6-86ee-a7e4d0bd30e1.png)  Code is injected with this CSS:  ``` css token.haskell{ font-feature-settings: ""XHS_"" 1 } ```  Therefore the ligature for `>>=` is only enabled in Haskell, not in C++."
23167|@dbaeumer that's all correct - first works when starting from GUI, second doesn't. Both work when starting from CLI.  `MOZCONFIG` is set in a (os-specific) rc script that is sourced from my `~/.zshrc`  I'm now wondering if this isn't getting picked up because whatever source code uses to get environment variables on linux isn't running zsh as an interactive shell (which means `~/.zshrc` would never get sourced). I'll try putting stuff in `~/.zprofile` (which is used for login shells) and `~/.zshenv` (used by all shells) and report back - maybe I just need to refactor my init scripts a little bit!
23168|@joaomoreno I've been playing around with this a bit and I now believe it's due to the fact that I'll often start Code from an elevated command prompt. Once I have it running elevated I can't stay any normal instances.   My developer command prompt has to be run elevated and so when executing code <folder> from that prompt, I can't start Code again from start menu or from Windows explorer
23169|Yeah, that explains it (on linux, at least - the fact that it all works fine on os x is still a little baffling, and probably bears investigating). If I set an environment variable in `~/.zprofile` or `~/.zshenv`, those get picked up by code run from the GUI. I shall now attempt to refactor my shell rc scripts in an attempt to not break anything, and also to make this all work on both linux and mac :)
23170|He also mentioned sublime always loads the full extension lost at one time, while in VS Code, we will fetch the partial list each time users type a new keyword. This makes him feel bad ...  IMHO, it is due to the special network in China and has nothing to do with vscode side. We are running into the same issue in our website, Wade mentioned it always takes 30s + to load the homepage. Since Shanghai team is still maintaining the old vs gallery, let me see if there is any custpmization for China network, like cdn, then have a feature request for vso.
23171|First slowest thing noticed when selecting some text on line 84 in external-file-59.txt:  **rendering decorations**: ![image](https://cloud.githubusercontent.com/assets/5047891/15580994/0442f872-236b-11e6-9c10-7f74085cfd88.png)
23172|"`""editor.selectionHighlight"": false` has a huge impact of making things faster again in this case"
23173|A single query to `TextRange.getClientRects()` for line 84 in `external-file-59.txt` takes **6ms**!! We call that all the time in order to render decorations / selection at the right spot. It looks like Chromium has a `O(N)` algorithm tucked away in there, even if the text is layouted.  ![image](https://cloud.githubusercontent.com/assets/5047891/15581311/051f4ab0-236c-11e6-9aa4-ba33d6b17de9.png)
23174|For now we decide to not push for it but rather revisit the icon of the overflow.
23175|It's acting a little differently now from when I filed the bug, and I don't see that error anymore.  If I open the first Code instance from the command prompt, then I think I can always open a second one from the command prompt. But, if I try to open the second one from the file explorer, by double-clicking a file or using the context menu option, it doesn't work - I don't get a new instance of Code, and the file isn't opened in the existing instance.  But, if the first Code instance is opened from file explorer, then I can always open more instances from either the command prompt or file explorer with no problem.  So I think I just discovered a workaround - I can first open an instance from file explorer, and leave it open in the background.   Anything I can do to help debug?
23176|Verified fixed on Windows.
23177|And this explains why `wrappingColumn: 300` is the default :). I will follow up on this with filing bugs against Chromium...
23178|Since we are now using electron 0.37 (Based on chrome 49) could we not use css properties(variables) to solve the icon url path issue, or even all of the css extensibility. see: https://www.chromestatus.com/feature/6401356696911872   As the properties can also be accessed through JavaScript, something then like a .json file could be used to define the properties and then VSCode applies them to the UI. This would prevent devs using css to alter things they shouldn't.
23179|@jmurphzyo I haven't tried these yet but there seem to be at least 2 extensions that promise to format sass: https://marketplace.visualstudio.com/search?term=sass&target=VSCode&sortBy=Relevance
23180|Forget it.. my bad 😄
23181|@bpasero and @joaomoreno yes, the blank space sounded good in my head until I saw it.  Definitely not pretty.
23182|I lost my changes in code several time in this way, and I can't undo changes after this bug.
23183|@aaskat could you please attach your project (or the three files and the launch configuration) here and I will investigate.
23184|Dup of #6774 -- that one has better steps.
23185|And one more thing -  If I open the first instance from the command prompt, I can open a second instance from the _same_ command prompt, but if I have a different cmd window open, I can't open a second instance from that different prompt.
23186|I think this was never implemented
23187|"@jhasse We actually have three different possible implementations of `ctrl+delete` that we ship with to please everybody. Here is how you can switch to the other(s):  ``` { ""key"": ""ctrl+delete"", ""command"": ""deleteWordStartRight"", ""when"": ""editorTextFocus"" } ```  or  ``` { ""key"": ""ctrl+delete"", ""command"": ""deleteWordEndRight"", ""when"": ""editorTextFocus"" } ```"
23188|I'm glad https://github.com/Microsoft/TypeScript-TmLanguage/issues/11 is finally getting some action, hope this can get fixed for ts and js.
23189|To verify, inject against the string scope in typescript.
23190|Doesn't repro on last Insiders so a regression in the last two weeks.
23191|Duplicate of https://github.com/Microsoft/vscode/issues/76
23192|FYI I closed #1231 in favor of #76
23193|Verified the correct fallback behavior but discovered menu items are no longer localized during testing. https://github.com/Microsoft/vscode/issues/6927 Could this regression be related to the changes.
23194|@tsirolnik it is as easy (or as hard) as that. It can be quite a task with matches spanning across a significant amount of files.
23195|We have some overly protective code that rejects the regexp if it matches the empty string.
23196|I'm still seeing this in the latest build.
23197|From my digging yesterday it seems like some obscure at the depths of the old version of winpty being used. Moving to backlog for now due to lower priority as well as no time to fix for May.
23198|Some other user found out he's using an elevated prompt in #6137, is this your situation too?
23199|Excellent, let me give that a try.
23200|We run whatever shell is in `SHELL`... so what do you get with `echo $SHELL`?
