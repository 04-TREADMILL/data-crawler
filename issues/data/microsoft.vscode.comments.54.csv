5301|@joaomoreno with node 4 iconv can no longer overwrite the toString() method so you need to use iconv manually as shown here: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/search/node/textSearch.ts#L161  There is also a way to pipe iconv using a stream if you can use it.
5302|@joaomoreno this [video](https://www.youtube.com/watch?v=badlvpaSMn8) illustrates that this results in confusion.
5303|"#1701 and #1703 should get fixed soon, we are looking into improving our threading model. Accidently you can put ""listen"" in your `launch.json` and everything will work fine except that you will get warnings in your `launch.json`"
5304|![schermata del 2016-01-04 14-06-12](https://cloud.githubusercontent.com/assets/3192179/12090143/5b43a472-b2ec-11e5-8bf5-0ee318ce9250.png)
5305|It turns out that the xterm on the machine (3.19.0-15-generic #15-Ubuntu) is not setting SHELL to my actual shell (/bin/ksh) but defaulting to /bin/sh. I have fixed this in a script and I now get an xterm with the correct SHELL variable ($SHELL=/bin/ksh) This now allows Code to run correctly :D
5306|"@weinand that is awesome, will make my code a lot simpler.  @isidorn Then how about just adding ""listen"" as valid value to launch.json schema and adding `listenRequest` to debugadapter-node?"
5307|"Or allow overriding it in package.json, like   ``` json ""properties"": {   ""request"": {     ""type"": ""string"",     ""default"": ""listen""   }, ```"
5308|Thanks for your help @sijad. But I'd rather fix this in some other way. We don't need to create an `installed` method on the service, since each quick open entry already knows whether it is installed or not. Please check 1aff057. Thanks once again! Keep it coming!
5309|What do you get with `/bin/sh --version`?
5310|/bin/sh --version /bin/sh: 0: Illegal option -- /bin/ksh --version   version         sh (AT&T Research) 93u+ 2012-08-01
5311|Maybe `/bin/sh -v`?
5312|Ubuntu 12.04, vscode 0.10.5 could not reproduce leaving it over the weekend with an empty instance.
5313|Almost definitely the famed Windows long path issue, since the installer is set to always delete all extensions on update. @jrieken fyi
5314|@felixfbecker I can not repro this issue on my side. Are you sure you are giving unique threadIds to your threads? What happens if you only use one thread, does it work nicely? What happens if send an exited event for the first thread?
5315|"Please make sure you have all the [build prerequisites](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source) installed. I cannot reproduce this.  @Nosherwan for sure you are seeing a different error, since @shanalikhan1's error is very specific to Windows (`The imported project ""C:\Microsoft.Cpp.Default.props"" was not found.`). If you see an error, please create a separate issue."
5316|Here's the sorting algorithm: - https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/files/browser/views/explorerViewer.ts#L633 - https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/comparers.ts#L11
5317|Closing as dupe of #69
5318|`npm.sh` has zero options. Every argument you give it [is passed along to `npm` itself](https://github.com/Microsoft/vscode/blob/master/scripts/npm.sh#L28), so it supports every argument `npm` supports.
5319|I do not have Git installed. I clicked the Git panel once, and it wouldn't go away even after a restart of Code. I haven't had it come up anymore, maybe because I installed an update since then?
5320|@dbaeumer  i just had an issue with the tsconfig.json file again last night.. or was it early this morning.. I'm pretty sure I'm on the latest vs code.
5321|"No that gives the same error  I tried this strings /bin/sh | grep -i ver preverrout verbose %s: not completely converted .gnu.version .gnu.version_r and this strings /bin/sh | grep -i [0-9].[0-9] /lib64/ld-linux-x86-64.so.2 GLIBC_2.3 GLIBC_2.11 GLIBC_2.3.4 GLIBC_2.14 GLIBC_2.4 GLIBC_2.2.5 5_5! t2D9 *0123456789  Best I can get is this ls -la /bin/sh lrwxrwxrwx 1 root root 4 Nov  6 15:21 /bin/sh -> dash ls -la /bin/dash -rwxr-xr-x 1 root root 121272 Feb 19  2014 /bin/dash"
5322|OK that helps: you seem to be running [dash](https://en.wikipedia.org/wiki/Almquist_shell). Leaving it closed as I don't think many people will hit this.
5323|Nice catch. We now show the stopped reason for whatever thread is selected. Try it out in our January release and let us know what you think.
5324|Ok, what's your pick? - Do not show readable extension name, but extension ids in the UI - Show both readable name and id, for every extension in the UI - Stop filtering on the extension id  Also, removing the important flag, as this hardly seems to be.
5325|Can you open the git panel and show me what you see in there?
5326|Also, please let me know which OS you are on.
5327|Great catch by the way :+1:.
5328|@bpasero You should let people know you comment out tests.
5329|I don't think the 0.10.5 release really represents a satisfactory fix. Is there another bug somewhere to record that more work is required? Or perhaps leave this open?
5330|"What about option 4: ""show the extension id when that is what was searched and matched""  If they didn't search on extension id, no need to show it.   If they searched on extension id and we found matches, then show it.   In other words: have the behaviour match the user's intent and expected context.   Or more simply: show them what they are looking for.   — Sent from Mailbox  On Tue, Jan 5, 2016 at 12:58 AM, João Moreno notifications@github.com wrote:  > Ok, what's your pick? > - Do not show readable extension name, but extension ids in the UI > - Show both readable name and id, for every extension in the UI >  > ## \- Stop filtering on the extension id >  > Reply to this email directly or view it on GitHub: > https://github.com/Microsoft/vscode/issues/1441#issuecomment-168699087"
5331|Note that #439 is not closed.
5332|I don't really like that solution since it would make labels come in and out of the view as you type and poses the following questions: Where to show it? Do we replace the readable name with it? Do we append to it?
5333|"I've seen both and prefer <kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>s</kbd> to save as personally.  You should be able to change this locally by opening your keybindings file (<kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>p</kbd>, type ""keyboard"", <kbd>enter</kbd>) and adding this:  ``` js { ""key"": ""ctrl+shift+s"", ""command"": ""workbench.action.files.saveAll"" }, ```"
5334|"The default was recently changed from tab to space due to yaml not working with tabs. https://github.com/Microsoft/vscode/issues/498  I like your solution @felixfbecker, pulling out `""editor.insertSpaces"": ""auto""` into its own config value and allowing specification of fallbacks.  RE: Editor config, there is currently an [extension in the marketplace](https://marketplace.visualstudio.com/items/chrisdias.vscodeEditorConfig). It's not fully compatible with `.editorconfig` files yet I believe due to API limitations, but it does do tab style and size."
5335|"When I select _File_ | _Preferences_ | _User Settings_, type `""window.openFilesInNewWindow"": true` and press `Ctrl+Space` it'll show a tooltip ""`true`: Default value"".  However, on Windows 10.0.10586.36 in Code 0.10.6, typing `code .` in a folder will do nothing whatsoever. It won't even reactivate (focus) the current instance. I'm not sure when this behavior was introduced. Previously code would happily open multiple instances without any configuration.  The setting `""window.openInNewWindow""` mentioned above also doesn't seem to exist, but would be a better name for the setting. I don't want to only open files in a new window. `code .` should open the current folder regardless of how many instances of code are already open or whether they have folders or individual files open.  In addition, `code --help` nor `code -n .` won't do anything while an instance of code is already open. `code --help` will not show help but reopen code with the folder that was open before closing it, if no instance of code is open. `code -n .` will not open the current folder, but open code with a blank file `Untitled-1`, if no instance of code is open. Right clicking a folder and selecting _Open with Code_ will correctly open that folder regardless of whether an instance of code is open or not.  Combined, this means I cannot open more than one instance of code except through File Exporer and I cannot use code from the command prompt in a meaningful way which I used to do a lot.  Could this be an upgrade issue?  ``` C:\> where code C:\Program Files (x86)\Microsoft VS Code\bin\code.cmd C:\Program Files (x86)\Microsoft VS Code\bin\code.js  C:\> ""\Program Files (x86)\Microsoft VS Code\code.exe"" . C:\> REM Code opens the C:\ folder correctly. It'll show the prompt again, but have a newline after it which is weird. I can type however.  C:\> PATH  (...);C:\Program Files\nodejs\;C:\Program Files (x86)\Microsoft VS Code\bin;(...) ```  code.cmd is:  ``` @echo off setlocal set ATOM_SHELL_INTERNAL_RUN_AS_NODE=1 ""%~dp0..\\Code.exe"" ""%~dp0code.js"" %* endlocal ```  code.js is:  ``` delete process.env['ATOM_SHELL_INTERNAL_RUN_AS_NODE']; require('child_process').spawn(require('path').resolve(__dirname, '..', 'Code.exe'), process.argv.slice(2), { detached: true, stdio: 'ignore' }); process.exit(0); ```  `HKEY_CLASSES_ROOT\VSCode\shell\open\command\(Default)` is: `""C:\Program Files (x86)\Microsoft VS Code\Code.exe"" ""%1""`"
5336|"@rscharnetzki I have working debugging of electron 0.36.0 and VSCode 0.10.6. My launch.json is  ``` javascript {     ""name"": ""Run App"",     ""type"": ""node"",     ""program"": ""./build/background.js"",     ""stopOnEntry"": false,     ""args"": [],     ""cwd"": ""."",     ""runtimeExecutable"": ""./node_modules/electron-prebuilt/dist/electron.exe"",     ""runtimeArgs"": [],     ""env"": {         ""NODE_ENV"": ""development""     },     ""sourceMaps"": false,     ""outDir"": null } ```  File `background.js` is file where i create ""main process"" Main window. This will allow me to debug ""Main process"". BUT does not work for ""renderer process"". I dont know how to configure it (or if its possible) to be able to debug also ""renderer process""."
5337|Damn. @Bigous, that was exactly it... many thanks for finding that.  This is a very unfortunate happening, apologies! Fix is pushed and will be in your machines with the next release.  Until then here's a nifty workaround: 1. Launch Code in Administrator mode. 2. In Code, open the `C:\Program Files (x86)\Microsoft VS Code\resources\app\out\vs\workbench\electron-main\sharedProcessMain.js` file. 3. In Code's status bar, click the **Line and Column indicator** and type `8:15531` to go to the fix's location in the file. 4. Change `.host,` to `.hostname,` as in the screenshot below. 5. Save and restart Code.  ![image](https://cloud.githubusercontent.com/assets/22350/12094696/4e595522-b30a-11e5-999d-e15f4ab4b636.png)
5338|@felixfbecker <kbd>ctrl</kbd>+<kbd>[</kbd> and <kbd>ctrl</kbd>+<kbd>]</kbd> are for indenting/de-indenting regardless of cursor position.
5339|@ericwj  The setting to force reopen files in new windows or not is called `window.openFilesInNewWindow` and was renamed because it only impacts files and not folders.  From the command line you can use `-r` to force reuse the last instance or `-n` to force opening a new instance for whatever files or folders you pass in.  Could it be that in your case a window is already opened on a specific folder you try to open and it just is not focussed? There is another issue on Windows 10 where Code is not able to order a window from the background to the foreground, which might be related.  To make sure things work properly: - close all code instances - cd into your home directory and run `code .` - cd into a folder inside the home directory and run `code .`  You should find 2 instances of code running.
5340|The `.editorconfig` extension is not currently compatible with `editor.insertSpaces: auto`.  See https://github.com/Microsoft/vscode-editorconfig/issues/12
5341|Assume I'm in `C:\Program Files (x86)\Microsoft VS Code` so `.` is that folder for this comment.  Sure I tried with a folder that wasn't open already. I updated my comment while investigating, please reread. I'm convinced there is an issue with the opening of code through the command prompt. It points to .\bin\code.cmd which starts .\code.exe with .\bin\code.js as the first argument, which starts .\code.exe. That's too many steps to just do .\code.exe %\* which is what the registry sais should happen. If I edit code.cmd to do just that, all is fine.  So I suspect perhaps code.cmd and/or code.js were left from a previous install as is the path with points to .\bin not . and their contents break all command line switches, at least --help and -n don't do anything whatsoever as I confirmed.
5342|@joaomoreno awesome!
5343|Although running code.exe --help doesn't do anything still apart from showing a new prompt with a newline after it.  code.exe -n . works but also shows a newline after the prompt that appears (cursor is at an empty line at the left window border after) and correctly focuses the same window and brings it to the front when done twice.
5344|@joaomoreno Not sure if it's long path. Since 0.10.5 we don't ship `csharp-o` but `jrieken.vscode-omnisharp`
5345|"Sure thing! Here's a .zip of my test workspace. It just contains a basic test.cpp file and the tasks.json file, although the .cpp file probably doesn't matter at all. `showOutput` is set to ""always"".  [test_workspace.zip](https://github.com/Microsoft/vscode/files/77478/test_workspace.zip)  The tasks.json file tries to invoke the g+ command rather than g++, so it will result in an error. If the output tab is closed, and you run the build command (I'm doing it through CTRL+SHIFT+B), it will most frequently open up without any output in it. If the tab is already open, however, and you run the build command, it'll print the error output every time.  I haven't noticed this really at all for commands that take longer to display output (e.g. prints inside a running program, where the output window has already been open for a bit before the print takes place), so my best guess is that the ""command not found"" error output is printed too quickly, maybe before the output tab has a chance to fully initialize itself, so it misses that output."
5346|Does the tread id need to be unique at any given moment or for the whole lifetime of the process? In other words, if a thread id=3 exits, and then a new thread is started, can the new thread's id be 3?
5347|Yep. The installer failed to remove the `csharp-o` folder due to the long path and the latest Code complains about having a folder in there without a `package.json` file.
5348|"@ericwj not sure why you refer to ""--help"", we do not support such an argument!  If you suspect a bad install, maybe try reinstalling from scratch after uninstall. I do not think we changed the code.cmd/code.js recently though."
5349|"Btw be careful with ""code.exe"" within the directory of installation, that one might be the code.exe from the installation which is not the same code.cmd we put on the path. hence my comment about PLEASE try it from the home dir."
5350|@wuchuguang We are still working on the extension. You can sign up for updates here - http://taco.tools/vscode/rn.html.  We are targeting an alpha by end of Feb, if everything works as expected.
5351|@isidorn I'm pretty sure I'm giving 100% unique thread IDs, I just increment a counter for each new thread. I will look into it again.
5352|@Tyriar I don't have an american keyboard. Indenting is set to <kbd>ctrl</kbd>+<kbd>`</kbd>, which sucks because I have to take my right hand of my mouse for that because the keys are so far away. <kbd>shift</kbd>+<kbd>tab</kbd> is much better. I can't find deindenting at all in the command palette.
5353|:+1:
5354|@isidorn here are the ~~full~~ logs of a debug session where I trigger 2 threads and then continue one of them until it exits (btw, this is hard to get because you cannot do <kbd>Ctrl</kbd>+<kbd>A</kbd> in the debug console): https://gist.github.com/felixfbecker/378a13c6306a4ed145cc - In [line 111](https://gist.github.com/felixfbecker/378a13c6306a4ed145cc#file-threads_debug-txt-L111) I notify Code with Thread 1. - In [line 201](https://gist.github.com/felixfbecker/378a13c6306a4ed145cc#file-threads_debug-txt-L201) I notify Code with Thread 2 (in the following ThreadResponse you can clearly see they have unique IDs) - ~~In [line 425](https://gist.github.com/felixfbecker/378a13c6306a4ed145cc#file-threads_debug-txt-L425) I notify Code that Thread 1 has exited. _And directly after that, VS Code requests a stack frame for the thread that doesn't even exist anymore._~~  and of course, UI doesn't update at all besides the empty stack trace that I sent it. ![image](https://cloud.githubusercontent.com/assets/10532611/12098004/86520fea-b31f-11e5-9b7d-1247a9c45237.png)  ---  **EDIT: I have to apologize, the posted log does not contain the ThreadEvent. See [below](https://github.com/Microsoft/vscode/issues/1703#issuecomment-193858366) for a better example.**
5355|isn't better to run `open -a Terminal.app {path}` instead of using apple script and run `cd {path}; clear`? iTerm also supports this too
5356|@ElliotChong solution works fine!
5357|I'm using VSCode 0.10.6 (newest version) and I still have this problem.
5358|You could always rebind the `editor.action.outdentLines` command to <kbd>shift</kbd>+<kbd>tab</kbd> though to maintain that behavior, then allow it to function as I described by default because it's how it behaves in pretty much all other text editors (that I'm aware).
5359|Is there a way to change these settings at runtime and have it override every running instance of code?
5360|"Here. Just tried this on OS X, right after installing.  <img width=""1023"" alt=""code no tasks"" src=""https://cloud.githubusercontent.com/assets/668933/12100205/1d8567b8-b2f3-11e5-87c5-e5a07bdb11fa.png"">"
5361|I typed  code .  command from terminal inside a test folder. And I get that message.
5362|@spongessuck which protocol does your git server use? Can you show me its URL? Can you create an account on it for me to validate your claim?
5363|@paulomorgado unfortunately there isn't. Contributions are more than welcome though!
5364|@gregvanl can you take a look?
5365|@joaomoreno It's using HTTP- it's an ASP.NET app running on IIS. You can find the software page here:  https://bonobogitserver.com/  Sorry, the server isn't accessible outside of our domain.  I'm accessing it via LAN. A typical git repo URL looks like:  ``` http://timeweb/git/<repo>.git ```
5366|Here is what I get in my case: ![vs_code](https://cloud.githubusercontent.com/assets/16511061/12100980/0d4dcac8-b33b-11e5-8d6d-20550c76129a.png)
5367|Fixed in vscode-docs repo commit https://github.com/Microsoft/vscode-docs/commit/a0091326a57d770f032dd8210f5de9078136d868
5368|Just out of curiosity, how often do you actually save a file to a different filename other than the initial save of an untitled file?  I do this exceedingly rarely.    It would be cool if the VSCode team was getting telemetry info on what features, such as shortcuts, were being used and how often.
5369|It may well be a subtle memory leak, made apparent by the relatively high memory utilisation on this system.  I left the computer at about 5:30 PM, with system memory commit slowly creeping up - it was 15,402 MB at 7:00 PM. At 3:09 AM was the closest approach to the system commit limit (17,682 MB), and commit usage dropped from 16,218 MB to 15,217 MB. I suspect this might be where VSCode crashed. Commit usage was stable around there until logging stopped around 6 AM (out of disk space - those performance counters are big!).  Unfortunately I did not include all the VSCode processes so I do not have process-specific logging. I will try that tonight.  Would be very useful if I could get the time of crash. Does VSCode leave logs anywhere?
5370|Not that often, but when I do I expect it to be there as it's a pretty standard. Atom and Sublime both feature this keybinding.
5371|Regarding `hint` having no underline indication by design, what is the intended use-case of then?  @jrieken I'll look into that, yes
5372|@dbaeumer Thanks for answer, I got it :)
5373|I would suggest/recommend that you list these items separately, so that they can evaluated/commented on separately.
5374|User@gmail.com
5375|This is also true for tasks defined in `gulpfile.js`:  ![can t run tasks 2](https://cloud.githubusercontent.com/assets/9283914/12104803/37fabe3e-b34f-11e5-9515-08ac012f99f1.gif) <br/> What's wrong here?
5376|"Still getting error saying ""unable to verify the first certificate "" for self-signed certificate, as [issue 155](https://github.com/Microsoft/vscode/issues/155) also reports.  ![20160105_vscode_unable_certificate](https://cloud.githubusercontent.com/assets/14846203/12105415/8d1ca4fa-b38f-11e5-80e9-31eccb1e9902.PNG)  **my vscode version is 0.10.6:** Version 0.10.6 Commit a80232bbcfe8a5cdad1ebc98638673d9dcb02458 Date 2015-12-19T11:34:58.895Z Shell 0.34.5 Renderer 45.0.2454.85 Node 4.1.1"
5377|NOK for me for 0.10.6, also reported in [issue 69 thread](https://github.com/Microsoft/vscode/issues/69#issuecomment-168864832)
5378|"I do have added `""http.proxyStrictSSL"":false` in my User Settings configuration, as below picture shows.  ![20160105_vscode_user_setting](https://cloud.githubusercontent.com/assets/14846203/12105548/cc12701c-b390-11e5-9928-58eeed452b9c.PNG)"
5379|Yes it does :smile:
5380|@bpasero LOL, like powershell.
5381|Don't see anything in Git panel. I'm on Mac 10.11. I'll post a screenshot tomorrow. Sorry was very busy today.
5382|"Great questions.   One possibility:  Show only the names while the user is typing, then when the user stops typing for a (specified delay period), make a decision about what to show.   That addresses the labels coming in and out of view.   What about having the Name as a tooltip, and it could only be a tooltip for items where the match was made on name.   That would be kind of like Google's ""Why am I seeing this ad?"" pattern.   — Sent from Mailbox  On Tue, Jan 5, 2016 at 1:59 AM, João Moreno notifications@github.com wrote:  > ## I don't really like that solution since it would make labels come in and out of the view as you type and poses the following questions: Where to show it? Do we replace the readable name with it? Do we append to it? >  > Reply to this email directly or view it on GitHub: > https://github.com/Microsoft/vscode/issues/1441#issuecomment-168715340"
5383|"@dbaeumer I tried many times in VSCode 0.10.5 and then update to 0.10.6, and finally I found how I produced this problem in both version. - **Workspace**     My workspace is very easy, the directory is   ``` ./HelloWorld   ./HelloWorld/.vscode   ./HelloWorld/.vscode/tasks.json   ./HelloWorld/HelloWorld.ts ```  and the codes in files are   `./HelloWorld/.vscode/tasks.json`    ``` json {     ""version"": ""0.1.0"",     ""command"": ""tsc"",     ""isShellCommand"": true,     ""showOutput"": ""silent"",     ""args"": [""HelloWorld.ts""],     ""problemMatcher"": ""$tsc"" } ```  `./HelloWorld/HelloWorld.ts`    ``` javascript class Startup {     public static main(): number {         console.logg('Hello World');         return 0;     } } ``` - **To produce the problem**     **case 1**: before compiler the **HelloWorld.ts** .     **case 2**: after compiler the **HelloWorld.ts**, simply pressing `Ctrl+Shift+B` (Run Build Task).    After some tries, I noticed that the VSCode showed me error message in **case 1**. I did not notice this before. The error message is **Property 'logg' does not exist on type 'Console'**. And I could click on this problem to navigate to **HelloWorld.ts**.  After I pressed `Ctrl+Shift+B`(**case 2**), another message came. That is **The property 'logg' does not exist on type 'Console'**. Please pay attention to these two message. They are different(the word **The**). I could not click on this problem to navigate to **HelloWorld.ts** and the error **Unable to open 'HelloWorld.ts': File not found (e:\SoftwareProgram\Test\javasrcipt\TypeScript\HelloWorld\E:\SoftwareProgram\Test\javasrcipt\TypeScript\HelloWorld\HelloWorld.ts).** came.   Sometimes VSCode showed me two error message, **Property 'logg' does not exist on type 'Console'** and **The property 'logg' does not exist on type 'Console'** in **case 2**. But sometimes just **The property 'logg' does not exist on type 'Console'**.   Since I failed to attach image, so I will reply the email to send some error message images."
5384|@dbaeumer Sorry, I found I can't reply the email directly. So if you need the image, please let me know.
5385|> Unfortunately I did not include all the VSCode processes so I do not have process-specific logging. I will try that tonight.  That would be super useful, thanks!  Currently vscode does not log to disk.
5386|@Elusive138 can you share the workspace you let vscode running on?
5387|My strong position against BOMs is company agnostic ;)
5388|@bpasero Unfortunately not. It is based on Ext JS, though, and that's where the majority of the (library) code is. I'll try a clean Ext JS workspace after this other testing is done, and see if it repros there.
5389|.
5390|@Elusive138 yes would be good to have a sample to reproduce on our end.
5391|CC @dbaeumer
5392|"I also still getting another error saying ""end of central directory record signature not found"" although I followed @joaomoreno's [instruction](https://github.com/Microsoft/vscode/issues/69#issuecomment-168728904).  ![vscode-extension-install-error](https://cloud.githubusercontent.com/assets/1075965/12110213/1868e2f2-b3cd-11e5-98d2-8fd626cb8332.png)  **my vscode version is 0.10.6:** Version 0.10.6 Commit [a80232bbcfe8a5cdad1ebc98638673d9dcb02458](https://github.com/Microsoft/vscode/commit/a80232bbcfe8a5cdad1ebc98638673d9dcb02458) Date 2015-12-19T11:34:58.895Z Shell 0.34.5 Renderer 45.0.2454.85 Node 4.1.1"
5393|@edwinyzh you can use [privoxy](http://www.privoxy.org/) to setup http proxy over sockets ones.
5394|It would allow you to hint to a code action provider what to propose
5395|This is duplicate of #132 I think also you should vote this: https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7752606-php-intellisense  PHP IntelliSense is required for symbol navigation (e.g. symbols, Go to definition, ...)
5396|How about a tooltip over every extension's readable name that would display its id? Would that help?
5397|Is this in your roadmap ? it would be good to add as im making extension for sync settings and only extension sync is remaining.
5398|@iamzhout Let's keep that issue's discussion in #155   @takuan-osho That error comes from the zip library. It downloads what it assumes to be the extensions zip package and tries to extract it. It seems to not have downloaded a zip archive at all, so your proxy must be returning something other than the correct bits. Any idea there?
5399|@iamzhout did you apply [this workaround](https://github.com/Microsoft/vscode/issues/69#issuecomment-168728904)?
5400|@vadimcn thread id needs to be unque at any given moment, not the whole lifetime @felixfbecker thanks for more details, I will look into it
