23401|These are not multiple instances of vscode, these are the processes that are used by the multi-process architecture. It makes more sense when you can see the command line args:  ``` daniel   29608  4.8  0.6 1413552 105908 ?      Ssl  13:19   0:00 /usr/share/code/code . daniel   29620  0.0  0.1 300956 29752 ?        S    13:19   0:00 /usr/share/code/code --type=zygote --no-sandbox daniel   29682  1.2  0.6 451596 107156 ?       Sl   13:19   0:00 /usr/share/code/code --type=gpu-process --channel=29608.0.1146655756 --no-sandbox --window-depth=24 --supports-dual-gpus=false --gpu-driver-bug-workarounds=3,26,34,37,54,64,66 --disable-accelerated-video-decode --gpu-vendor-id=0x10de --gpu-device-id=0x1187 --gpu-driver-vendor=NVIDIA --gpu-driver-version=361.42 --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd daniel   29726  1.3  0.3 923012 49200 ?        Sl   13:19   0:00 /usr/share/code/code /usr/share/code/resources/app/out/bootstrap --type=SharedProcess daniel   29733 13.5  0.9 1821776 154768 ?      Sl   13:19   0:01 /usr/share/code/code --type=renderer --no-sandbox --lang=en-US --node-integration=true --background-color=#1E1E1E --num-raster-threads=2 --content-image-texture-target=3553,3553,3553,3553,3553,3553,3553,3553,3553,3553,3553,3553,3553,3553 --video-image-texture-target=3553 --disable-accelerated-video-decode --channel=29608.1.401910487 --v8-natives-passed-by-fd --v8-snapshot-passed-by-fd daniel   29776 26.9  1.0 1046204 172156 ?      Sl   13:19   0:02 /usr/share/code/code /usr/share/code/resources/app/out/bootstrap --type=watcherService daniel   29777  2.4  0.3 947384 57548 ?        Sl   13:19   0:00 /usr/share/code/code /usr/share/code/resources/app/out/bootstrap --type=extensionHost daniel   29799  1.6  0.2 931208 47860 ?        Sl   13:19   0:00 /usr/share/code/code /usr/share/code/resources/app/out/bootstrap git /home/daniel/dev/Microsoft/vscode utf8 /usr/share/code/code ```
23402|The following gif demonstrates that, sometimes, autoclosing quotes doesn't work for PHP. I also noticed that it became less frequent, only 1 out of 10 times it fails. Yesterday was just the opposite...  ![out](https://cloud.githubusercontent.com/assets/654229/15620273/9cbe12d2-2459-11e6-8017-e9da82837298.gif)
23403|For other languages we find and present multiple definitions, why shouldn't we do this for CSS?  ![image](https://cloud.githubusercontent.com/assets/2193314/15620590/f5f8ebdc-240f-11e6-8b0c-86b23e6d2abd.png)
23404|I am  able to repro this with latest alpha build.   ![image](https://cloud.githubusercontent.com/assets/17735796/15620806/681c9258-2411-11e6-90d0-30952df37edb.png) ![image](https://cloud.githubusercontent.com/assets/17735796/15620831/896c08bc-2411-11e6-8494-fb877b02fb87.png)
23405|Duplicate of https://github.com/Microsoft/vscode/issues/6927
23406|Well `pty.js` is now `~600KB` in Windows... so `~12.4MB`.
23407|I approve :smile: :+1:
23408|When launching from the CLI, the correct env is already there. That could be one solution, but I also don't mind doing the proposed one there, since it might be better anyways just in itself.
23409|"@Tyriar It has failed a few times already, consistently. There are some errors near the top of the logs, but I'm not sure if they have anything to do with the build failure:  <img width=""960"" alt=""screen shot 2016-05-27 at 22 20 48"" src=""https://cloud.githubusercontent.com/assets/1757708/15621510/5d521df0-2459-11e6-9507-c2d9633d2100.png"">"
23410|I install Sublime Text because of this issue.
23411|@nwgh does the problem go away when you change the Exec line in `/usr/share/applications/code.desktop` to:  ``` Exec=/usr/share/code/code %U ```  Not sure if Gnome picks up on these changes immediately or if you need to nudge it somehow.
23412|I got the repro as well (also happens very occasionally), and the corresponding trace is as follows: [treacing_completion_entry_detail.txt](https://github.com/Microsoft/vscode/files/287358/treacing_completion_entry_detail.txt)  It seems that even in the repro cases, the `completionEntryDetails` request was still successful (only took 6~7 ms). So something else might have caused the issue?
23413|@Tyriar yes, that appears to fix the issue, as well.
23414|I think changing that may also fix #6593
23415|@nwgh I pushed https://github.com/Microsoft/vscode/commit/069e325d0b4701e6c21c3b2902885f77478a1823 to my branch that will be merged in for the June release, you'll be able to test it on the Insiders build in a week or so.
23416|Resolving this, our launch logic has changed significantly since this was created.
23417|Duplicate of https://github.com/Microsoft/vscode/issues/143, it's coming in the next stable release!
23418|I'm going to close this as a duplicate of #143
23419|This should be fixed as of the current stable release.
23420|Sorry for the late reply.  It'll be great if you can provide us Docs in Japanese.  Getting Started, Editor, Customization are very useful.  https://code.visualstudio.com/docs
23421|"[Next morning]  Sure.  Using good old DOS is the most direct way.  The following 5 lines of DOS code will:  1.  Create a file called ""MainFile.txt"" in the current directory 2.  Create two attached ADS files, ""FirstADSFile.txt"" and ""SecondADSFile.txt"" 3.  List the current directory ‚Äî the /r switch is what displays the otherwise hidden ADS files.  ---  Echo ""This is the main file"" > MainFile.txt Echo ""Some content for the first ADS file"" > MainFile.txt:FirstADSFile.txt Echo ""Some content for the second ADS file"" > MainFile.txt:SecondADSFile.txt Dir /r Pause  ---  So to reproduce the problem: 1. Run these five lines from a DOS batch file or in a DOS window (preferably working within a directory with few files in it), and you will see the two attached ADS files listed on separate lines under MainFile.txt. 2. Then open MainFile.txt with VSCode, make a small change to the text, and save it. 3. Then run just the last two lines of the DOS code above, and the Dir /r command will now show that the two ADS files have been removed. I want to prevent that removal."
23422|**Edit** I take my request back. Really this is my fault for not reading the entirety of the settings document. I'm more upset with myself for experiencing this exact issue for weeks and not thinking it had anything to do with another setting. :) Thanks for clearing up my issue though.
23423|Sorry about the delay in a response, the only information available on the architecture is captured in the wiki https://github.com/Microsoft/vscode/wiki/Code-Organization
23424|I play on writing up on packaging in vscode in June, closing in favor of https://github.com/Microsoft/vscode/issues/6893
23425|Seems fixed now  ![image](https://cloud.githubusercontent.com/assets/2193314/15624365/14334f18-243b-11e6-8441-29331bf15baa.png)
23426|@aeschli I'm interested in the thinking behind moving away from our own tokenization in favor of tmLanguages.
23427|Related: https://github.com/Microsoft/vscode/issues/3360
23428|I believe this has since been implemented, cc @alexandrudima
23429|@kieferrm I believe you came across this recently, can this issue be closed?
23430|@alexandrudima has there been any update on this since November?
23431|I believe this is a duplicate of https://github.com/Microsoft/vscode/issues/1690
23432|Basic version of this is now in the editor, more sorting options are available in my extension https://marketplace.visualstudio.com/items/Tyriar.sort-lines
23433|Closing in favor of https://github.com/Microsoft/vscode/issues/76
23434|@joaomoreno did you have any specific plans on resolving this, like detecting the default GitHub for Windows path or something? Isn't it reasonable to assume git is on the `PATH`? If git is missing is the error we present good enough for most people to do it on their own?
23435|@bpasero would we accept a change for this? I tend to agree with the polluting the command palette argument. The menu is already reasonably accessible via <kbd>alt</kbd>+<kbd>h</kbd>.
23436|@aeschli -- handling HTTP proxies correctly also means checking the VS Code setting for proxies. Shouldn't that be transparent for extensions so they don't get it wrong?
23437|@joaomoreno -- that's not acceptable for a number of reasons: 1. It's more than three platforms. For Linux, we support RHEL, CentOs, Debian and Ubuntu. Each are different payloads. 2. I've packaged the native binaries for a _single_ platform and it's 40 MB. While there's a bit of sharing that will get that down somewhat, bundling all in one is far from ideal. We're talking about 6 different debugger and language service payloads in a single extension.
23438|@joaomoreno -- one other thing to consider is that there isn't any progress shown in VS Code while an extension is downloaded. So, if extensions don't stay reasonable small, the user can have a confusing experience where VS Code looks it isn't doing any work for a long while.
23439|I'm using Windows 10, and I get same error.  How to fix this?
23440|@nhymxu which version of code?
23441|No it isn't, they were asking for a project level find and replace, I am asking find and replace on all open files @Tyriar   apologies for being vague üëç
23442|@bpasero v1.1.1 Lastest version download from homepage.
23443|@nhymxu can you attach a video how this looks like? is this standard windows 10 or insiders?
23444|Returning to source in the markdown preview is related to this issue #6941  There is no way to detect a virtual document with focus when a command is triggered.
23445|@bpasero  After double click to window title. VS Code change to full screen size, and auto resize to normal size, move window to top left.  I'm using standard Windows 10 v1511 build 10586.218 Not install KB3156421 because auto rollback this update.  [Demo Video](https://www.youtube.com/watch?v=U1r-pUHR1F4)
23446|@Tyriar I am not so sure about where to put this issue...
23447|Thanks, I would think this is rather an issue with Electron (our UI framework) than Code.
23448|![editors](https://cloud.githubusercontent.com/assets/900690/15627410/6545b0aa-24e3-11e6-9c5d-f248c43e65c4.gif)  Since this works fine for me on Windows 10 and seems to work fine for most Windows 10 users, I am asking for more info on your system what this could be and if maybe other apps show the same issue.
23449|Ok, so it is an upstream issue then.
23450|I try install Atom and get same error.  I think my computer error with electron.
23451|"After try run VS code with ""Run as admin"". Everything is fine!"
23452|@jrieken, I still don't quite understand what is and how to get the context of a previewed document, could you please give me an example or more details? And I want to say it again that what I want is allow user to Ctrl+C of the previewed document. Thanks in advance
23453|By analyzing the blame information on this pull request, we identified @alexandrudima and @egamma to be potential reviewers
23454|Hi **@kisstkondoros**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
23455|You can toggle between case-sensitive and case-insensitive using `Alt+C`
23456|By analyzing the blame information on this pull request, we identified @Tyriar to be a potential reviewer
23457|Hi **@kisstkondoros**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
23458|By analyzing the blame information on this pull request, we identified @bpasero and @egamma to be potential reviewers
23459|Hi **@kisstkondoros**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
23460|By analyzing the blame information on this pull request, we identified @Tyriar to be a potential reviewer
23461|Hi **@kisstkondoros**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
23462|![vcupdate](https://cloud.githubusercontent.com/assets/339101/15629810/4a77ec14-24e0-11e6-8dff-7a36882749ec.png)
23463|Ah understood.
23464|This issue was moved to Microsoft/vscppsamples#58
23465|Unfortunately the custom colors stuff was removed from settings as we're determining whether it should be part of the UI themes. See https://github.com/Microsoft/vscode/issues/6766 and https://github.com/Microsoft/vscode/issues/6979 for more context. So I'm going to close this sorry.
23466|Closing in favor of https://github.com/Microsoft/vscode/issues/6979
23467|Yes the `Aa` icon controls the regex case sensitivity flag.
23468|@joaomoreno I've actually seen this a lot on Linux alpha, I thought it was something to do with the alpha or assumed non-master builds were getting checked.
23469|Thanks very much, bpasero, for handling this issue and confirming it.  I'll keep a watch on the updates as they come out, and report back.
23470|@groone Thanks! This worked for me as well.
23471|Thank you for the help. As I use emmet snippet expansion quite heavily (More than once I've built a 30+ char snippet :)), I'll deal with the one time hit.  > or an indeterminate amount of time has passed  I played around a bit, and it would seem that it only happens either on first use in a new instance of `code`, or after leaving an open instance run idle for a while (I leave my machine on overnight most nights). @egamma are the modules cached in any way?
23472|Am i wrong ? Latest VS Code version is 1.1.1 - Win 10
23473|The current API OnEnterRule and IndentationRule are too simple for language like C++ and C#. They need to go back multiple lines to decide the right indentation, but the API can only support one line lookback. And it does not support bracket alignment indent.
23474|ya +1
23475|@aaskat Thanks for the video and the zipped project. But after trying for more than hour I was not able to reproduce the problem. Since nobody else has reported this or a similar problem, I'm running out of ideas how to help you.  But a few days ago you said that you want to contribute to VS Code and fix some bugs. This problem would be a good opportunity! You could help us (and yourself ;-) by doing the following: - find a minimal reproducible case and write down clear steps so that everyone can reproduce it. Your videos are somewhat OK but they don't include precise steps, e.g.:   - I don't know how you've started the debug session,   - you have turned off auto-save. Can you reproduce the problem with auto-save turned on?   - when you launch the debug session, both app.js and repo.js are dirty. Does the problem occur when they are not dirty or when only one of them is dirty. - verify that the problem exists on a different system. This would rule out that something very specific is broken on your system. In similar cases where only a single user saw a problem, it was almost ever a problem with the underlying system, or a broken installation and not a problem with VS Code itself. - try to identify the underlying problem in VS Code. - fix the problem - create a pull request.  /cc @isidorn
23476|By analyzing the blame information on this pull request, we identified @dbaeumer and @egamma to be potential reviewers
23477|@Tyriar The mentioned measurement method seems to work quite well, of course after https://github.com/Microsoft/vscode/pull/6985/commits/3fde03980baf7d33d14c36dce623ad1c89470d93 it will need some adjustments.
23478|@kisstkondoros Awesome! :+1:
23479|@ugurozturk you are indeed, the latest is 1.1.1 (def9e32). I'm curious if @joaomoreno has comments on me seeing the update message on the Linux alpha build though.
23480|+1
23481|@alexandrudima Thanks for the reminder, I added an entry to the release notes
23482|"Thanks you for @equinusocio . From your totural, i have an some modify in file workbench.main.js and workbench.main.css for my web project.  First, open file workbench.main.js, find string `text-file-icon`, and we will see an function :   ``` javascript t.prototype.iconClass=function(e){return e.isDirectory?""folder-icon"":""text-file-icon""} ```   and we need modify it  to return and class name for each file type. Here is my modify :   ``` javascript t.prototype.iconClass=function(e){     if (e.isDirectory)         return 'folder-icon';     var type = e.substring(e.lastIndexOf('.') + 1).toLowerCase();     switch (type) {         case 'js':         case 'jsx':         case 'css':         case 'scss':         case 'md':         case 'json':         case 'html':         case 'htm':             return type + '-file-icon';         default:             return 'text-file-icon';     } } ```  Then we just add some line css in file workbench.main.css and download some icon ...  Here is my screenshort :  ![capture](https://cloud.githubusercontent.com/assets/8221386/15635721/ef53e3d8-2610-11e6-8ced-e6ef23920b5a.PNG)"
23483|Verified
23484|Happens for me - VSCode Version: 1.1.1   OS Version: 10.11.5  Steps to reproduce 1. Copy some text to clipboard in some other application 2. Verify it pastes correctly 3. Select a file in VST, select All (Command + A), select Copy (Command + C) 4. In another file in VSC do paste (Command + P)  5. Text from previous copy action will paste instead of text selected and copied in VSC. 6. If instead of doing Command+A to select all, you explicitly drag across the text and copy, then paste will work.  7. Select all plus copy doesn't work
23485|"Let me elaborate. This isn't just a problem with 20 folders each with 20 `node_modules`. It's a problem with ONE project with a single `node_modules`.  Imagine a structure like this:  ``` MyProject |_ ts     |_ app        |_ app.component.ts        |_ main.ts     |_ node_modules ...     |_ typings ...     |_ index.html     |_ tsconfig.json     |_ ... |_ e2e.spec.ts ```  Observe that the `e2e.spec.ts` is a sibling of `ts`, _above_ the `tsconfig.json`.  ``` MyProject |_ ts ... |_ e2e.spec.ts ```  When I open `main.ts`, intellisense is almost immediate.  When I open `e2e.spec.ts`, intellisense is frozen while VS Code reports `Loading...`. The processor pegs, the fan blows, and there is **no intellisense _anywhere_** in this project ... including back in `main.ts` where it was working mere moments ago. Minutes pass.  I give up, return to the `app` folder, reload VS Code, and intellisense returns.  ### Why the funny spec location?  You may ask   > _Why is `e2e.spec.ts` a sibling of `ts` instead of inside `ts`?_  The word `ts` is your clue: it stands for _TypeScript_ and, in fact there other versions of the app written in other languages (e.g, `es6`, `js`). The end-to-end spec is one suite of tests that applies to all.  FWIW, I tried adding a `tsconfig.json` that exclude `node_modules_ at the same level as the`e2e.spect.ts`.  It didn't help.  This arrangement is obviously exotic and rare. Why worry yourself?  Perhaps others will have some reason to put a file at a level above `node_modules` and suffer a similar fate albeit from a different cause.  Surely we can find a solution that isn't the VS Code equivalent of the infamous Steve Jobs answer: _You're holding it wrong._"
23486|@zersiax I suggest you give our next release a try and see if #6908 improved this.
23487|Updated the description. Also https://github.com/Microsoft/vscode/issues/930 is related/duplicate.
23488|Thanks I am able to reproduce with just node.js so this is indeed an upstream issue it seems.
23489|Any news for files.encoding in extention API or by fileext ? On my project 3 different encodings in over 1000 files.  And reopen the file each time - just killing me... Please schedule this feature..;(
23490|@sarbbottam would https://github.com/Microsoft/vscode/issues/5554 help you? are you mainly using Cmd+P?
23491|I am closing this, we choose consistent behaviour over too much smartness.
23492|"@isidorn @joaomoreno I had another idea how to solve this: what if the tree actually adjusts the scrolling position when it is being pushed down by the animation from the ""Opened Editors"" view? We could keep all the animation and smooth transition if the element under the mouse pointer stays exactly at the same position. Might be as easy as restoring the scroll position right after opening the editor from the mouse-down click in the explorer."
23493|@bpasero sounds interesting, I guess, I mainly use ‚åòP, to open a file. However I still believe, a setting would be helpful, [as suggested by you](https://github.com/Microsoft/vscode/issues/5554#issuecomment-222059647).  > Probably will be a setting that is disabled by default.   I don't think, one should/could decide if the file should be added, to the working files, depending on how it was opened. Rather a setting should drive the decision and it should be agnostic to how file is opened.
23494|@sarbbottam yeah I would not want to introduce 2 settings for this, ideally it can be combined into one.
23495|@csholmq would you want to still have preview editors when using the explorer? https://github.com/Microsoft/vscode/issues/2754 asks for having a way to open each file as pinned editor and I wonder if we should have just one setting that does this regardless from where you open a file?
23496|I know @bpasero once got those errors to show up.
23497|By analyzing the blame information on this pull request, we identified @egamma and @joaomoreno to be potential reviewers
23498|Awesome, then I'll not do anything here. üëç
23499|[We do search for it in a few places](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/git/electron-browser/electronGitService.ts#L94) aside from relying on the `PATH`, just need to complement it. Let's do it.
23500|@kisstkondoros thanks üëç
