29301|"No, that's not the case. Installer doesn't just add Code as an extra entry in windows explorer's `rightclick|Open with` menu for these file extensions: ![2016-07-04_183804](https://cloud.githubusercontent.com/assets/723651/16578936/ebfd06e0-42a5-11e6-99c5-9b4bc54a1b1a.png)  I created various empty files with random extensions from my [screenshot 1](https://i.imgur.com/ntouoyZ.jpg)  and all are associated with Code : ![2016-07-04_184313](https://cloud.githubusercontent.com/assets/723651/16578947/f906281c-42a5-11e6-80a7-d7dabfe05650.png) In other words, doubleclicking any of these files, opens them in Code."
29302|Very hard to achieve nowadays. There are many references to node modules by now.
29303|build successful, but can not run `./scripts/code.sh` @joaomoreno
29304|Wait - what has node_modules got to do with this ? I was wanting to show the UI in a browser, not run the application in a browser ;) The application would be running in the docker container on the server, with all the access to node_modules that it needs.
29305|Duplicate of #3465
29306|@joaomoreno you are almost right man. @hzmnet his problem is getting error if the href targetting out of the workspace folder.  PS: @hzmnet 个人认为：提issue还是用英文吧兄弟 而且你这个description也太草率了吧
29307|In Windows, the entire `extensions` folder is wiped out. Not sure about OS X or Linux. A good way to make sure you'd be OK would be to scope the downloaded files into a folder named with the Code version.
29308|This is no longer the case. Hence closing this.
29309|Closing this as this will be fixed with #8515
29310|@jrieken Can you provide some guidance here?
29311|![image](https://cloud.githubusercontent.com/assets/3591899/16579530/ade33a8c-42d2-11e6-8ef8-ea40e7667efa.png) BTW: @Tyriar do you think the English is vertically centered? - VSCode Version: Code - Insiders 1.3.0-insider (Commit 0c5f6e8867fb117b6fa41cc647dc650bb9856dc4 Date 2016-07-04T09:47:29.290Z) - OS Version: Windows10 10586.420
29312|@dbaeumer Is there already a feature request for this?
29313|@joaomoreno hm, my understanding is that people are frustrated when suddenly they DND a folder in the explorer from one location to another. I do not think people want to disable being able to drop from outside the explorer into the explorer (e.g. from desktop to import the file).   Also, if the problem is about dropping to the wrong location, disabling DND is not an option. For that we need the confirmation dialog (https://github.com/Microsoft/vscode/issues/1414). I am not sure we can solve all the issues with one fix.
29314|cc @bpasero @stevencl @bgashler1
29315|Marking this as a feature request for problems view to show multi line descriptions
29316|"Some ideas - We change `notIn: string[]` to `notIn: ('string' | 'comment')[]` to be more _strict_ and to not allow stuff like `string.php` - We acknowledge that we only use this for preventing auto close in `string` and `comment` tokens and just hardcode that in the editor"
29317|A lot of the UI code has dependencies not only on the DOM but also on native functionality, only available in node, which would make it impossible to run in a browser. Take [`shell.ts`](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-browser/shell.ts#L71) as an example.
29318|@rebornix I followed https://manual.macromates.com/en/appendix while implementing it.   I think I got wrong the semantics of `decreaseIndentPattern` (it should probably decrease the current line too).  The implementation is at https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/modes/supports/onEnter.ts#L128  To support decreasing the current line indent, the `EnterAction` must be extended with an additional type of `IndentAction`, a new one maybe called `OutdentInclusive` or something and it must be adopted everywhere where `EnterAction` is interpreted.
29319|Looks like we fail to strip some ANSI codes?
29320|@bpasero What is the impact after your change?
29321|Yes, but did you have **any other** application that was able to open those files before you installed Code? It makes sense that Windows picked Code to be the default if Code is the only one.
29322|A number of days has past without answer on the questions asked. I am thereby going to close this issue to clean up our backlog of issues. Once you can answer on the questions, the issue can be reopened again. Thanks for understanding this process!
29323|OK. So what error do you get when running that?
29324|Sorry, not using this anymore from within Code. Got so used to my terminal outside :-/
29325|Dup of #571?
29326|:+1: on implementing this in the core. Sounds like something the [ViewModel](https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/viewModel/viewModelImpl.ts) should do -- it has the ability to transform view <-> model positions and randomly insert/remove text, etc.  > Note: it is not trivial
29327|@Luncher you have to install the chrome debug extension:  https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome if you want to use that launch config.
29328|:+1: IMHO #7181 addresses this.
29329|Well as long as we do not support ANSI colors we need to ensure they are all removed from the output. In the screen shot it looks like they are still in.
29330|We can delete it
29331|Given all the user frustration, I pushed a change to introduce `explorer.enableDragAndDrop` until we have figured out a better solution (https://github.com/Microsoft/vscode/issues/6486 and https://github.com/Microsoft/vscode/issues/1414)  **Verifier**: please verify that with this setting enabled, DND in the explorer is completely turned off. This works without a restart of course.
29332|Fyi for July (or insiders) https://github.com/Microsoft/vscode/issues/4842 is pushed and allows to disable DND in the explorer.
29333|Fyi for July (or insiders) https://github.com/Microsoft/vscode/issues/4842 is pushed and allows to disable DND in the explorer.
29334|Change looks good, works in `scripts/code.sh`. I will verify with the build
29335|This issue was moved to OmniSharp/omnisharp-vscode#527
29336|Deleted in a485c3a65a7954a83f6ad652931c634f93a5a5af
29337|Closing since we managed to workaround this using an opacity trick
29338|Closing this as a dupe of #4795 which is also about improving/redoing word selection.
29339|@rozzzly, @TobiaszCudnik  Since I am not as familiar with the optimal solution can you guys help out with 'how it should work?'. I guess, selector word, line?, bracket/paran-block? ...
29340|_(sorry, accidentally closed the issue)_  I noticed two cases: - The `.js` files would open with `Microsoft Windows Based Script Host` (a windows component, it's by default).   After installing Code they become assosiated with Code. - On the other hand, `.sh` files would open with `Git for Windows`.     After installing Code they remain associated with Git.
29341|I like the way it's implemented in https://atom.io/packages/expand-region or at Jetbrain's products like Webstorm
29342|Let's do something: I'll disable automatic git operations while Code is not in the foreground.
29343|Got it, thanks for the info! I will attempt to reproduce on a brand new Windows box, see what we can do.
29344|"@Luncher, @joaomoreno, I think I know what's going on. Same problem on Windows with Node.js version 6. Both users have a Node.js version 6.  Please try the following instructions: 1. Install Node.js version **5.11.1** or **5.12.0** 2. Remove `node_modules` directory in the directory VS Code 3. Run `./scripts/npm.sh install --arch=x64` and wait 4. Run `/scripts/code.sh`  On windows:  <details>   <summary>  First run installation command</summary>    ``` shell $ if not defined npm_config_node_gyp (node ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\bin\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js"" rebuild )  else (node """" rebuild ) Traceback (most recent call last):   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\gyp_main.py"", line 16, in <module>     sys.exit(gyp.script_main())   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 545, in script_main     return main(sys.argv[1:])   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 538, in main     return gyp_main(args)   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\__init__.py"", line 523, in gyp_main     generator.GenerateOutput(flat_list, targets, data, params)   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\generator\msvs.py"", line 2003, in GenerateOutput     sln_projects, project_objects, flat=msvs_version.FlatSolution())   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\generator\msvs.py"", line 1762, in _GatherSolutionFolders     return _DictsToFolders('', root, flat)   File ""C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\gyp\pylib\gyp\generator\msvs.py"", line 1715, in _DictsToFolders     for folder, contents in bucket.iteritems(): AttributeError: 'MSVSProject' object has no attribute 'iteritems' gyp ERR! configure error gyp ERR! stack Error: `gyp` failed with exit code: 1 gyp ERR! stack     at ChildProcess.onCpExit (C:\Users\Denis\AppData\Roaming\nvm\v6.2.1\node_modules\npm\node_modules\node-gyp\lib\configure.js:305:16) gyp ERR! stack     at emitTwo (events.js:106:13) gyp ERR! stack     at ChildProcess.emit (events.js:191:7) gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:204:12) gyp ERR! System Windows_NT 10.0.10586 gyp ERR! command ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v6.2.1\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js"" ""rebuild"" gyp ERR! cwd C:\projects\vs-t\node_modules\fsevents gyp ERR! node -v v6.2.1 gyp ERR! node-gyp -v v3.3.1 gyp ERR! not ok code-oss-dev@1.4.0 C:\projects\vs-t +-- ansi-regex@2.0.0 +-- applicationinsights@0.15.6  ...  npm WARN optional Skipping failed optional dependency /gulp-watch/chokidar/fsevents: npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.0.12 npm ERR! Windows_NT 10.0.10586 npm ERR! argv ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js"" ""install"" npm ERR! node v6.2.1 npm ERR! npm  v3.9.3 npm ERR! code ELIFECYCLE  npm ERR! fsevents@0.3.8 install: `node-gyp rebuild` npm ERR! Exit status 1 npm ERR! npm ERR! Failed at the fsevents@0.3.8 install script 'node-gyp rebuild'. npm ERR! Make sure you have the latest version of node.js and npm installed. npm ERR! If you do, this is most likely a problem with the fsevents package, npm ERR! not with npm itself. npm ERR! Tell the author that this fails on your system: npm ERR!     node-gyp rebuild npm ERR! You can get information on how to open an issue for this project with: npm ERR!     npm bugs fsevents npm ERR! Or if that isn't available, you can get their info via: npm ERR!     npm owner ls fsevents npm ERR! There is likely additional logging output above.  npm ERR! Please include the following file with any support request: npm ERR!     C:\projects\vs-t\npm-debug.log ```  </details>"
29345|No, that's not it.  @Luncher please don't add `--arch=x64` to `npm install` and try again.
29346|I agree with @bpasero on above comment. But just showing one action might not look good. Showing Open specific actions makes sense to me.  Also, I think providing a context menu here might open up following questions: - Expected to have the same in Problems view or other views where we have similar UI ? - Expected to be consistent across views, similar context menus? - Support for externally contributed context actions? If Markdown file is part of the result, then we might need preview action?
29347|We decided to not to have this action in input boxes.
29348|Done reviewing my issues. I could process all of them it as per points mentioned in tracking.
29349|Yes, whatever we do in search it should be contributable using the new menu extensions.
29350|Yes, it is a configuration on the vscode side. To get the behavior you would like you can add to your launch.json configuration: `'internalConsoleOptions': 'openOnSessionStart'` More details can be found here: https://github.com/Microsoft/vscode/issues/6159
29351|I suggest we bring this up in tomorrow's ux sync.
29352|"Hi, I tried with vscode insiders downloaded this morning, but I obtain the following error message: Unable to parse content from '/schemas/all-schema.json': [object, Object]. (1,1)  I tried to open schema file with Altova XmlSpy and it was fine.  ![vscodeschemabug](https://cloud.githubusercontent.com/assets/4541491/16582261/12b6edd4-42ae-11e6-9c84-c3acc9c64459.png)  # .vscode/settings.json  // Place your settings in this file to overwrite default and user settings.  ``` {   ""json.schemas"": [     {       ""fileMatch"": [         ""*-repo.json""       ],        ""url"": ""/schemas/all-schema.json""     }   ] }  ```  # /schemas/all-schema.json  ``` {     ""$schema"": ""http://json-schema.org/draft-04/schema#"",     ""$ref"": ""./model-schema.json#"" } ```  # /schemas/model-schema.json  ``` {   ""oneOf"": [     {       ""$ref"": ""#/definitions/application""     },     {       ""$ref"": ""#/definitions/domainfile""     },     {       ""$ref"": ""#/definitions/taskfile""     }   ],   ""$schema"": ""http://json-schema.org/draft-04/schema#"",   ""definitions"": {     ""activity"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""type"": ""object"",       ""properties"": {         ""name"": {           ""type"": ""string"",           ""description"": ""the name of the container""         },         ""description"": {           ""type"": ""string"",           ""description"": ""a brief description of the application, domain or task activity""         },         ""operations"": {           ""type"": ""array"",           ""items"": {             ""anyOf"": [               {                 ""$ref"": ""#/definitions/operation""               }             ]           }         },         ""includes"": {           ""type"": ""array"",           ""items"": {             ""anyOf"": [               {                 ""$ref"": ""#/definitions/include""               }             ]           }         },         ""entities"": {           ""type"": ""array"",           ""items"": {             ""anyOf"": [               {                 ""$ref"": ""#/definitions/entity""               },               {                 ""$ref"": ""#/definitions/association""               },               {                 ""$ref"": ""#/definitions/enum""               },               {                 ""$ref"": ""#/definitions/include""               },               {                 ""$ref"": ""#/definitions/command""               }             ]           }         },         ""domain"": {           ""anyOf"": [             {               ""$ref"": ""#/definitions/domain""             }           ]         },         ""domains"": {           ""type"": ""array"",           ""items"": {             ""$ref"": ""#/definitions/domain""           }         },         ""task"": {           ""anyOf"": [             {               ""$ref"": ""#/definitions/task""             }           ]         },         ""tasks"": {           ""type"": ""array"",           ""items"": {             ""$ref"": ""#/definitions/task""           }         }       },       ""required"": [         ""name"",         ""description""       ]     },     ""annotation"": {       ""type"": ""object"",       ""properties"": {         ""id"": {           ""type"": ""string""         },         ""key"": {           ""type"": ""string""         },         ""value"": {           ""type"": ""string""         }       },       ""required"": [         ""key"",         ""value""       ]     },     ""base"": {       ""type"": ""object"",       ""properties"": {         ""template"": {           ""type"": ""string""         },         ""annotations"": {           ""type"": ""array"",           ""items"": {             ""$ref"": ""#/definitions/annotation""           }         },         ""resource"": {           ""type"": ""string""         },         ""namespace"": {           ""type"": ""string"",           ""description"": ""specify here namespace to use for code generation and marshaling""         }       }     },     ""taskfile"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/task""         }       ],       ""type"": ""object"",       ""properties"": {         ""domain-ref"": {           ""type"": ""string""         }       },       ""required"": [         ""domain-ref""       ]     },     ""task"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/activity""         }       ],       ""type"": ""object"",       ""properties"": {         ""type"": {           ""enum"": [             ""task""           ]         }       }     },     ""domainfile"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/domain""         }       ],       ""type"": ""object"",       ""properties"": {         ""application-ref"": {           ""type"": ""string""         }       },       ""required"": [         ""application-ref""       ]     },     ""domain"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/activity""         }       ],       ""type"": ""object"",       ""properties"": {         ""type"": {           ""enum"": [             ""domain""           ]         }       }     },     ""application"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/activity""         }       ],       ""type"": ""object"",       ""properties"": {         ""type"": {           ""enum"": [             ""application""           ]         }       }     },     ""include"": {       ""type"": ""object"",       ""properties"": {         ""type"": {           ""enum"": [             ""XMI-UML""           ]         },         ""path"": {           ""type"": ""string""         }       }     },     ""inheritance"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""type"": ""object"",       ""properties"": {         ""ancestor"": {           ""type"": ""string""         }       }     },     ""entity"": {       ""type"": ""object"",       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""properties"": {         ""type"": {           ""enum"": [             ""entity""           ]         },         ""isSealed"": {           ""type"": ""boolean"",           ""default"": ""false""         },         ""name"": {           ""type"": ""string""         },         ""description"": {           ""type"": ""string""         },         ""inherits"": {           ""$ref"": ""#/definitions/inheritance""         },         ""fields"": {           ""type"": ""array"",           ""items"": {             ""$ref"": ""#/definitions/field""           }         }       },       ""required"": [         ""type"",         ""name"",         ""description"",         ""fields""       ]     },     ""command"": {       ""type"": ""object"",       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""properties"": {         ""type"": {           ""enum"": [             ""command""           ]         },         ""id"": {           ""type"": ""string"",           ""description"": ""the identifier of the command.""         },         ""name"": {           ""type"": ""string"",           ""description"": ""the name of the command.""         },         ""description"": {           ""type"": ""string"",           ""description"": ""the description of the command.""         }       },       ""required"": [         ""id"",         ""type"",         ""name"",         ""description""       ]     },     ""enum"": {       ""type"": ""object"",       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""properties"": {         ""type"": {           ""enum"": [             ""enum""           ]         },         ""name"": {           ""type"": ""string""         },         ""description"": {           ""type"": ""string""         },         ""enumeratorList"": {           ""type"": ""array"",           ""items"": {             ""$ref"": ""#/definitions/enum-identifier""           }         }       },       ""required"": [         ""type"",         ""name"",         ""description""       ]     },     ""associationEnd"": {       ""type"": ""object"",       ""properties"": {         ""name"": {           ""type"": ""string""         },         ""type"": {           ""enum"": [             ""zeroOrOne"",             ""one"",             ""oneOrMany"",             ""zeroOrMany""           ]         },         ""description"": {           ""type"": ""string""         },         ""isNavigable"": {           ""type"": ""boolean"",           ""default"": true,           ""description"": ""true if this association is navigable""         }       },       ""required"": [         ""type"",         ""name""       ]     },     ""association"": {       ""type"": ""object"",       ""properties"": {         ""type"": {           ""enum"": [             ""association""           ]         },         ""fromEnd"": {           ""anyOf"": [             {               ""$ref"": ""#/definitions/associationEnd""             }           ]         },         ""toEnd"": {           ""anyOf"": [             {               ""$ref"": ""#/definitions/associationEnd""             }           ]         }       },       ""required"": [         ""type"",         ""fromEnd"",         ""toEnd""       ]     },     ""field"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""type"": ""object"",       ""properties"": {         ""name"": {           ""type"": ""string""         },         ""description"": {           ""type"": ""string""         },         ""isArray"": {           ""type"": ""boolean""         },         ""isAbstract"": {           ""type"": ""boolean""         },         ""isPublic"": {           ""type"": ""boolean""         },         ""isKey"": {           ""type"": ""boolean""         },         ""type"": {           ""$ref"": ""#/definitions/type""         },         ""validation"": {           ""$ref"": ""#/definitions/validation""         }       },       ""required"": [         ""name"",         ""description"",         ""type""       ]     },     ""type"": {       ""anyOf"": [         {           ""custom"": ""string""         },         {           ""enum"": [             ""string"",             ""numeric"",             ""boolean"",             ""sequence"",             ""datetime"",             ""uuid""           ],           ""default"": ""string""         }       ]     },     ""enum-identifier"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""type"": ""object"",       ""properties"": {         ""name"": {           ""type"": ""string"",           ""description"": ""the name of the enumeration""         },         ""description"": {           ""type"": ""string"",           ""description"": ""the description of the enumeration""         },         ""value"": {           ""anyOf"": [             {               ""type"": ""string"",               ""description"": ""value of string type""             },             {               ""type"": ""number"",               ""description"": ""value of number type""             }           ]         }       },       ""validation"": {         ""$ref"": ""#/definitions/validation""       },       ""required"": [         ""name"",         ""description""       ]     },     ""operation"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""type"": ""object"",       ""properties"": {         ""type"": {           ""enum"": [             ""HTTP_GET"",             ""HTTP_POST"",             ""HTTP_DELETE"",             ""HTTP_RENAME""           ],           ""description"": ""the http verb to use for the business operation""         },         ""name"": {           ""type"": ""string"",           ""description"": ""the name of the business operation""         },         ""description"": {           ""type"": ""string"",           ""description"": ""a brief description of the operation""         },         ""parameters"": {           ""type"": ""array"",           ""items"": {             ""$ref"": ""#/definitions/operationParameter""           },           ""description"": ""the parameters of the business operation""         }       },       ""required"": [         ""type"",         ""name""       ]     },     ""operationParameter"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/operationBaseParameter""         }       ],       ""properties"": {         ""direction"": {           ""anyOf"": [             {               ""anyOf"": [                 {                   ""enum"": [                     ""RETVAL"",                     ""IN"",                     ""OUT"",                     ""INOUT""                   ]                 }               ],               ""default"": ""IN""             }           ]         }       }     },     ""operationBaseParameter"": {       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ],       ""type"": ""object"",       ""properties"": {         ""type"": {           ""$ref"": ""#/definitions/type"",           ""description"": ""the type of the parameter""         },         ""isArray"": {           ""type"": ""boolean"",           ""default"": false         },         ""name"": {           ""type"": ""string"",           ""description"": ""The name of the parameter""         },         ""description"": {           ""type"": ""string"",           ""description"": ""The description of the parameter""         }       },       ""required"": [         ""direction"",         ""type"",         ""name"",         ""description""       ]     },     ""validation"": {       ""type"": ""object"",       ""anyOf"": [         {           ""$ref"": ""#/definitions/base""         }       ]     }   },   ""id"": ""http://www.codearchitects.com/schemas/model.json#"" } ```"
29353|The flaw is that we compare the groups only when both items have one and else compare the titles, it should be that an item without a group is sorted after an item with a group.
29354|"@vivainio thanks for making your project available. The launch config is missing the source map attributes `sourceMaps` and `outDir`. With this launch config setting and hitting breakpoints works for me:  ``` json         {             ""name"": ""Launch Extension"",             ""type"": ""extensionHost"",             ""request"": ""launch"",             ""runtimeExecutable"": ""${execPath}"",             ""args"": [""--extensionDevelopmentPath=${workspaceRoot}"" ],             ""sourceMaps"": true,             ""outDir"": ""${workspaceRoot}/out/src""         } ```  It is recommended to use the VS Code yeoman generator `generator-code` for scaffolding an extension project (see https://code.visualstudio.com/docs/extensions/example-hello-world ) In addition you could have a tasks.json with a build task and configure the launch.json to run build as a `preLaunchTask` before debugging."
29355|:+1: looked at the commit
29356|To clarify - it is possible to maintain synchronized text from these events. See https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/model/mirrorModel2.ts#L39 for an example  Your desire is for us to send the range also in an offset-len format besides the start-end pos format?
29357|This is for accessibility purposes. In our environment the only way to go to the next focusable element is via Tab and for that reason we should not trap focus -- otherwise folks who cannot use a mouse will not be able to escape the find widget.
29358|I like the suggestions. To summarize: - VSCode should try to identify the extension causing the extension host to crash - VSCode should cope better when the extension host crashes and possibly attempt to restart it automatically.
29359|This has been fixed with the fix for #4797
29360|Closing since no more info received.
29361|@weinand thanks for looking into this. I generated the project with yeoman generator, but it was an earlier version of the generator.
29362|Does it work from relative local file addresses? I was serving schemas from a local server during development...
29363|`1.2.1` shows the same **bad** behaviour
29364|Duplicate #8719
29365|`1.1.1` also looks **bad**
29366|Works better in `0.10.6`  ![image](https://cloud.githubusercontent.com/assets/5047891/16584690/949d90be-42bd-11e6-8bfe-6a58eba7a975.png)
29367|I looked into fixing this and the only reasonable fix for this is to remove the markers on close. The tsserver has some limitation which I can't work around it. They are: - you can't request errors for closed resources. Such a request is simply ignored.  - if a last resource of a project closes the whole project closes which doesn't allow any request to the files in the project anymore.
29368|Both [debug](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/node/debugConfigurationManager.ts#L355) and [tasks](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/tasks/electron-browser/task.contribution.ts#L258) use the same API. So not sure if the editor service `openEditor` api should automatically pin if somebody calls the openEditor that is already opened, or should each api consumer first check if the editor is visible in order to pass `pinned: true`. Let me know what you prefer and I can adopt it.
29369|If I understood your original reasoning you want the file pinned if it is being created, or if already opened and user clicks configure?
29370|@pkuma-msft Thanks for the directions. Does 284309d0383624f1c9393bad8e84d38652d690a8 look good to you?
29371|Actually, #2397
29372|Let's add a setting for this.
29373|If so then in the TS land. I will move the issue since the feature request needs to be implemented there.
29374|This issue was moved to Microsoft/TypeScript#9518
29375|What is the current status of this feature? When we can see this feature in action?
29376|Closing due to inactivity.
29377|Fixed with 1d8a0023f4273eaeb1aed631fac97192b26b3c55
29378|This issue was moved to Microsoft/TypeScript#9519
29379|Moving to TS team.
29380|Closing due to inactivity.
29381|Closing due to inactivity.
29382|Closing due to inactivity.
29383|Closing due to inactivity.
29384|@isidorn I thought the file should get pinned if we actually create it. I thought we would create it in these cases.
29385|Closing due to inactivity.
29386|This issue was moved to Microsoft/TypeScript#9520
29387|Moving to TS team.
29388|@jundialwan Can you try the latest [insider release](https://code.visualstudio.com/insiders) and see whether you still see this issue?
29389|Closing due to inactivity.
29390|Closing due to inactivity.
29391|Yeah, this sounds like a problem in your network.
29392|VS uses a different engine underneath. To my knowledge they implement their own language service whereas VS Code relies on the tsserver (also maintained by the TS team). So I will move the issue since the tsserver is the right place to react to these changes.
29393|This issue was moved to Microsoft/TypeScript#9522
29394|@bpasero if the file is already created, clicking on the configure action just opens the file. File only gets created if it is nonexistent and I can pin it in that case - let me do that for tasks and debug
29395|@aluanhaddad thanks for the nice P.S.
29396|I am sorry, I am having a very difficult time to motivate this addition, given `cursorUndo` (`ctrl+u` on windows) covers this case and many more
29397|"For the git-panel, it could be useful to have something like ""auto-hide if there is nothing to show"", or even better yet ""go back to last side-panel if there is nothing to show"".  I'm often finding myself switching from explorer-panel to git-panel, after my commit I am being left with an empty git panel, and have to click the explorer panel again to get back into my workflow.  This would be a lot more comfortable if the git-panel would yield automatically to the explorer-panel.  I realize this is rather unconventional from the UX perspective, even more so since there isnt (at least for me) any other panel apart from git-panel where this would make sense.  Just throwing the idea out there, maybe an UX expert can make something out of it."
29398|Closing as a detailed error message is useful for us to know what's happening. Without a logger this can't be solved.
29399|This is a problem of the tsserver can gets addressed with the next TS update. For details pls see https://github.com/Microsoft/TypeScript/issues/7762
29400|There is now progress when installing extensions.
