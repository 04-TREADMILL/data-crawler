17901|Please see https://github.com/Microsoft/vscode/issues/60#issuecomment-161792005
17902|duplicate of #5403
17903|CC @dbaeumer
17904|// FYi @dbaeumer
17905|Seach is covered by `Goto>File`. Closing the issue both search and filter is supported.
17906|@bpasero any ideas?
17907|Closing - cannot address this issue with the information given.
17908|@chwentao thanks for the clarification.
17909|@Beingbook thanks for the confirmation - closing.
17910|@dbaeumer any idea what could have gone wrong here?
17911|Verified that the `MagicPython` extension has the same isseu. Labeling as important.
17912|My bad! It happens with Chrome as well, not just VSC. Probably something to do with the rendering engine.
17913|> I've almost the same issue with intellisense. On a big project autocomplition becomes sluggish and loading suggestions list takes a while.  @d4rkr00t did you exclude files as recommended here https://code.visualstudio.com/docs/languages/javascript#_javascript-projects-jsconfigjson
17914|"@egamma, I understand its possible to get to the file I want without using any of these, just scrolling up and down inside node_modules. What I experienced was, I had problems with my own npm module not installing its own dependencies. Unfortunately it starts with ""g"" and Its right in the middle of 100s of other node_modules. Whenever I wanted to verify whether my module has its dependencies installed, it made more sense to stay within the folder explorer instead of using shift+cmd+f (search) or Goto-->File ..at some point, I started using console, it was very easy to write ""tree"" function in my profile to filter and show me the tree view of node_modules and modules that start with ""g"". So, my point is these capabilities might exist but not just useful for this context. IMO,  may be one of those many but console wins vscode over on something the editor could easily do."
17915|Hi **@outcoldman**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
17916|"@tarurar this will only hide *.js files if there are *.ts files with the same name. Otherwise just say ""true"" instead of using the when condition."
17917|Debug hover?
17918|@TingYa very likely an extension you have installed? VS Code by default would not open such a port.
17919|"Ok, @bpasero, please have a look at the screenshot attached. *.js and *.map files didn't dissapear from the explorer. <img width=""1440"" alt=""screen shot 2016-04-17 at 20 06 14"" src=""https://cloud.githubusercontent.com/assets/142044/14588334/18d928f8-04d8-11e6-8ff3-10c22d0b01b5.png"">"
17920|"@egamma The trigger parameter hints command is perfect, I must have misspelled it when I searched through the available commands. Thank you.  I added this as a custom keyboard shortcut to allow toggling. I think it would be good to add as an official binding.  ``` {     ""key"": ""shift+cmd+space"",     ""command"": ""closeParameterHints"",     ""when"": ""editorTextFocus && parameterHintsVisible"" }  ```"
17921|"The axios typings do not use ES6 default exports, therefore you cannot use ES6 imports. The recently added compiler option `allowSyntheticDefaultImports` allows you to still use the ES6 style import (see [compilerOptions](https://www.typescriptlang.org/docs/handbook/compiler-options.html).  Therefore changing the jsconfig.json as shown below fixes this.  ``` json     ""compilerOptions"": {         ""target"": ""es6"",         ""allowSyntheticDefaultImports"": true     }, ```"
17922|@bpasero Yeah  I am so sorry about it,my issue I listed is the extension _Markdown_'s feature Thank you for your answers
17923|Ok I suggest to talk to them then
17924|"@tarurar you missed the ""_"" in ""_.js""?"
17925|@raviteja-avvari  `includes()` is an ES7 feature and the JS language service currently support up to ES6. So you will not get Intellisense for `includes` but I cannot reproduce that you get an error:  ![image](https://cloud.githubusercontent.com/assets/172399/14588513/95c3fe7c-04cb-11e6-8e75-e0017af708aa.png)  To disable the built-in JS syntax checking and only rely on a linter like ES6 use the `javascript.validate.enable: false` setting.
17926|I don't think that Salsa supports this pattern, moving to TypeScript for comment.
17927|This issue was moved to Microsoft/TypeScript#8133
17928|Yes, hint is computed by Salsa/TypeScript. Moving to TypeScript.
17929|This issue was moved to Microsoft/TypeScript#8134
17930|"Added a setting to disable emmet triggering on Tab `""emmet.triggerExpansionOnTab"": false`."
17931|@StanShumsky support for associating .js files with the JavaScript React language is now available - closing.
17932|"Added a user setting `""emmet.triggerExpansionOnTab"": false` that will be available in the April iteration."
17933|Closing this issue since it is now tracked in the TypeScript repository.
17934|@egamma yes, this works for full screening VS Code into a new space, but it's not the same a 'simple full screen' where VS Code would full screen without entering a new space on the desktop.
17935|Moving to the TypeScript repository for investigation.
17936|This issue was moved to Microsoft/TypeScript#8135
17937|No further action planned on this issue, closing.
17938|@ibachar I guess that the ember.d.ts does not use the ES6 default export.  Please see this comment for the new compilerOption allowSyntheticDefaultImport https://github.com/Microsoft/vscode/issues/5336#issuecomment-211052292
17939|"Added a setting to disable emmet expansion on TAB:  `""emmet.triggerExpansionOnTab"": false`"
17940|@JordanBelford great   Closing the issue.
17941|@rui-infotrack your welcome. I hope you now become a happy Code user 😄
17942|Haven't got it. What is the question, actually?
17943|We use the package.json schema from http://schemastore.org/json/. Moving the issue there.
17944|This issue was moved to SchemaStore/schemastore#139
17945|Yes I did. I excluded all generated files and all external dependencies, but there are a lot of files in project anyway.
17946|Noto CJK has excellent support for all of these variants and would provide a consistent UI in all CJK languages. I'm not sure how other Chinese users feel about Noto but I personally am a huge fan. Or does the font need to be a system font that comes with the OS?
17947|@anyong  Noto CJK (and Source Han Sans) is LARGE and they are CFF. A well-hinted TTF is even larger.
17948|I'm not sure how code manages fonts but presumably for UI only a small subset of a single variant is needed. Extracting just characters used in the UI would be negligible size-wise...
17949|@anyong Subsetting a font is hard, especially when it is a CFF. My suggestion is simply using the system font.
17950|"I have managed to narrow down the probable cause: [extension.ts, line 66](https://github.com/Janne252/relic-scar/blob/master/src/extension.ts#L66) **→** [scarFunctionFileCollection.ts](https://github.com/Janne252/relic-scar/blob/master/src/scarFunctionCollection/scarFunctionFileCollection.ts)  scarFunctionFileCollection.ts scans all the files in the current workspace by doing the following: - Get the list of all files (including sub-directories) - Iterate over the filelist, scan each file for user functions (open file, get the text, rip the stuff we want with regex) - Prepare completionIItem and SignatureHelp data from the found functions  What ever goes wrong in that procedure, it never seems to happen in [Extension Development Host]. Disabling the call in [extension.ts, line 66](https://github.com/Janne252/relic-scar/blob/master/src/extension.ts#L66) ""fixes"" the issue."
17951|Definitely keep supporting the now-legacy .jade associations, there is a lot of code floating around still including the old jade, in fact depending on generator versions people use (thinking about express-generator here, possibly others as well), there might actually be new projects coming up using the old jade for quite some time.
17952|"The latest release notes say a new ""explorer.autoReveal"" is exposed, but I'm not seeing it in the defaults. Tried setting it anyway in the user but the behavior isn't altered. Am I missing something?"
17953|Yes @unional thanks for the addition of that issue.
17954|@ianwesterfield yes, only coming for our post 1.0 release end of this month
17955|@tarurar somehow github escaped my comment in a weird way. I said, you seem to have missed the `*` in `*.js` in your settings. I only see `.js`
17956|I think there is a general need to be able to set the overall font for the UI outside the editor and I think this would solve the issue of people having custom fonts installed that they want to use.  However, in this issue we want to pick a font family that solves the problem for all users by relying on good OS installed fonts.  I would appreciate for input on which families to use on Windows, Mac and Linux for which of the three languages.
17957|Sounds good, and thanks for the speedy update!
17958|Duplicate of https://github.com/Microsoft/vscode/issues/1782, I'll have another look at whether there are any available keybindings that don't conflict with Ubuntu's workspace defaults.
17959|Hi **@outcoldman**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
17960|**@outcoldman**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
17961|**@outcoldman**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
17962|"@bpasero So for UI the equivalent of ""sans serif"" in Chinese is _hei ti_ (黑體), and in Japanese and Korean, _gothic_. I've put together this list by locale and operating system using _hei ti_ / _gothic_ fonts, the latest default OS UI font where possible, or in the case of Linux, the most popular alternative(s). For the multi-locale Chinese fonts, both simplified and traditional locales are included in the font and they will simply work as expected.  Thanks for the attention to detail here, it's really very important that the font looks correct for the user in each specific locale (even if the change is as small as the dot at the top slanting to the left or right, etc.)  | Locale | OS | Font | | :-- | :-- | :-- | | zh-CN | Windows | Microsoft Yahei (微软雅黑) | | zh-TW | Windows | Microsoft Jhenghei (微軟正黑) | | zh-CN | OSX >= 10.11 | PingFang SC (苹方-简) | | zh-TW | OSX >= 10.11 | PingFang TC (蘋方-繁) | | zh-CN | OSX >= 10.6 | Heiti SC (黑体-简) | | zh-TW | OSX >= 10.6 | Heiti TC (黑體-繁) | | zh-CN, zh-TW | OSX < 10.6 | STXihei (华文细黑) | | zh-CN, zh-TW | Linux | WenQuanYi (文泉驿正黑) | | ja | Windows | Meiryo (メイリオ) | | ja | OSX | Hiragino Kaku Gothic (ヒラギノ角ゴ) | | ja | Linux | Sazanami Gothic (さざなみゴシック) [Fallbacks: IPA Gothic, Mona Font] | | ko | Windows | DotumChe (돋움체) | | ko | OSX >= 10.8 | Apple SD Gothic Neo (애플 SD 산돌고딕 Neo) | | ko | OSX < 10.8 | AppleGothic (애플고딕) | | ko | Linux | UnDotum (은돋움) [Fallback: FBaekmuk Gulim (백묵굴림)] |"
17963|@bachstatter No,there is no way to open insiders buid through the terminal
17964|But on windows it can
17965|on mac os x have this error   [INFO] Started OmniSharp from '/Users/vsmac/.vscode/extensions/ms-vscode.csharp-0.3.7/bin/omnisharp' with process id 779... /Users/vsmac/.vscode/extensions/ms-vscode.csharp-0.3.7/bin/omnisharp: line 11: /Users/vsmac/.vscode/extensions/ms-vscode.csharp-0.3.7/bin/packages/dnx-mono.1.0.0-beta4/bin/dnx: No such file or directory /Users/vsmac/.vscode/extensions/ms-vscode.csharp-0.3.7/bin/omnisharp: line 11: exec: /Users/vsmac/.vscode/extensions/ms-vscode.csharp-0.3.7/bin/packages/dnx-mono.1.0.0-beta4/bin/dnx: cannot execute: No such file or directory
17966|+1
17967|@Tyriar I'm not sure which version you're referring to but I'm up to date on Insider and that option doesn't do anything yet.
17968|@erkinalp i'm not sure i understand the comment. what is the showstopper?
17969|@weinand  You can see that the app1.js is paused by the break point, and the app2.js is still running. The left bottom window of VS is local variables, and the right on it is stack trace. ![shot](https://cloud.githubusercontent.com/assets/764862/14592759/cbfac424-0554-11e6-86a9-7bf4b9824761.png)
17970|I have to say the formatOnType function is always broken. In most vscode versions , it doesn't work properly. Everytime vscode updated, I turned it on, then some minutes I had to turn it off. I suggest you turn on this option by default like visual studio,and you may pay more attention on his.
17971|"Just copy these guys and you'll be good to go: http://www.wholetomato.com/ http://www.telerik.com/products/justcode.aspx https://www.devexpress.com/Products/CodeRush/  Ok, that might be too much. Can we start with ""Refactor > Change Signature"" and ""Extract Method from Selection""? Live code analysis is also a must, or else VSCode will keep feeling like a glorified text editor - which's not really what a serious production code IDE is supposed to be."
17972|@anyong Microsoft YaHei is not suitable for zh-TW. The proper one is Microsoft Jhenghei.
17973|I think it's too much characters in one line cause the problem. I'll update the issue. In the new test files: [testjson_no_bug.txt](https://github.com/Microsoft/vscode/files/223047/testjson_no_bug.txt) has a line of JSON string with 19,999 characters, and JSON hightlight works fine. [testjson_start_bug.txt](https://github.com/Microsoft/vscode/files/223054/testjson_start_bug.txt) has a line of JSON string with 20,000 characters can produce the bug.
17974|"Actually 雅黑 does support 繁體字 correctly in zh-TW, but 正黑 is fine, too.  Edit: yes I guess I should agree 正體 is ""more correct"" on the whole, will edit in the above response."
17975|Should the option only trim empty lines(only contain space characters) and not trim trailing spaces if the line have other content?  Thus, the markdown file's wanted trailing spaces will not be removed when we press enter. I checked the test specs and found  the wanted trailing spaces will also be removed in this case.
17976|I think you need https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp
17977|@MaDDoXbr but it is a text editor, not an IDE.
17978|@fa7ad read snpai comment.
17979|I know, yet it _could_ be a full-featured IDE if Microsoft wanted it to.
17980|@Treri yeah, that makes sense, I will do appropriate changes (also checked with Sublime Text on default behaviors): - I will remove configuration, does not seem like we need to have `editor.trimWhitespacesOnEnter` configurable. - Spaces will be trimmed only in situation where you are on the line, where only empty whitespaces and your cursor is at the end of this line.
17981|@outcoldman Thanks for your awesome work 👍
17982|its because the as3 extension. sorry
17983|"Ok, so it's ""Chrome vs. Chromium"". I wish you were more explicit about that."
17984|"@lukaschal strings location info as following, please fix in files 1. main.contribution.nls.resx.lcl       <Item ItemId="";updateConfigurationTitle"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[Update configuration]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">             <Val><![CDATA[Mettre à jour la configuration]]></Val>           </Tgt>         </Str>         <Disp Icon=""Str"" />         <Modified By=""ICizkova"" DateTime=""2016-03-10T16:02:43Z"" />       </Item> 1. Found 3 instances   (1) css.contribution.nls.resx.lcl       <Item ItemId="";lint"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[Controls CSS validation and problem severities.]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">             <Val><![CDATA[Contrôle la validation CSS et les problèmes de gravité.]]></Val>             <Props>               <Str Name=""TranslationModifiedBy"" Val=""Locit"" />               <Date Name=""TranslationModifiedDate"" Val=""2014-10-03T13:08:25.1154415Z"" />             </Props>           </Tgt>           <Prev Cat=""Text"">             <Val><![CDATA[Controls problem severities used in the lint validation.]]></Val>           </Prev>         </Str>  (2) less.contribution.nls.resx.lcl       <Item ItemId="";lessLint"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[Controls LESS validation and problem severities.]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">             <Val><![CDATA[Contrôle la validation LESS et les problèmes de gravité.]]></Val>             <Props>               <Str Name=""TranslationModifiedBy"" Val=""MM"" />               <Date Name=""TranslationModifiedDate"" Val=""2015-11-19T10:24:22.650276Z"" />             </Props>           </Tgt>           <Prev Cat=""Text"">             <Val><![CDATA[Controls problem severities used in the LESS lint validation.]]></Val>           </Prev>         </Str>  (3) sass.contribution.nls.resx.lcl       <Item ItemId="";sassLint"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[Controls Sass validation and problem severities.]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">             <Val><![CDATA[Contrôle la validation Sass et les problèmes de gravité.]]></Val>             <Props>               <Str Name=""TranslationModifiedBy"" Val=""Locit"" />               <Date Name=""TranslationModifiedDate"" Val=""2014-10-03T13:35:19.5747833Z"" />             </Props>           </Tgt>  3 json.contribution.nls.resx.lcl       <Item ItemId="";jsonConfigurationTitle"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[JSON configuration]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"" AutoAppr=""N/A"">             <Val><![CDATA[Configuration de JSON]]></Val>           </Tgt>         </Str>"
17985|"@lukaschal wrong translation in nodeDebug.nls.resx.lcl  ```   <Item ItemId="";scope.block"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">     <Str Cat=""Text"">       <Val><![CDATA[Block]]></Val>       <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""Auto"" Confidence=""100"">         <Val><![CDATA[Blockieren]]></Val>       </Tgt>     </Str>     <Disp Icon=""Str"" />   </Item> ```"
17986|"@lukaschal Please send this feedback to Russian linguistic review, correct all ""Toggle ..."" / ""Hide ..."" menu translations accordingly."
17987|![mt](https://cloud.githubusercontent.com/assets/6732524/14595282/a00272d8-0570-11e6-99c9-3fde4a17a97d.gif) ↑ Input the regex text and the press Alt+Enter  .  No mouse operation.  How to select all the text matched by a regex search in column selection mode like sublime?
17988|@anyong thanks so much, this list is very useful. maybe the table could be edited based on feedback in this issue from others and this week I can start looking into adding it in together with #4433.
17989|+1
17990|@aeschli you seem to be using a character which is not the slash character in the glob pattern but rather this one: http://www.marathon-studios.com/unicode/U2215/Division_Slash  Works for me if I replace it with the proper '/'
17991|Good to know!
17992|@alapolloni @cheizer Both your files are pointing to an `Electron` executable file. It makes no sense that OS X is looking for an `Atom` executable.
17993|Since this is a one off, from prior to 1.0 to post 1.0, I won't do anything now.
17994|This is as designed.
17995|Duplicate of #3464
17996|Duplicate of #1796
17997|Related to #637
17998|What error is it showing?
17999|+1
18000|The authentication dialog was fixed by #1796, it should start coming up on the next release.  Meanwhile, I do suggest using a credential helper.
