28401|@kisstkondoros Thanks for the fix. Merged it.
28402|My suggestion would be building a framework around Selenium that tests UI behavior.
28403|@mrmlnc LGTM, I need to update to the `noExpansionOccurred` refactoring and some message tweaks.
28404|Sure: _1._ Go through all our CSS and remove duplicate references to the same svg file - e.g. https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/media/debugViewlet.css#L268   and https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/media/debugViewlet.css#L352 - our code is littered with this everywhere  _2._ Go to [`gulpfile.common.js`](https://github.com/Microsoft/vscode/blob/master/build/gulpfile.common.js#L40) and add `result['vs/css'] = { inlineResources: true };`  When bundling, due to step number 2, all the duplicate references will be printed. They are in the low hundreds.
28405|Thanks for looking into this. ALT + double click will do just fine. When it's customizable some time in the future, that'll be perfect :)
28406|This is issue has the same root cause as #8450, which has been fixed.
28407|@euclimauro  Something might have went wrong, did you try to attach a CPU profile at https://github.com/Microsoft/vscode/issues/7726
28408|I cannot reproduce it on Windows 10 with version based on 798b41ab1cf3636a27042020a54ddfb4cfb8d23c.
28409|@alexandrudima well what if actually we want to use the same SVG in 2 places in the CSS? Would be nice if we could define variables with data URLs but I think that is not possible.
28410|@Tyriar @joaomoreno   I am sorry, I have no involvement in the update story.  This error appears when the build is broken (as in we ship and install on disk the **wrong** version of node oniguruma, compiled against the **wrong** electron/node native version). This might be caused by a number of factors, however none of those factors involve me :)
28411|The problem is the empty range.
28412|It would definitely work even today. It's just that the resulting css file size will be a lot larger for no good reason. On the bright side, I handled the duplicates in the CSS that is dragged in the monaco-editor :).
28413|[CPU-20160629T160103.cpuprofile.zip](https://github.com/Microsoft/vscode/files/339542/CPU-20160629T160103.cpuprofile.zip)
28414|Seems like https://github.com/Microsoft/vscode/issues/8434 and https://github.com/Microsoft/vscode/issues/7343
28415|@alexandrudima oh I see, of course we can solve this by tweaking the CSS selectors 👍
28416|Filed https://github.com/Microsoft/vscode/issues/8516
28417|Affects many keybindings - issue is that editor somehow things it's under a different context than it actually is...
28418|I am refreshing the parent of the element that is being removed. So for single match, file entry is refreshed. And I do not see any issues.
28419|Steps show a different problem but have the same source as I believe: - open two files in two editor slots - refresh the workbench to get a fresh state - swap the editor slots - in slot one, hit `Cmd+F` - now hit `ESC`  ⚡ the find box doesn't close...
28420|"Maybe rename ""showMessage"" to ""alert"" and ""keepRunning"" to ""continue"" and display a log output `running` in console only without a alert message so you can verify the system is not hanging."
28421|"> @nevir how did you configure the task. Is if configured as a watching task then this should not happened (e.g does it have a ""watching"" property). If not the task framework always assume that all files are validated and all valid errors are rereported. Otherwise errors would never be cleared in cases where you have inter file dependencies.  Yeah, I had it configured as a watch task.  The difference here, I think, is that the task itself only ran against files that changed (rather than the entire project, as most watch tasks tend to, and VS Code seems to rightly assume)"
28422|:-) maybe the toolbar should diff what it _did_ and _will_ render
28423|@weinand I think intellisense would be very nice, but that needs coming up with some grammar/standard to provide the filter which probably does not worth for this filter box.  I think for this case, just providing information would be sufficient. To have an hover we need some filter icon which has to be in textbox. I had a filter icon in the beginning but removed it later. We can also check with UX for this
28424|Python C++ PowerShell  Less Important but we can guess of file type EditorConfig Linter config files e.g. eslintrc Bablerc JSON Schema
28425|We will add an icon for View - clicking on this we show a list of actions - show popular, show recommended, show installed, show updates. Clicking these actions will populate the textbox with the appropriate command to perform the search. Brad will get assets from the VS icon team to deliver to Isidor.
28426|Yeah, putting it on the toolbar would make more sense. However it gets ugly and tricky when you have an action that points to an action item that can custom render what it wants.
28427|oh, yeah
28428|If we do it lets make this change in TypeScript. With globally filtering symbols for each and every provider  we break scenarios for languages that don't happen to use any of our hand picked highly biased TypeScript symbol kinds.
28429|@bpasero I need help to know when the editor get reparented or even better a stable dom element that is moved with the editor and that encloses the title & editor
28430|I did this in the standalone Monaco editor as part test item #8210. There does not appear to be a status bar or user editable settings in that case.
28431|@jrieken `tsc -w` works fine for me because it results in a node process that the picker can find. But gulp seem to be a node process that disguises itself as gulp. I've enabled `gulp` for the picker.
28432|> Also with .toString(false)  I don't believe that cos there is [test](https://github.com/Microsoft/vscode/blob/master/src/vs/base/test/common/uri.test.ts#L327) for it ;-)  Encoding the query in `toString` is a little unhappy esp for html. Tho from the URI spec it's (at least not to me) not obvious that `=` has a special meaning. Therefore no further action planned.
28433|hmm, looks like the incremental compile didn't flag this, let me fix that
28434|yeah, `tsc -w` I see
28435|pushed a fix
28436|I'm using the default Dark+. The cursor seems to be from Windows (no extra horizontal line in the middle). It's Windows 8.1, but nothing else I'm aware of that would make the setup special. Also the hand and the arrow cursors both are white with a black outline (as expected I think).
28437|It will be unexpected to see `=` encoded if it passed through Uri before being passed on somewhere external as string. (Not arguing with the spec.)
28438|@jrieken that was the idea. @dbaeumer is looking into that. To not break too much API we would introduce a containerName to the returned symbols and not show a symbol if the container name is provided (at least for the Cmd+P case). Rationale is to not show any symbols that are not global. This should work nicely for other languages too.
28439|This is how it looks for me:  ![wehff1hkma](https://cloud.githubusercontent.com/assets/5047891/16459704/297cfe48-3e24-11e6-9bfa-64cde2b78b8a.gif)  Here are my [cursor pointer settings](http://nexxtep.com/2012/02/how-to-change-the-color-of-your-mouse-cursor-in-windows): ![image](https://cloud.githubusercontent.com/assets/5047891/16459722/3ac47e88-3e24-11e6-8778-c5c6fc81b95f.png)  I am on Windows 10. How does the cursor look like for you if you visit https://code.visualstudio.com/ and hover over the copyright text at the bottom in Chrome?  ![dwxafr3zv8](https://cloud.githubusercontent.com/assets/5047891/16459814/a664bd60-3e24-11e6-96f4-ff491073b4ec.gif)
28440|Low risk fix idea is to move the data-attribute when moving editors. The larger change to actually move the editor container DOM nodes might be more risky.
28441|@bgashler1 I am assuming that we can push this out to the future and we are not blocked currently.
28442|@bgashler1 if you have an idea for which CSS rules to use, we could give this a spin. What I would suggest however is to somehow put this into the scrollbar widget we are using. Because the custom scrollbar widget already has the option to show a shadow when content overflows to the left and we would want a new option to fade out the content below when it overflows.  From my quick hacking I could not really find a way to let a separate DIV alter the underlying DIV in such a way. I was playing around with CSS gradients (http://www.w3schools.com/css/css3_gradients.asp).  The scrollbar applies the styles in https://github.com/Microsoft/vscode/blob/master/src/vs/base/browser/ui/scrollbar/scrollableElement.ts#L330
28443|@bpasero I wouldn't say we're blocked.  The only side-effect of not doing this is that in any other theme but the dark and light, I can't tell what color the editor background is, so our box shadow trick that acts as a gradient mask over text looks more like a shadow.
28444|@euclimauro Thank you! It looks like most of the time is spent in painting. Before a lot of time is spent in painting, a lot of time (44ms) is spent in `deltaDecorations`, so my initial thought is that you might have a file that has a high number of decorations (probably in the multiple thousands range).  Is it possible you're opening a file with a lot of errors and warnings, or perhaps you have an extension installed that adds a lot of decorations to the editor?
28445|Behind `editor.renderIndentGuides`  ![image](https://cloud.githubusercontent.com/assets/5047891/16460248/cfd6f440-3e26-11e6-88a3-e9f2f4d8c80c.png)
28446|I did not add this telemetry, so I will not take it out :)
28447|@bpasero You mean the existence of [container name](https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L1728) as in not falsy as a hint for not being global?  It does sound better I don't know if that works for all languages... If this is an issue we should add symbol kind filter to the provider (https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L1784)
28448|I'm having the same problem. Please support IntelliSense for Node module imports!
28449|I agree and that's one of the reasons I have added `toString(false)`. One of the reasons I am slightly conservative with this is that we have used `someUri.toString()` often as key to store stuff (like in local browser storage). Even though I don't think we overly often use the query bit, it will break those cos string identify isn't given anymore...
28450|@bpasero it _does_ seem to happen in 1.2.1. It might be related to graphics card or windows graphics stack with multiple graphics cards, since I've only observed this on my third monitor which is driven by my second graphics card.  I haven't had problems with any other windows except (a possibly unrelated symptom) when maximized UWP windows are closed on that monitor, it shows the desktop briefly and then re-renders whatever was underneath. It's also possible this is an issue with the window handling model in 14366.  Happy to attach a video. What screen recording tool would you recommend?
28451|![no-repaint](https://cloud.githubusercontent.com/assets/9205389/16462014/2f0a2be6-3de4-11e6-8816-79665d329284.png)
28452|Oooook, now I understand. There is a different between the white spaces included by the editor and by the user.  Thank you very much!
28453|Worked well - I've written up some notes I'll mail on.
28454|It's in just a default editor I think? No split, and not a diff view.  This isn't as easily reproducible as I originally thought, so here's some specifics I've found by playing around with it.  I have had the most success reproducing this by navigating around using any means (Go to Definition or Ctrl+Tab) and then using Go Back to return to the file.  This occurs seemingly regardless to whether or not I've recently modified the file or have current pending changes in it.  If I return to the file using the Ctrl+Tab selector, the editor seems to remember what was folded.  I hope this is clear and concise enough. Let me know if you have more questions or need more info.
28455|@germansak do you have non-ascii characters in the open folder's path?
28456|@thomas-leroy do you mean the color scheme from `gnome-terminal` does not carry over? This is by design, the theme of the terminal will eventually be customizable but it will not integrate with `gnome-terminal` or similar applications. https://github.com/Microsoft/vscode/issues/6979
28457|I cannot reproduce it neither on OS X. Please reopen when you still the issue in your setup.
28458|Still reproducing for me in the Insiders build you mention:  Version 1.3.0-insider Commit 798b41ab1cf3636a27042020a54ddfb4cfb8d23c Date 2016-06-29T05:14:50.570Z Shell 0.37.6 Renderer 49.0.2623.75 Node 5.10.0  However it's seems fine in my dev build at 1739c99c7255a22c588d9a1aaa141fdc38c90813. This is happening in master as well https://github.com/Microsoft/vscode/issues/8531
28459|This is in the console:  ``` workbench.main.js:115 vscode_jsonrpc_1.Emitter is not a constructor: TypeError: vscode_jsonrpc_1.Emitter is not a constructor     at new LanguageClient (/usr/share/code-insiders/resources/app/extensions/json/node_modules/vscode-languageclient/lib/main.js:208:34)     at /usr/share/code-insiders/resources/app/extensions/json/client/out/jsonMain.js:47:22     at Object.m [as _notify] (/usr/share/code-insiders/resources/app/out/vs/workbench/node/extensionHostProcess.js:5:9154)     at Object.j.enter (/usr/share/code-insiders/resources/app/out/vs/workbench/node/extensionHostProcess.js:5:12732)     at n.Class.define._run (/usr/share/code-insiders/resources/app/out/vs/workbench/node/extensionHostProcess.js:5:14560)     at n.Class.define._completed (/usr/share/code-insiders/resources/app/out/vs/workbench/node/extensionHostProcess.js:5:14001)     at e.resolveOk (/usr/share/code-insiders/resources/app/out/vs/workbench/node/extensionHostProcess.js:8:7288)     at p (/usr/share/code-insiders/resources/app/out/vs/workbench/node/extensionHostProcess.js:8:5770)     at _combinedTickCallback (internal/process/next_tick.js:67:7)     at process._tickCallback (internal/process/next_tick.js:98:9) ```
28460|"Since all these commands are essentially filtering the list of all extensions by criteria we provide (such as whether it's installed, or whether it's popular or recommended), the icon team and I felt that a ""Filter"" icon would be appropriate.  I've attached the asset here. [Filter_16x.zip](https://github.com/Microsoft/vscode/files/339931/Filter_16x.zip)  ![screen-shot-2016-06-29-at-10 59 43-am](https://cloud.githubusercontent.com/assets/11839736/16463667/a87949e2-3deb-11e6-9aea-f609b1b5540c.png)"
28461|Definitely happening on Ubuntu 16.04:  Version 1.3.0-insider Commit 798b41ab1cf3636a27042020a54ddfb4cfb8d23c Date 2016-06-29T05:14:50.570Z Shell 0.37.6 Renderer 49.0.2623.75 Node 5.10.0
28462|can anyone help me on the above issue
28463|I've also checked other uses of `IQuickOpenService.input`, e.g. `git commit` and they expose the same behaviour, e.g., the quick box remains open also when it loses focus.  Assigning to @bpasero for further investigation.
28464|This should be fixed in the Insiders build, please comment if you have issues on v1.3.0-insiders/v1.3.0+
28465|Duplicate of https://github.com/Microsoft/vscode/issues/6602, see that issue for advice.
28466|"Should we simply show a Disable button on the extension entry after Uninstall just like we show an Enable button after Install.  Pressing the Disable button, displays the restart prompt dialog (with slightly different wording ""In order to disable this extension, ...."" Showing a Disable button also lets the user know that the extension is still active."
28467|Thanks a lot for the quick fix @mrmlnc, this was the biggest issue I found in my testing :+1:
28468|Closing as duplicate of #8136
28469|@cyberhck as I understand, while it's possible, Arch Linux users [shouldn't generally try install deb packages](http://unix.stackexchange.com/a/83544/115410) for these very reasons.  I've had discussions with the website team about adding more detailed Linux setup advice on a per-distribution level to https://code.visualstudio.com/docs/setup/linux, that will happen eventually which will remedy this :smiley: I created https://github.com/Microsoft/vscode-docs/issues/369 to make sure this is followed up.
28470|"I'm not at my home computer right now, but probably yes (I think my username has an accent - ""Germán"")  :-) Could that be the issue?"
28471|That's definitely it, I'll hopefully get a change to look at this issue (#7727) more deeply next month. In the meantime the only real workaround is to move your project folder out of the folder containing those characters :frowning:  Thanks for the quick response!
28472|How did you 'open' a JSON file?
28473|Ok. No problem! Thank you for your support and congratulations for this product I really like VS Code and use it everyday!
28474|There is no more `instantiationService` usage in `threadService`
28475|We have the content hash now, but not a serializable undo/redo stack
28476|IMHO this should go on the plan rather than me doing it under the radar. @joaomoreno you can lobby for it
28477|IMHO not a blocker
28478|"Maybe a packaging issue? Can you check your install that you have /usr/share/code-insiders/resources/app/extensions/json/node_modules/vscode-jsonrpc. In there should be lib/main.js and lib/events.js  I installed my build from the from the x64.rpm package. Installed it again, still works. It would be great if you could investigate.  @dbaeumer Dirk, the exception seems to happen when setting up the language client. I'm out from tomorrow to Tuesday, can you take this?  @Tyriar Can you add the setting ""json.trace.server"", and open the output view? If the JSON server starts, this should gibe you a css channel. But if that exception is real, the server probably never is started."
28479|@mrmlnc LGTM - thanks
28480|Made the change on the doc repo (not visible yet)
28481|"Here is my tasks.json  I've included your suggestion but it didn't fix the issue.  ``` js {     // See https://go.microsoft.com/fwlink/?LinkId=733558     // for the documentation about the tasks.json format     ""version"": ""0.1.0"",     ""command"": ""npm"",     ""isShellCommand"": true,     ""showOutput"": ""always"",     ""suppressTaskName"": true,     ""options"": {       // to be able to find the package.json       ""cwd"": ""${cwd}/app/""     },     ""tasks"": [         {             ""taskName"": ""install"",             ""args"": [""install""]         },         {             ""taskName"": ""build"",             ""isBuildCommand"": true,             ""problemMatcher"": {                 ""base"": ""$tsc"",                 ""fileLocation"": ""relative""             },             ""args"": [""run"", ""build""]         },         {           ""taskName"": ""lint"",           ""problemMatcher"": {               ""base"": ""$tsc"",               ""fileLocation"": ""relative""           },           ""args"": [             ""run"", ""lint""           ]         },         {             ""taskName"": ""test"",             ""isTestCommand"": true,             ""args"": [""run"", ""test""]         }     ] } ```  Actually issue itself is not about the tasks but it's mostly not being able to run these linters and tasks relative to the file location.  I'm unable to use any linters in the editor. Also cannot have tasks per project, I can only configure it to work on one of the folders.  If I could tell where to find eslint or tslint to vscode or making them behave just like the discovery of `tsconfig.json` would probably solve the first problem.  Second problem is more about the design of the whole tasks system, it needs either additional features or complete behavioral change to accommodate nested project structures."
28482|I guess this is more related to my **_intel integrated graphic card_** rather than VSCode itself. As i said, on my laptop i have an intel onboard vga and Manjaro linux as OS. So i've figured out that i have the same problem with every application which uses chrome/chromium as an engine like google-chrome, Atom, Brackets and ... : It is very slow!!  But on my PC with the same OS i have a pci express nvidia card and everything is fine. so i think for me it's time to buy a new laptop ;)  Anyways this is my profile: [CPU-20160630T003646.cpuprofile.zip](https://github.com/Microsoft/vscode/files/340150/CPU-20160630T003646.cpuprofile.zip)  Thanks for your efforts.
28483|I would really appreciate this feature for dotnet.  be default launch is picking up environment variable from ASPNETCORE_URLS' and dotnet run on this  url. would be awesome to be able to specify this variable per process started
28484|"I cannot reproduce it on Manjaro 16 and Ubuntu 16.04 LTS. But I found a problem with cancelling settings.  Steps to Reproduce: 1. Open VS Code 2. Add to settings:        ``` json    ""emmet.syntaxProfiles"": {      ""html"": {        ""attr_case"": ""upper""      }    }    ``` 3. Type `.test` and press <kbd>tab</kbd> to expand. Settings are applied. Result: `<div CLASS=""test""></div>` 4. Delete added settings. 5. Type `.test` and press <kbd>tab</kbd> to expand, the setting doesn't apply. Result: `<div CLASS=""test""></div>`  ![2016-06-30_00-06-28](https://cloud.githubusercontent.com/assets/7034281/16468879/b13e7cbc-3e56-11e6-8494-672f606e09ec.gif)"
28485|Just tried again and it works for me.  Verification steps: npm install angular open angular.min.js
28486|@bpasero yeah, that's not intentional.  Hopefully you can add a class that scopes this down to just tabs-enabled.
28487|I like your point @alexandrudima about making hover on the whole tab.  I, too, found it a little awkward because I had to hit the right target, and it's not clear where the text's vertical boundaries are.  @bpasero is this doable?  As far as the timing, how about we first make that hover change and see if that fixes the pain?  It may no longer be an issue since the hover target will be so easy to hit accurately.  I worry decreasing the delay with such a large hover area may make this hover tip appear more than is desirable.
28488|"I ran into another issue with this behavior: if the first instance of code was launched elevated (say, from an elevated cmd), non-elevated instances will silently fail to start.  This makes the system-wide contextual menu ""Open with Code"" fail, in addition to any launches from non-elevated prompts to silently fail.  I'm sure there are benefits to this single process model where new instances are really just children of the first, but as someone who develops on several different projects simultaneously (c# tests that need to run as admin, multiple go projects with different GOPATH requirements, powershell scripts that need to access remote machines), this behavior really hampers my use.  I'm really loving vscode, and I want to use it for <i>everything</i>, and this issue makes that much harder.  Maybe a stopgap would be providing a setting that could disable this and allow each instance to be an entirely new process?  It could be off by default, and someone like me with more advanced scenarios could enable it so that I can get a fresh environment in each instance."
28489|As originally designed, we did something very similar: whenever something is opened that is not in the root of the folder, then we show it's parent folder below the file name in smaller text.  ![tabs-01c](https://cloud.githubusercontent.com/assets/11839736/16469427/be904ec8-3e05-11e6-8f57-988dd9202dac.png)  **Some things to note...**  If we want to go with this approach, then we need to use something other than the italic font (this was before we decided to use italic font on preview tabs).  What we could do is a less pronounced color.  Combined with the smaller font size, I think that may work.  I can work on some variations of this if we go down this route.
28490|Ack, I wasn't precise: I pasted some JSON into the editor. It reproduces when I: - Open http://localhost:8080/monaco-editor/test/ - Switch template to 'sample JSON' - Find/replace all tabs with four space - Format all   -> Spaces are replaced with tabs
28491|We talked in UX meeting about making this button the default blue color.
28492|I personally don't like the look of it, even though I get the argument for it.  There's also another reason why I don't think we should put it there (which I'll post on Slack).
28493|@jrieken you're correct.  @joaomoreno let me know if you need anything from me to make this happen.
28494|Let's talk about this in UX sync next week.
28495|By analyzing the blame information on this pull request, we identified @egamma and @alexandrudima to be potential reviewers
28496|Hi **@mrmlnc**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
28497|@mese79 You could try launching vscode with `--disable-gpu`. That might help...
28498|@Tyriar, i did a PR (#8542) that is guaranteed to apply Emmet preferences. Please, try on your machine.  So sorry, I'm not good at English. Not yet :smiling_imp:
28499|Just noticed this as well.  I'm also missing how many ratings an extension received (what if it's like 5 stars but only 1 person rated it).  For products on Amazon's website, they show stars and then the number of ratings next to it.
28500|"Given that some of the actions are filtering (@popular, @recommended) and some are local (installed, installed and outdated), I think a filter icon is confusing.  I'd prefer ""..."" which is clear to mean a dropdown will appear."
