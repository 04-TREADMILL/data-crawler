18801|@anyong My stylesheets does not contain `Noto Sans CJK`. For `Source Han Sans`, it is after Windows fonts so on Windows it will not be used (and most users will not install them).
18802|@be5invis  I have installed PingFang and Noto Sans, they are blur on my screen.  For other os, because of copyright, only few user installed YaHei, adjust fonts order will not cause any bad change  EDIT: Noto Sans is ok, so, just keep it at origin place, adjust other?
18803|"Cool  YOTOV LIMITED[😏]  ---  From: ArianeLu notifications@github.com Sent: 21 April 2016 17:23 To: Microsoft/vscode Subject: Re: [Microsoft/vscode] Use proper font family for East Asian languages (CJK) (#5260)  @bpaserohttps://github.com/bpasero  I think this one is best for zh-cn:  ""Segoe WPC"", ""Segoe UI"", ""SFUIText-Light"", ""HelveticaNeue-Light"", ""Microsoft Yahei UI"", ""Microsoft YaHei"", ""Noto Sans"", ""PingFang SC"", ""Hiragino Sans GB"", ""Source Han Sans SC"", ""Source Han Sans CN"", ""Source Han Sans"", ""WenQuanYi MicroHei"" ,sans-serif  YaHei UI available in Win8+, may better than YaHei WenQuanYi MicroHei is for CentOS/SUSE, better than use UKai(i dont know why it will be set as default font of sans-serif in some linux)  If linux/mac user installed YaHei, text still beautiful and clear, but other font is not clear/blur on Windows(except hi-dpi)  — You are receiving this because you are subscribed to this thread. Reply to this email directly or view it on GitHubhttps://github.com/Microsoft/vscode/issues/5260#issuecomment-212994006"
18804|@ArianeLu You have `Noto Sans` (a latin alphabet font) listed after the CJK fonts - that doesn't make any sense. Latin fonts should come first, because the latin characters in CJK fonts are notoriously bad.
18805|Well I propose to show english **always first** and the translated label below less prominent, hence we both agree that keywords are not needed.
18806|@ArianeLu Your problem is caused by PingFang, not Noto. And you forgot Office for Mac.
18807|@bpasero Agree with you.
18808|@be5invis So, We just need add Microsoft YaHei UI, WenQuanYi, and move PingFang?  Good night , everyone in Asia(UTC+8, 0:36)
18809|"@ArianeLu @bpasero  Hmmm, maybe rearrangement is acceptable, since the original CSS's Latin part is also in the ""Windows -- OSX -- Linux"" order. So this:  > - For `zh-CN` : `font-family: ""Segoe WPC"", ""Segoe UI"", ""SFUIText-Light"", ""HelveticaNeue-Light"", ""Noto Sans"", ""Microsoft YaHei"", ""PingFang SC"", ""Hiragino Sans GB"", ""Source Han Sans SC"", ""Source Han Sans CN"", ""Source Han Sans"", sans-serif` > - For `zh-TW` : `font-family: ""Segoe WPC"", ""Segoe UI"", ""SFUIText-Light"", ""HelveticaNeue-Light"", ""Noto Sans"", ""Microsoft Jhenghei"", ""PingFang TC"", ""Source Han Sans TC"", ""Source Han Sans"", ""Source Han Sans TW"", sans-serif` > - For `ja` : `font-family: ""Segoe WPC"", ""Segoe UI"", ""SFUIText-Light"", ""HelveticaNeue-Light"", ""Noto Sans"", ""Meiryo"", ""Hiragino Kaku Gothic Pro"", ""Source Han Sans J"", ""Source Han Sans JP"", ""Source Han Sans"", ""Sazanami Gothic"", ""IPA Gothic"", sans-serif` > - For `ko` : `font-family: ""Segoe WPC"", ""Segoe UI"", ""SFUIText-Light"", ""HelveticaNeue-Light"", ""Noto Sans"", ""Malgun Gothic"", ""Nanum Gothic"", ""Dotom"", ""Apple SD Gothic Neo"", ""AppleGothic"", ""Source Han Sans K"", ""Source Han Sans JR"", ""Source Han Sans"", ""UnDotum"", ""FBaekmuk Gulim"", sans-serif`  is acceptable either."
18810|bpasero, I think it's not fixable in VSCode. Those who are interested into the details, may take a look at the discussion for Atom: https://github.com/atom/atom/issues/11442  IMHO, it's a pity simple things like this typography issue are plaguing these wonderful new tools.  We came to an agreement to close the Atom's issue for now - do you think we should do it for VSCode as well?!
18811|"I would also like support for projects and multiple git roots. The code I frequently use is found in several git repos and being unable to switch between them without closing my current workspace and opening another just to turn around and close that one to open the previous is exhausting. If I add the parent folder where all my repos are housed then I gain the ability to navigate and search among my files but I lose git integration. It's a real bummer.  The line between ""text editor"" and ""IDE"" is pretty dang blurry and I don't really care what VS Code is labeled as. What I do care about is what a tool can do and how painless it is to use. I think adding project support would alleviate a lot of friction for folks like me."
18812|@bgashler1 you mention that you're looking into a solution that will allow people to choose whether they want the working files, tabs or both what about none? is that an option? depends on the project and language I'm working on none can be great for scripting like PowerShell. :)
18813|Thanks to everyone who took the time to join the call today and provide feedback, we really appreciate it. @anyong has done a great job already summarising what we presented but I will add a few more details below and some screenshots.  ### Visual design  First, this image indicates how we think tabs might look in VS Code: ![image2](https://cloud.githubusercontent.com/assets/1704059/14716846/b384acc2-07e6-11e6-98c9-7a450ff2f4c3.png)  We are aiming for a lightweight, non distracting look, something that fits in well with the rest of VS Code. We haven't yet drawn up what it would look like in a light theme.  As you can see in the above image, tabs contain a close button to the left of the name. When the file contains unsaved changes we show a dirty indicator where the close button is.  Hovering over a tab will show a tooltip with the full path for the file in the tab.  ### Preview tabs  To clearly distinguish preview tabs from open tabs we italicize the title in the tab as in the following wireframe. ![image1](https://cloud.githubusercontent.com/assets/1704059/14716802/83765b0c-07e6-11e6-9c24-e1e611b9f327.png)  We discussed actions for promoting a preview tab to a full open tab: - Editing content inside the tab - Double clicking a file in the explorer - Double clicking the preview tab in the tab group  ### Overflow  Tabs open to the right of the active tab. If there is not enough room to show all of the tabs in a tab group we overflow the tabs. We do not truncate the name of the file inside the tab to make more room for more tabs.  We show a chevron whenever there is an overflow. Clicking on that chevron will show a quick open dialog that lists all of the tabs in the tab group, allowing the user to find the tab they want to view.  Clicking a tab that is currently in overflow will bring that tab into view.  ### Navigating tabs  The following commands allow users to navigate amongst tabs: - Ctrl-Tab shows a list of all tabs inside the active tab group:   ![image3](https://cloud.githubusercontent.com/assets/1704059/14717339/e70a02ca-07e8-11e6-95c4-125b6da3c87a.png) - Ctrl Alt Tab shows a list of all tabs inside all tab groups   ![image4](https://cloud.githubusercontent.com/assets/1704059/14717356/0c0f134e-07e9-11e6-8d55-fddf7689de10.png) - Quick open shows the linear history of all tabs   ![image5](https://cloud.githubusercontent.com/assets/1704059/14717401/3c43f1ba-07e9-11e6-856a-32260e01cfcf.png)  ### Working files  We renamed working files to open editors to better reflect what this really is.  The list of open editors works identically to tabs. We just list them in the explorer rather than visualising them as tabs.  If a file is open in two or more editor groups we show this in the open editors list: ![image6](https://cloud.githubusercontent.com/assets/1704059/14717499/bd28dc8c-07e9-11e6-9d0d-32b4b4b65ec4.png)  Any editor that the user opens shows up in the open editors list. So for example, the diff editor shows up like so: ![image7](https://cloud.githubusercontent.com/assets/1704059/14717539/f1386f4c-07e9-11e6-896f-ef76e4f0e559.png)  Each group only contains one preview tab.  The chevron at the top right of the active editor group indicates whether or not there is a stack of editors. ![image8](https://cloud.githubusercontent.com/assets/1704059/14717662/62bbb5d4-07ea-11e6-876c-1901a72e1441.png)  In this case, closing an editor will reveal the editor below it in the stack, rather than closing the editor completely.  Closing an editor (for example with Ctrl-W) also removes the editor from the list of open editors.
18814|@joaomoreno this looks ok from my side, can you merge this in?
18815|"Oh you're absolutely right. That makes total sense off course because it's the same as in the finder window... Maybe it should be added to the popup menu when left-clicking a file?  <img width=""184"" alt=""screen shot 2016-04-21 at 19 00 14"" src=""https://cloud.githubusercontent.com/assets/1913805/14717778/51e8cfb8-07f3-11e6-94b2-a6b72573e9ff.png"">  Would've saved me some mouse time in the past :)"
18816|@stevencl   > To clearly distinguish preview tabs from open tabs we italicize the title in the tab as in the following wireframe.  In addition to italicize it, it can be great if there was an option to dim the colors of the tabs to make it _really_ clear.  As I wrote before I'd also want to know whether there's an option to have no tabs or open editors at all, this can be useful scenario for people that do scripting e.g. PowerShell.
18817|@eyalsk it was mentioned in the discussion that tabs and open editors should be independently enabled or disabled for either/both/none.
18818|Thank you! thank you for all the hard work and efforts to make VSCode amazing and it really is amazing, it's by far my favorite editor now. <3
18819|You can easily find the difference between kimbie Dark and light(Visual studio) theme when you launch the installed extension window from command palette and select any item from the list. Find the below gif screenshot to get exact repro steps. ![extinstalledissue](https://cloud.githubusercontent.com/assets/17735796/14718481/c8195326-07ab-11e6-94e8-7eea6da62a42.gif)
18820|@anyong thanks! :)
18821|@bpasero I'm reasonable confident it will work fine on OS X, it's completely untested on Windows atm. It might be best to defer to May considering I'll be gone starting next week (only 1 work day after today). I guess we'll make `--user-data-dir` for `sudo` a temporary thing in the April release.
18822|Hi **@SamVerschueren**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <span>We will now validate the agreement and then real humans will evaluate your PR.</span>  TTYL, MSBOT;
18823|Rough translation using translate tools:  **Multiple recommendations for VSCode** 1. When the cursor is on opening tags in HTML the corresponding closing tag should be highlighted 2. Add custom highlight effects such as bold, italics, underline, color, instead of just a grey rectangle 3. Do not associate file type in OS with VSCode on installation 4. Allow customizing CJK font size and font family https://github.com/Microsoft/vscode/issues/5260 https://github.com/Microsoft/vscode/issues/3702 5. Portable zip https://github.com/Microsoft/vscode/issues/329
18824|"I also would like to see the git integration work when your workspace contains multiple repos, but I just want to make sure folks like @Loren-Johnson realize they can have multiple vs code windows open simultaneously.  This is in response to: ""unable to switch between them without closing my current workspace"""
18825|I don't know what happened, but i downloaded VS code today and ran it, and it started working. ty!
18826|@AlexZeitler does this happen consistently or was it a one off? The actual crash seems to be within V8.
18827|We are tracking issues for the C++ extension here: https://github.com/Microsoft/vscppsamples/issues
18828|@outcoldman thanks for your input. I fully agree that @shanselman and the ASP.net team do a great job.  An difference between the ASP.net project and ours is that we aggressively dogfood and this 'luxury' allows us to also use a more aggressive development process that gives us more velocity. We use the PR model in end games and for contributions inside the team to areas which are mostly owned by someone else. We currently have no plan to go with a full PR model.   We have decided to make our alpha channel available and will update the web site etc, which will happen soon. This will give you nightly builds and this was a great suggestion.
18829|(1) @aeschli (2) @alexandrudima (3) @joaomoreno. Do we do that? (4) @bpasero & @alexandrudima (5) @joaomoreno
18830|@jssmttgit can you please provide more details. May be a screen cast about what you see. I have no problems entering latin characters like èüéöäà
18831|I could setup xcode using instructions for your extension - thanks! Regarding the terminated event ignored, that is a dup of #5598 which is fixed now.  There have been multiple issues which have made the thread experience bad. These issues have been covered by the following commits:  66dcd04 e987744 05d8d9e b1b0dd5 619f10e  Previosuly on Continue vscode would continue all the threads. This is now changed that only the current debugged thread is continued. Some behavior has been changed with the allThreadsStopped, because I believe there was an issue. @edumunoz please check commit 66dcd04 and please try the cpp thread scenarios with latest version of vscode @felixfbecker I have checked PHP after all these fixes and it looks good to me, please check it on the alpha version of vscode (which should update in 10minutes) and let me know if you see more issues. Thanks for reporting this and sorry once again for the slow response.
18832|Hm, strange, I can't reproduce this. It's not that you just look at the new theme in the preview mode (with the theme picker window open, but don't press enter)? How do switch between the file? Clicking in the explorer?
18833|"@jrieken I was able to reproduce on latest alpha. Use the new trace options shows the following tsserver communication:  ``` Sending request: completions (80). Response expected: yes. Current queue length: 0 Arguments: {     ""file"": ""p:/mseng/VSCode/Playgrounds/bugs/5611/script2.js"",     ""line"": 3,     ""offset"": 7 }  Response received: completions (80). Request took 8 ms. Success: true  Result: [     {         ""name"": ""MyVar"",         ""kind"": ""warning"",         ""kindModifiers"": """",         ""sortText"": ""1""     } ] ```  Adding the following line to jsonfig.json makes everything work again:   ```         ""module"": ""commonjs"" ```  Should we consider adding this line. Or is this a deeper TS issue"
18834|This issue was moved to OmniSharp/omnisharp-server#214
18835|(3) We let Windows know that Code can open a bunch of extensions. If there is no other editor for them, then Windows automatically chooses Code to be the default application to open them, as far as I know. (5) #329
18836|"Tasks are designed as light weight wrappers around an existing task runner like grunt or gulp. VSCode's task system does is starting such a gulp or grunt task and parses its output to produce errors. The limitation with this right now is that there can only be one command executed at any given time and that tasks must be used with the same command. So for example  ``` json {     // See http://go.microsoft.com/fwlink/?LinkId=733558     // for the documentation about the tasks.json format     ""version"": ""0.1.0"",     ""command"": ""gulp"",     ""isShellCommand"": true,     ""args"": [         ""--no-color""     ],     ""tasks"": [         {             ""taskName"": ""build"",             ""args"": [],             ""isBuildCommand"": true,             ""isWatching"": false,             ""problemMatcher"": [                 ""$lessCompile"",                 ""$tsc"",                 ""$jshint""             ]         }     ] } ```  uses gulp ti run tasks. When the build task is executed (e.g. gulp build) its output is checked for less, tsc and jshint errors. The output of other gulp tasks like for example gulp deploy would not be checked for errors.  @NikosEfthias what exactly do you want to achieve?"
18837|@bpasero could this be a consequence of the electron update. It works in 1.0 and doesn't in 1.0.1-Insider.
18838|how can i use multiple tasks not at the same time for example in some part of my project i need to run that particular js file not the entire file so as in the example i created a task for this and on a less file i wanna compile it so i wanna create another task definition to do so but i can only have one task per project with this design @dbaeumer
18839|@Tyriar Happens quite consistently and on multiple machines (VMs).
18840|> Ctrl-Tab shows a list of all tabs inside the active tab group:  Finally! Tabs or not, this is the behaviour I've been waiting for! No more getting lost in my file history.  > Closing an editor (for example with Ctrl-W) also removes the editor from the list of open editors.  Great! This will hopefully feel more intuitive and help clean up the clutter in _Working files_.  Now I'll just wait for https://github.com/Microsoft/vscode/issues/5554 to close.
18841|"Thanks for the many details, let's catch this sucker!  1-4 are the correct syntax: `protocol://host:port`. I have pushed 79b25eaac88479ff0d374d0dba0317f3ba5228f1 which adds a regular expression validator, so you'd get a warning next time you try to configure it like 5-8. 👍   No error tells me the request is working but the proxy is somehow returning an empty response or similar...  Let's try something else... what happens if you use `""https://10.200.68.75:8080""` and `true`?"
18842|Got it! Thanks!
18843|From: Nikos Efthias [mailto:notifications@github.com] Sent: Thursday, April 21, 2016 8:57 PM To: Microsoft/vscode vscode@noreply.github.com Subject: Re: [Microsoft/vscode] cannot add more than one task and documentation does not help at all (#5606)  how can i use multiple tasks not at the same time for example in some part of my project i need to run that particular js file not the entire file so as in the example i created a task for this and on a less file i wanna compile it so i wanna create another task definition to do so but i can only have one task per project with this design @dbaeumerhttps://github.com/dbaeumer  — You are receiving this because you are subscribed to this thread. Reply to this email directly or view it on GitHubhttps://github.com/Microsoft/vscode/issues/5606#issuecomment-213090165
18844|Are you aware of any prior art on other editors? I could support the idea of Modifier + double click but I’m against your former suggestion of “double-double clicks” which isn’t a standard user interaction.
18845|No. I'll let the community pick which method we use. I'm not married to any of those bullet points.
18846|That fixed it for me on 1.0 as well.
18847|In the designs we discussed in issue #224 we talked about how preview editors would show up in the open editors list. When you use Ctrl+P to go to a file which is not already open it will be opened as a preview and will show up in the list of open editors.
18848|"On a Surface Pro (150% scaling) attached to an external monitor (100% scaling), 1.0.1-insider still has blurry UI elements. All the screenshots below are scaled so the 100% versions are shown at actual size.  I think it's definitely getting better though.  **External monitor (100%)** <img width=""420"" alt=""scaled-to-100"" src=""https://cloud.githubusercontent.com/assets/1077648/14723897/240986c6-07c8-11e6-9214-74e8fff81ec6.PNG"">  **Surface Pro screen (150%)** <img width=""420"" alt=""scaled-to-150"" src=""https://cloud.githubusercontent.com/assets/1077648/14723948/5ce83a28-07c8-11e6-9cb5-f8f4ffd3dc55.PNG"">  For comparison, on `1.0.0`: **External monitor (100%)** <img width=""358"" alt=""1 0 0-100"" src=""https://cloud.githubusercontent.com/assets/1077648/14724002/a0d5cbe2-07c8-11e6-95bf-18166d5c192c.PNG"">  **Surface Pro screen (150%)** <img width=""358"" alt=""1 0 0-150"" src=""https://cloud.githubusercontent.com/assets/1077648/14724026/bac0a220-07c8-11e6-891b-1dac5838fbdb.PNG"">"
18849|Hmm I don't know whether this was considered but I thought about it just now, multiple monitors suppot! in Visual Studio I can drag a tab to a different monitor and create a new tab window/view, is something like this being considered? I'd imagine it's possible to achieve this by creating a new VSCode process and drag tabs between processes through inter-process communication, the same goes for open editors, just an idea, :)
18850|So how does the Preview Tabs differ then? Do they disappear as soon as you switch to another editor?
18851|@egamma thank you for answer
18852|In both cases, tab or editor groups contain one preview tab.  With tabs, a preview tab sits next to any other open tabs. Whenever you preview a new file, the content in the preview tab is refreshed with the content of the newly previewed file.  With the open editors/working files list, the name of the previewed file shows up in the list next to the other open editors. Whenever you preview a new file, the name of the newly previewed file replaces the name of the previously previewed file in the open editors list.
18853|This issue was moved to Microsoft/TypeScript-TmLanguage#151
18854|Fixed merge conflict. @alexandrudima @egamma any updates on this PR? Could you add it to April milestone?
18855|@mquandalle happy to review another PR but from my side I am not planning work on this atm, so moving to backlog.
18856|"Please, please, please can you make ""preview tabs"" optional - i.e. have an option to make anything auto-promote to a permanent tab and never have stuff disappearing. I know you're discussing ways to visually distinguish tabs that are temporary but, frankly, that won't work for people like me who navigate between files so quickly (particularly with Go-To-Definition et al.) that there's no time to visually inspect the tab to divine how it might behave, I don't remember how I opened a file or whether I happen to have edited it and I find it really disconcerting when files vanish seemingly at random. (I know it isn't random but it might as well be.)  I typically bury myself in open tabs until I have finished a unit of work and then close them all at the same time that I go to commit."
18857|(4) fair request, not possible though
18858|This issue was moved to Microsoft/vscode-htmltagwrap#3
18859|(1) already is happening, the corresponding tag is highlighted (with a background color) ![image](https://cloud.githubusercontent.com/assets/6461412/14724645/c921fc0c-0817-11e6-9088-342fe0d5cfdf.png)
18860|> perf - slow caches here and there  can we have some CPU profiles first before we start optimising the caches?  > they are slow because every check for the size iterates over all elements and puts them in an array.  I think that is only true if they are abused in a bad way. My assumption is that the glob pattern cache carries very little number of patterns that are mainly constant and do not change. The check for property names in the cache happens maybe 10-20 times depending on the number of patterns used and then stops calling because the cache is bypassed.  > For example, the worst case for normalizeNFC is to allocate an array with 10000 elements just to figure out that the cache is useless.  please explain that in more detail, I do not see the allocation of an array with 10000 elements  > Use an array and binarySearch or manually keep track of the length  Why not benefit from the fact that the cache can be hashed with a key that is suitable? using an array with search seems like a bad choice unless my key is not good for using a map.  Also, how does this help for the case of the bounding condition being hit? I think the only choice is to either not using a cache at all or setting the bounding condition high enough that it is unlikely to get hit. Since the NFC case has another condition to check on (ASCII), we could probably remove the cache there. For the glob matching I would like to prevent doing repeated stuff with regexes because glob is on a very critical path for getting hit over and over.
18861|Thanks @eyalsk, yes we did consider it. Ultimately we would like to be able to support this but the work required to share context between multiple processes is quite significant and so it is unlikely to happen while we work on the rest of the document management UX. It's definitely something we want to do though.
18862|@be5invis I am relying on you guys telling me the best option. I can make such a change in the font-family list easily tomorrow.
18863|"I see. Then I would prefer for Ctrl+P opening a file as permanent. Go to definition is another matter where a preview might actually be beneficial. But as it is now, my work flow seems to have files ""vanish"" since I try to work keyboard only and making an preview permanent requires double clicking."
18864|I’m not planning to work on this either.
18865|It looks like there is no issue and this could be closed. @BurtHarris?
18866|Filed https://github.com/electron/electron/issues/5246
18867|@yasirs looks like you opened developer tools in VS Code, could that be true?
18868|Yes, closing this due to its age and I use it all the time without any problems.
18869|Wow cool 👍
18870|@stevencl I'd be happy if dragging just opened a new vscode window with that file open (maybe with the same folder open too).
18871|Thanks for the suggestion. We will have a command that you can execute via some keybinding that will promote a preview tab to a permanent tab.  But we'll also spend more time thinking about the actions that cause a file to open in a preview tab or a permanent tab as we get deeper into the details when we start implementing these designs. We'll also consider a setting or some other way to specify when and how files are opened as preview or permanent tabs.
18872|Thanks @Tyriar, we will keep looking into this. If there is a way we can make it work well, we'd love to be able to do it.
18873|"Here's a simple comparison of the still-reproing Insiders build with a regular build that uses the ""--disable-gpu"" workaround suggested by @artsjedi. <img width=""553"" alt=""comparison of blurry and clear"" src=""https://cloud.githubusercontent.com/assets/1475660/14725536/5572f4dc-07d1-11e6-8a22-24fd301c3388.PNG"">"
18874|:+1: Thanks for fixing this so fast!
18875|Yes. I'd just installed it and was exploring the interface.
18876|@stevencl I'm just worried that it will require even more work to add it in the future so _when_ you improve the infrastructure make sure to keep it in your backlogs! ;)
18877|"Do you have the setting enabled in your config?  ``` {     ""editor.selectionClipboard"": true } ```  (File -> Settings -> User Settings, and then edit the right-side file.)"
18878|@bgse does not work when i middle click editor just looses focus nothing is pasted
18879|Closing off as cannot reproduce
18880|@joeaudette that sucks. did you make sure it was case sensitive? vnc is not as performant. Same issue in 16.04 LTS I just tried. Damn Ubuntu. It works fine on Fedora 22.
18881|👍   ping @alexandrudima @egamma
18882|Thanks everyone for the great discussion on this topic. We appreciate all of the feedback and especially the insight on how you use the tool in both english and native languages. This was valuable input into our UX design meeting @egamma mentioned above, so I wanted to share with you the results of our conversation.   Here is what we decided: - always show the english label - show the translated label below the english label IF the language is !== en-US - allow search on both english and translated labels - remove the keywords, the above experience makes these unnecessary  We only have a small window to get this into the current iteration and given the feedback here, we think we've got the right design, so we're going to push forward with this plan.  We expect to do another Insiders drop early next week and then ship this in the April release. From there, we can then make modifications to the experience in the next iteration (if necessary!).  Thanks again, we think we will have a much better and much more natural experience because of your input.
18883|I observed that with 1.0.1-alpha build the debugger strings are not localized and displaying in English, irrespective of provided locale. Looks like this is regression. ![image](https://cloud.githubusercontent.com/assets/17735796/14728371/d449cb52-07e8-11e6-9abd-4230abeb4cde.png)
18884|Happying ending 😄
18885|tabs please
18886|Great to see this. Love the lightweight proposal and that you are finding a way to not break the working files experience.  Looking forward to giving it a spin. Thanks for listening.
18887|May be the compatibility is not good enough...
18888|Hello, the development team doesn't speak Chinese, sorry. Can you please find someone that helps you translate the issue to English.
18889|### I Friken Love YAML  ..so I gave it a try.  https://github.com/djabraham/vscode-yaml-validation  https://marketplace.visualstudio.com/items?itemName=djabraham.vscode-yaml-validation  Uses the well known js-yaml parser with some TS types added, converts the returned structures to their JSON AST Equivalent, and then uses the standard JSON validation already built into VS Code. The excellent example cited above, is actually the source for that validation.   This still needs some work, because the completions aren't being returned. But basic validation seems to be working. I will put some more time into it, when I can.  ![screen shot 04-21-16 at 08 31 pm](https://cloud.githubusercontent.com/assets/4002604/14729716/65c94ee8-080e-11e6-8d6c-174ae252107d.PNG)  ![screen shot 04-21-16 at 08 30 pm](https://cloud.githubusercontent.com/assets/4002604/14729711/5bda5576-080e-11e6-8f9f-192381259d35.PNG)
18890|@egamma  1. Create a new file, and type something 2. Press down Ctrl+S more than one times as quick as you can 3. VS Code will open duplicate save dialog
18891|`--disable-gpu` doesn't work for me - still exhibits blurriness when scaling on external monitors:  **`1.0.0`** ![image](https://cloud.githubusercontent.com/assets/1077648/14730230/71b65616-07f9-11e6-8351-994370a329f5.png)  **`1.0.1-insider`** ![image](https://cloud.githubusercontent.com/assets/1077648/14730243/916e952c-07f9-11e6-8466-9ac9264488cb.png)  Surface Pro 3, Windows 10 build 10586
18892|"@aeschli  html code in the php file `Untitled-1.php: <ul id=""nav"">     <li>1</li>     <li>2</li>     <li>3</li> </ul>`"
18893|@stevencl That seems like the best of both worlds. Looks wonderful! The tabs appear as I would have expected them to in order to fit in with the rest of the UI, and it sounds like I'd be getting exactly what I want with the Working Files changes :)  Will Open Editors support more than 2 editor groups? Just wondering how you name them if it's more complicated than Left and Right.
18894|@iscraft thanks for clarifying, I believe that's covered as part of this https://github.com/Microsoft/vscode/issues/670
18895|Duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/81
18896|@outcoldman April's development is finishing up on Monday and @alexandrudima is still out. Since he's the one who needs to review this I don't think it will make it in.
18897|@satokaz can you use Cmd+~ instead?
18898|This is https://github.com/electron/electron/issues/4261
18899|Moving to omnisharp as the project.json completion support will be provided from there in the future.
18900|This issue was moved to OmniSharp/omnisharp-vscode#236
