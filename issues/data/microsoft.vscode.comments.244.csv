24301|Ahh!!!  I just figured it out!  You guys most likely don't have Segoe UI installed.  So what's happening is your font is SF (San Fransisco) and mine is Segoe UI (which is why I couldn't reproduce).  When I switched to SF, then I was able to reproduce.
24302|Looks like you're running into https://github.com/npm/npm/issues/12887
24303|just fyi, I updated to node 6.2.1 but the debugger is still not showing the breakpoint. I tried it with 1.1.1 and the most recent insider as of today: 1.2.0 (7ccb21d7e7256a7d42f3dda8b2d3721b8e59724f)
24304|@jrieken the node-copy-paste module only copies text. This will not work for images. I am attempting to create a markdown extension that will allow the user to copy an image to their clipboard and paste it into their markdown document. When the paste occurs, the extension will save the image to an appropriately named folder and insert the text to display the image when the markdown is compiled. I know this is a closed ticket, but most tickets I have seen in regards to copy/paste reference back to this one.
24305|"Actually, not even the San Fransisco Font was working, so anyone seeing this problem was actually seeing Helvetica Neue Light using our current rule in our CSS:  ``` .monaco-shell {     font-family: Segoe WPC,Segoe UI,SFUIText-Light,HelveticaNeue-Light,sans-serif; } ```  Note that `SFUIText-Light` does not work in Chrome.  The [ideal way](https://webkit.org/blog/3709/using-the-system-font-in-web-content/) to use this system font is not available in Chrome yet.  So the workaround that Chrome has introduced is `font-family: 'BlinkMacSystemFont'`.  We'll want to keep our eyes on Apple's progress in standardizing the aforementioned ideal way (once Chrome fixes [this issue](https://bugs.chromium.org/p/chromium/issues/detail?id=554590) we should switch to the ideal way).  So what does this mean?  Well, we Helvetica Neue Light does not work as it should with italics unless we explicitly set a font-weight of 300.  ## Possible Solutions  **1. Recommended: We can temporarily use San Fransisco** by using the `'BlinkMacSystemFont'` value.  Later we would adopt the ideal way.  For now, the CSS would be this...  ``` .monaco-shell {     font-family: Segoe WPC,Segoe UI,'BlinkMacSystemFont',HelveticaNeue-Light,sans-serif; } ```  <img width=""584"" alt=""screen shot 2016-06-03 at 12 02 36 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/15789836/1cd7e2f8-2983-11e6-8c56-2b053d9c5bbe.png"">  As you can see, we may want to adjust some things like kerning and font-weight.  **2. We can standardize our font to always be Segoe UI** on all OS platforms (like it is on Windows, and also on my Mac since I have it installed) by installing the font with VS Code for all users (possibly the font license wouldn't allow this?) <img width=""588"" alt=""screen shot 2016-06-03 at 12 13 20 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/15790127/9808da94-2984-11e6-81f1-c96d174957e9.png"">  **3. Less desirable: We can avoid using San Fransisco for now** and switch HelveticaNeue-Light to HelveticaNeue to fix the problem.  However, this is Mac's old system font and is considered less legible from a UX perspective.  ``` .monaco-shell {     font-family: Segoe WPC,Segoe UI,HelveticaNeue,sans-serif; } ```  <img width=""584"" alt=""screen shot 2016-06-03 at 12 02 36 pm"" src=""https://cloud.githubusercontent.com/assets/11839736/15790119/8a07d558-2984-11e6-8632-c2eb74e3bc10.png"">"
24306|Please see this https://github.com/Microsoft/vscode/issues/6759#issuecomment-223628796 for possible solutions.
24307|👎
24308|If fuzzy search can be brought to parity with other editors it would make VS Code the hands-down choice for me. I still prefer it for smaller projects, but for larger ones I really have no choice but to use Sublime or Atom.  Not sure what the timeline looks like on this.
24309|+1
24310|It's several babel projects on two machines. Some projects are the same.  A project that was initially slow, suddenly is fast and the problem is gone. It seems horrible task triggered by save keeps restarting until something changes, then things are good. In good state a save is less than 3 s of high cpu. On the computer that is now fast, I can't find a slow project anymore, so maybe it's once per installation. One machine was new install, other an upgrade to try to remedy the problem, both to 1.1.1 in the last days.  If I see it again I'll do some lsof and such to try to figure out what's happening.
24311|I wouldn't be surprised if this was a term.js bug
24312|Related to #1822 and #1824
24313|@tmkn this bug is about that a breakpoint **is** hit but that the call stack view stays empty. Is this really the problem you are seeing? If not please create a new issue with detailed steps for how to reproduce the problem.
24314|"@weinand Yes, I set a breakpoint but the stack view stays empty, I can press continue and by doing that the program then finishes correctly.  I just looked at the attached gif again and it behaves exactly the same however my call stack stays empty(there's no ""No callstack available"" message like in the gif).  Also certain breakpoints work, it's just those that in my case are set inside a handlebarsjs registerFunction won't show any information.  ``` //breakpoints here work fine hbs.registerHelper(""include"", () => {     //any breakpoint here triggers this behaviour }); ```  If wanted I can try to isolate the behaviour to a short snippet for easy reproduction. As I said it appeared ever since I upgraded to 1.0 regardless of os or node version."
24315|Glad to hear the functionality will change :). Thanks!
24316|By analyzing the blame information on this pull request, we identified @jrieken and @egamma to be potential reviewers
24317|+1 for middle click in windows should open new instance.
24318|"ok thanks,I'll check it. And here's another problem, maybe my method is wrong, anyway,here it is: when I'm writing a cpp program, if I choose ""open a folder"" such as the Desktop folder and edit the existing file and type an ';',which usually don't need to automatically delay a quick suggestion, but as the following picture shows,it does, and it's really awful when I just wanna type an CR, it type the top suggestion of the list so that I have to delete it. Please tell me how to fix it, thank you very much. PS:forgive my English since it's not good :0, I hope you understand what I'm saying. ![image](https://cloud.githubusercontent.com/assets/9619115/15797990/03e1779e-2a5c-11e6-8c5e-3df76f1b8575.png)"
24319|@MarkPieszak you can right click on a folder in the explorer and pick to search in that folder. That will automatically fill in the advanced options under search.
24320|@Sequoia VS Code should update the file in place when it changes on disk, we do not prompt however. Does this happen with a file opened from a workspace (folder) or a file outside of the workspace? Is it reproducible always?
24321|@bgashler1 nice findings! we recently changed our font on Mac OS to San Francisco (see https://github.com/Microsoft/vscode/issues/7123). It turns out on Capitan we always used Helvetica for quite a while without even noticing it.  With this change, I no longer see the font dropping when changed from normal to italic. I still see a little bit of stronger weight when the font is italic vs non italic.
24322|"Note that with https://github.com/Microsoft/vscode/issues/7123 we are using ""San Francisco"" font on OS X now. We never used Segoe on OS X because that is a Windows font. Instead we did fall back to Helvetica."
24323|Hi Team, I have the same issue with the latest build of vscode. I open my project with vscode, the `foo.asar` is located in `dist`. I never intend to open this file in vscode at all. But vscode is able to list its contents. That's why the file cannot be deleted. I'd like to know, if vscode has the possibility not to preview asar file content.
24324|@jrood it is, we're likely moving to another lib in the next version though
24325|Added `workbench.action.terminal.focus`, it doesn't have a keybinding by default and is coming in v1.3.0
24326|Duplicate of https://github.com/Microsoft/vscode/issues/48
24327|We should try to set the `process.noAsar` flag early on. This will disable any support to view *.asar files in the explorer but this was also never intended.
24328|Thank you for your help @weinand, much appreciated!  I just tried using breakpoints in the chrome node-inspector, same here, breaks do not work.  I don't understand enough about how it all works, is the break line issue more of a problem with the generated source maps?  Is something to possibly report as an issue w/ Meteor or is more of an item that can only be enhanced to work on the node-inspector / VSCode end?  The debugger statements work, so it's not a big deal, but it is convenient to not have to type debugger; all over the place :)   Not quite the place for asking, but curious since you played with it for a few, what are your initial thoughts of Meteor?  The biggest issue for me so far is that I really want to use TypeScript and it's not a trivial task to setup with Meteor & React, dynamic types is JS just don't feel right.  :)   Just curious, what kind of JS frameworks do you/others on the team like to use?  Anyway, thank you again, I'm looking forward to the update.
24329|+1
24330|@Tyriar -- npm works normally in plain cmd (at least in my case). The problem shows only in integrated terminal.
24331|@deathmood people in the issue are experiencing a similar situation:  > I have the same issue but only when I execute npm in something other than a regular cmd.exe window. If I use git bash, or cmd.exe from within Intellij the issue occurs.
24332|Hi all, prefer :+1: reactions on the original issue comment as that helps us with prioritization.
24333|@jrieken I mean inactive extension, like this in chrome plugin manager ![image](https://cloud.githubusercontent.com/assets/9499016/15799234/13ecdbf2-2a88-11e6-9373-ec362f8ebfe6.png)
24334|From the snapshot, I suppose what @builden wants is enabling/disabling installed extensions.
24335|Actually we cannot set `process.noAsar` because that disables loading of any renderer side electron module...
24336|@Tyriar I just ran into this too, super weird. Gotta find steps to reproduce...
24337|Ok I got it, needs some serious fixing.
24338|@bpasero A mimetypes can defines in a package.json of languages extension. But the editor in vscode can not use it. If i write a new editor for an known mimetypes defines in extension, I must also use  'modesExtensions.ModesRegistry.registerLanguage' to register this mimetypes again.  I think it's not necessary to repeat the definition for a same mimetypes. So, if you think I'm not doing it right, maybe we should do something similar in other places.
24339|"Oh my god thank you, tried everything but that! Maybe a helpful hint could be put in the ""Search"" to let people know of that feature? Seems like it'd be something very common! Thank you Ben 👍"
24340|As of 1.1.1, I'm not seeing this anymore. I'm not sure when exactly this stopped happening, though.
24341|What about _expanding_ the `Install Extension` command, creating commands for each _Category_?   This way, the user could search specifically for `Themes`, `Languages`, `Debuggers`, etc, and its category could be applied as the first filter, regardles the relevance criteria that already exists.
24342|This should be addressed, now that we're using  San Fransisco font.  It's likely that on older versions of Mac OS that this will remain an issue, due to Helvetica Neue-Light and it's buggy consistency in font weight when italics are used.  The fix would be to switch from Helvetica Neue-Light to Helvetica Neue (regular).  Any objections on changing that as a fallback for San Fransisco?
24343|That's great, @bpasero!  I'll leave this issue open and look into the font weight.  Can you put a build up that has the change in #7123 and your stacks so I can look into it?  Or, is your branch going to be merged in Alpha soon?  If so, I can just look at Alpha branch.  Thanks!
24344|Multiple terminals is planned for the June release https://github.com/Microsoft/vscode/issues/6458  I don't see terminals being made as actual tabs due to the way that vscode is, full screening or making panels more convenient to expand is definitely an option in the future though.
24345|"Not sure if I should have opened a new issue or not. ""html.format.extraLiners"" doesn't work with some tags. - VSCode Version: Version 1.1.0 (1.1.0) - OS Version: OS X 10.11.5 (15F34)  Steps to Reproduce: 1. Create an HTML file. 2. Paste the following into the HTML file:        ``` html    <body>      <h1></h1>      <h2></h2>      <h3></h3>      <h4></h4>      <h5></h5>      <h6></h6>      <address></address>      <dl>        <dd></dd>        <dt></dt>      </dl>      <hr>      <pre></pre>    </body>    ``` 3. In your settings, add        ``` json    ""html.format.extraLiners"": ""h1, h2, h3, h4, h5, h6, address, dt, hr, pre""    ``` 4. Right-click on text in the HTML file, and select Format Code. 5. Nothing changes in the HTML file.  What should happen instead:  ``` html <body>    <h1></h1>    <h2></h2>    <h3></h3>    <h4></h4>    <h5></h5>    <h6></h6>    <address></address>   <dl>     <dd></dd>      <dt></dt>   </dl>    <hr>    <pre></pre> </body> ```"
24346|@joaomoreno do you have any reason against using a community lib for this if I get the deps approved?
24347|Everything is on alpha.
24348|@featherJ do you have a concrete example?
24349|"Is there an ""update all"" button? I noticed this is missing in the pre-1.2 release and would be quite good to have. There is ""list all outdated"" but not ""update all outdated""."
24350|Same issue here. But my situation is different.  I turn on auto save when lost focus. I make some changes and then go to terminal reformat the same file. When I go back to vscode, it won't reload the disk changes sometimes, in which case if I make changes to it again, it will promote the messages. And click compare doesn't help, it will keep promoting the messages and the two way comparison won't show up.
24351|Is this with files in a workspace (folder) or outside / when you do not open a folder?
24352|Same issue here :( Really want to get VS Code to work.
24353|Yes, it's a file in my workspace.
24354|Nevermind. It seems to be working for JSON autocompletion too, after triggering force-show autocomplete (CTRL+Space).
24355|if it can help -- just checked -- in my case npm runs normally in git bash
24356|"> ...since this message covers the debugger controls. And I can't use the keyboard enter/esc key - I have to grab the mouse, since the errors aren't modular and do not receive focus.  I've noticed that I'm actually able to close the warnings if I press esc twice. As of now the warnings reappear 4-6 times every time I want to step forward/continue (snowball effect is a factor I guess). And there is a a couple seconds delay between each action which makes my debugging a nightmare... I find it ""easier"" to debug via `console.log()` rather than through interrupting right now."
24357|"did you try `code ""%cd%""`?"
24358|this would be a highly language specific feature... Don't think it will be ever fully possible.
24359|oh yeah nevermind that worked
24360|"I believe this only happens when I set `""editor.scrollBeyondLastLine"": false`"
24361|Isn't there a typo in the issue text?  > The Find dialog (Ctrl+F) does allow multi-line finds  should be  > The Find dialog (Ctrl+F) does **not** allow multi-line finds
24362|@isidorn I've removed the cache for now. We should discuss why it is needed.
24363|Whats going on here, why do you resist giving us an option to use tabs? 😕  So many people like tabs including me, give us the damn option PERIOD!
24364|@johnf76 thanks for trying the breakpoints with node-inspector. This confirms that the Meteor generated source maps are somewhat unusual. So it would be great if you could report an issue w/ Meteor to get at least their opinion on that matter.  I did a very superficial exploration of Meteor, so I do not yet have deep insights. Meteor seems to be very smart and tries to help with an edit/compile/debug/go workflow. I did not fully understand what they do, but one thing that surprised me was that I saw 5 threads in the VS Code node debugger. Yes, I implemented the support for multiple threads in node-debug but I never saw any node.js based system making use of this.  The problem with all this magic is that it is sometimes a bit tricky to add other technologies (e.g. TypeScript) to this. So Meteor watches for file changes (edits) and builds the application, but how to integrate the TypeScript transpiler into this build process requires some insights that I do not yet have.
24365|"@aminroosta Seriously... can't you read? are you blind?  Funny thing is you're asking what's going on here... and then go on and assume they actually decline it or in your own words ""resist"" when in fact they confirmed tabs are coming and working on implementing it!   Some people in this world! unbelievable!"
24366|@eyalsk I spent 25 minutes reading first 20 to 30 comments. I got tired and left a comment which now seems to be a mistake fro my part.  Sorry about that.
24367|@shakvaal fixed :smiley:
24368|We cannot blame microsoft R&D to try to inovate. Tabs system has cons.  UI design is like all form of design. 90% making what user wait for, 10% making new things, trying to create a new revolutionnary and user friendly system.  all user friendly system seen as must have in new text editor today has been experimented and controversial before.
24369|@aminroosta I'll give you a tip, when you're reading a long post, read the original post and then to get the latest updates spend a min or so on scrolling from the bottom to the top.
24370|That's a good suggestion as this a VERY long feed.  On Sun, Jun 5, 2016 at 10:42 AM Eyal Solnik notifications@github.com wrote:  > @aminroosta https://github.com/aminroosta I'll give you a tip, when > you're reading a long post, read the original post and then to get the > latest updates spend a min or so on scrolling from the bottom to the top. >  > — > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub > https://github.com/Microsoft/vscode/issues/224#issuecomment-223826495, > or mute the thread > https://github.com/notifications/unsubscribe/AAInRHy6TDR-opr-8ZKmW-lRUgZDOP21ks5qIwqIgaJpZM4GljE8 > .
24371|@Tyriar Thank you! It was extremely confusing before the fix :)
24372|"So this is same issues occurs to me running on Mac OS X 10.11.5.  I'm running VSC 1.1.1.  Initially I get an error ""**Extension host terminated unexpectedly.  Please reload the window to recover.**""  Clicking ""Reload Window"" results in the error being generated again.  When I leave it sitting for a few seconds, a second message appears that says ""**Error from the extension host: channel closed**""."
24373|@joaomoreno we have another issue open for @ra9r's problem right?
24374|"Personally I like the Ctrl+Tab approach. From my personal experience, tabs can get messy quickly if you have 10+ of them open at the same time. I'd say remove the ""working files"" or at least leave it as an option. I don't use it and it adds confusion for me. I'll use Ctrl+Tab from here on thanks!"
24375|win8.1/ VSC1.1/python3.5 - bug is reproduced IDLE - all correct But VSC is not IDE or сompiler, what are extension for python debugging you use? Bug perhaps between VSC & extension or extension & python, _if first - MS, we need solve :)_ If you use ext by [Don Jayamanne](https://marketplace.visualstudio.com/items?itemName=donjayamanne.python), he is having not closed issue about that [[iss#102]](https://github.com/DonJayamanne/pythonVSCode/issues/102)
24376|Some others color themes have no bug. It does not call for change themes, maybe it is help catch bug ![theme_highlight](https://cloud.githubusercontent.com/assets/15965289/15811311/24070e44-2bb0-11e6-9bab-fa73d5e19912.png)
24377|This reproduced for me quite easily like this: open file, close file, use quick open to pick the file again from history and start typing: no pinning or dirty indication at all.
24378|refs https://github.com/Microsoft/vscode/issues/792 :rose:
24379|Sorry for my carelessness. It seems that using node v5.10.1 solves the issue.
24380|Migrating [alm.tools](http://alm.tools/) to monaco (:heart:)  PR https://github.com/alm-tools/alm/pull/121   I had a working version of jumpy in alm with codemirror  ![](https://raw.githubusercontent.com/alm-tools/alm-tools.github.io/master/screens/jumpy.gif)  Will try and figure out how to add this to monaco :rose:
24381|"I delivered two changes that should improve this: For one, I am not showing group label anymore in the picker if there is only one group and this matches what the ""opened editors"" view does.  Then, when you have just 1 group open and you click the overflow icon, I just open the ""show all opened editors"" picker because that one does not talk about ""`edt left`"" but just ""`edt`"". Once you have more than one group open, things work with ""`edt left`"", ""`edt right`"", etc."
24382|Thanks.
24383|got fixed by #7202
24384|You can create markers using a [`DiagnosticsCollection`](https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L3471) which also allows for reading.
24385|There is the `rename` feature which does what you are asking for. Today there is rename for quite a few languages like TypeScript, JavaScript, Go, C# etc. Best is to file a request against the language extension you are using
24386|Looks like debugging? @rajeshbhagat can you explain what you do?
24387|there is a way to disable word based suggestions
24388|@senjacob can you try our insider build (http://code.visualstudio.com/Download#insiders) from the command line with the following arguments: `code-insiders --verbose`  And attach the output here?
24389|Can't reproduce. This is better if you show me at your desk...
24390|Unfortunately, those are symptoms of a wide variety of maladies. @ra9r, let's follow this up in #7238.
24391|Can I ask you to give me the following details? - Inside Code, open the Developer Tools (<kbd>Cmd Shift P</kbd>, type `Developer`). Are there any errors in there? Also, type `process.env` and paste that in here. - In a Terminal, outside Code, paste in here what you get from `env`.  Thanks!
24392|Yes, `scrollBeyondLastLine`.
24393|That issue ended up being [Code's shared process failure to launch with a broken `VSCODE_NLS_CONFIG` value](https://github.com/Microsoft/vscode/issues/6375#issuecomment-222916241): #6375. Doesn't seem related.  @acastaner could you try launching the processes that the extensions launch, but manually from a command line?
24394|@osjn What do you mean by dimly? Can you maybe add a screenshot?
24395|What process would that be? Because `dotnet` is already installed works just fine from the command line so I'm not sure what VSCode actually calls and with which parameters.
24396|Not at all... I just think that the hard 80 column wrap is an unnecessary remnant of the past, given the resizing capabilities of terminal emulators of today.
24397|We delegate all text rendering to Chromium, so Chromium ultimately decides how to render the text. Can you please share what characters you use, how you configure the font, and what you'd expect to see vs what you end up seeing? Do other text editors display these characters in color?
24398|@rajeshbhagat This looks like a vscode-react-native problem. Please file this issue here https://github.com/Microsoft/vscode-react-native/issues
24399|@joonhwan Please try out the [insiders build 1.2.0](https://code.visualstudio.com/insiders), where we have merged in PR #5615 that improves this behaviour. The stable release should come out any day now. Does the issue occur on the 1.2.0 build?
24400|@DustinCampbell can help you out with that.
