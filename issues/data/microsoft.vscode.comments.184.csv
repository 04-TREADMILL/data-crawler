18301|Uninstalling and reinstalling fixed the issue. However A simple reinstall didn't.
18302|@biij5698 agree and we have a feature request for this.
18303|üëç
18304|If you look at the latest in head, the PackageJSONContribution is now part of the JavaScript extension. It is used by the `JSONCompletionItemProvider` in `javascript/src/features/jsonContributions.ts` and is a regular completion item processor. All the JSON parsing logic is in a new node_module `jsonc-parser`.  The idea is that you do it the same way. You can basically copy jsonContributions.ts to your extension and feed it with your handler. Of course you can simplify this also and just have single CompletionItemProvider doing it all together.
18305|Put en-US into the locale.json file open via the command 'Configure Language'.
18306|@egamma @alexandrudima I updated this PR with one more change for the editor. I keep changes in separate commits, but the same PR, because one is depend on another one (just a common helper function).  Travis failed with some unrelated problem, could you guys bump it to run it again?
18307|The actions should be disabled when there no providers for that file. To my knowledge we register the left hand side with some `git-index`-scheme, so TypeScript and no one else is offering providers - @dbaeumer given TypeScript registers like so `{ scheme: file, language: typescript}`. I'll investigate...
18308|I believe, I should understand this is as a fishy workaround for not having a `onDidCreateServices` event in the lifecycle service. Once each and everyone consumer received an instantiation service it will use it to create more things...
18309|@jrieken yes that sounds right about why I need this workaround.
18310|@dbaeumer The issue is the TypeScript extension registers for typescript models not only for those it can reason about - files on disk. Instead of the simple document selector it should use one that selects files that are associated to _typescript_ AND that sit on disk. The context menu of the left hand side editor will then honour that.
18311|Hi **@rebornix**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Peng Lv (PENLV)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
18312|Closing and reopening in order to get the latest from `master`.
18313|Nice, thanks!
18314|This is how it looks for C#/Omnisharp which registers like this: https://github.com/OmniSharp/omnisharp-vscode/blob/master/src/omnisharpMain.ts#L39  ![screen shot 2016-04-19 at 16 21 03](https://cloud.githubusercontent.com/assets/1794099/14642437/bbab8968-064a-11e6-8069-3a069e896d64.png)
18315|"@dbaeumer Check out `vscode/extensions/json/package.json`: There we register `settings.json` to a schema:  ``` json    {        ""fileMatch"": ""%APP_SETTINGS_HOME%/settings.json"",         ""url"": ""vscode://schemas/settings"" }, ```  In the case of 'settings.json' the schema is provided by the vscode schema content provider, which gets the schema from the IJSONContributionRegistry (`platform.Registry.as(jsonContributionRegistry.Extensions.JSONContribution)`).  But the url can also be a relative location in the extension or a remote HTTP url."
18316|I thought my explanation was good enough on how to build VSCode yourself. Obviously not :-(. We also discussed making nightly builds available but haven't reached a conclusion yet.
18317|@jrieken makes sense.
18318|@aeschli thanks.
18319|@venil7 it could. Can you launch vscode from the command line using the switch --disable-extensions and check if it reproduces. If yes, could you provide the content of the JS file and the jsconfig.json
18320|"Yes, it was a little bit confusing how to produce own build. I believe that `gulp vscode-darwin` is not documented anywhere. But this gave me some idea where to look, so I finally made my own build (using it for my unmerged PR).  @dbaeumer Could you please keep this feature request open to track ""nightly builds"" status?  Honestly I do not see a reason why I (or anybody else) cannot setup ""nightly builds"" on their own, but in that case you (Microsoft) will loose telemetry and statistics, which you probably want to have."
18321|I have to admit I had never really noticed that before. I don't feel very strongly about it. Consistency is good though, so if it was a simple, inexpensive change to make I would be for it. If it was to change, I'd expect it to change in search too.
18322|@akq thanks a lot for the detailed response. We discussed a solution for this back and force and we landed on the following improvements:  - when possible we honor OS locale. So the installer and VSCode will start by default in the locale of your OS - for commands we will allow typing them in English and the picked UI language. So although VSCode might show Chinese you can still type git pull to execute git pull - we will add menu contributions to switch the UI Language - when the default locale.json is generate we will take the current UI language to avoid confusion.
18323|"> Put en-US into the locale.json file open via the command 'Configure Language'.  There is one ""small"" problem with this suggestion: when I have Russian interface, and I press F1 then start to type ""Configure Language"" - I have no matches in command palette. Direct translation of ""Configure Language"" to Russian - still nothing.  Do you understand this problem, guys?  Please, provide some way to change language from File -> Preferences. It's just ridiculous to have to google and ask for recipe on stackoverflow."
18324|"VSCode 1.0.0 ships in 9 language now. You can control the language by editing the locale.json file. Press F1 and type Sprache konfigurieren. Enter ""en"" as the locale value.  ![capture](https://cloud.githubusercontent.com/assets/1931590/14643914/7d3533ea-0650-11e6-9309-67175d3656cc.png)"
18325|@dimdin implemented it with PR #5423 Please review unit test https://github.com/Microsoft/vscode/pull/5423/files#diff-03a74fc8e046bdf7481eefdc7cce74c8R2147 to check that I have not missed anything
18326|Once more...
18327|Hi **@rebornix**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Peng Lv (PENLV)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
18328|Thanks @rebornix !
18329|"**F1 and ""Sprache konfigurieren"" did it!** It created the `%APPDATA%\Code\User\locale.json` which doesn't exists before.  But how should I know that?"
18330|"Via means ""with"" in this case. You can download deb and rpm files from the homepage"
18331|I have been using VSCode exclusively (came from WebStorm) and I haven't been missing tabs. Initially I thought that I would, but I started to like Working Files more since I could see more in less space and without having to think about how to arrange or group things on screen. Now I use CTRL+TAB primarily.  I think if anything traditional tabs should be an official _extension_ or an opt-in _option_. Personally I am hoping for something other than tabs to enhance the current experience.  What I find that CTRL+TAB lacks is the context of the active editor pane. If I have 2 editor panes open side-by-side then **I would like to see CTRL+TAB show the file history filtered down to files that have been opened in the active editor pane** rather than all files opened in the application as a whole (although that would still need to exist as well). Also, perhaps clicking the somewhere on/near the filename at the top of an editor pane could display a drop list of files opened in that editor pane (same as CTRL+TAB).  Keep up the good work.
18332|One other suggestion.. It would be nice to have a better default key combo to view the list of Working Files for when the sidebar is hidden. I just recently discovered that CTRL+K CTRL+P shows what I want but it's more difficult to pull up than CTRL+TAB. Like I suggested with CTRL+TAB, the Working Files popup could benefit from some context based on the active editor pane. Maybe it could be sorted so that the list of Working Files that have been opened in the active editor pane are above the rest.
18333|Same problem.  VS Code v1.0 OS X El Capitan
18334|"Hi @OneOfOne, I can see how that name would be confusing.  ""Alpha"" is the name of the Microsoft internal latest builds of VS Code.  It has the very latest changes before we release to the Insiders build (weekly) and stable (monthly).  We test alpha internally to find issues early."
18335|+1
18336|Yes, you are right. Sorry.
18337|This is what I see:  ![capture](https://cloud.githubusercontent.com/assets/6374766/14647379/7b02ca62-062b-11e6-82b1-8902e0c36af1.PNG)  ![capture2](https://cloud.githubusercontent.com/assets/6374766/14647478/f7afd9ba-062b-11e6-8be2-56169363ab61.PNG)
18338|@joaomoreno could you add a little bit more details about this pull request in description? Are we going to get extension manager UI?
18339|Pushed a change to pick up the font-family from https://github.com/Microsoft/vscode/issues/5260#issuecomment-211505841  We plan to release a new insider soon so that this can be verified.  Thanks for everyone's help and looking forward to hear back how this change goes!
18340|@RyanEwen I guess you're not a shortcut user before? Because Intellij Idea platform has same shortcuts and able to place the Tabs anywhere (Top, Bottom, Left, Right, None). When it placed on Left / Right, it works similar to Working Files in VSCode.  It would be great to do some experiment. Going back to WebStorm using CTRL + TAB combo with top Tabs to see if you don't need it or being forced to accept it as the only workaround.  CTRL + E in WebStorm also a Recent Files with filtering (type to search) features.   Anyone said no to Tabs please also mention if you were using MOUSE in your workflow.
18341|:+1:
18342|this is now in the website, we still need to update the product. - need to update `privacyStatementUrl` in `product.json` to point to fwlink: http://go.microsoft.com/fwlink/?LinkId=786907 - need to append `?lang=XX` to the url
18343|@v-pavanp this looks like a source map problem. Could you please verify with this tool http://sokra.github.io/source-map-visualization/#typescript that the source map is correct (or zip up the three files and attach them here so that I can investigate).
18344|@jrieken I pushed a change to reduce the calls to setInstantiationService() from the workbench for all the parts. There is still 2 places where we use this pattern: - to inject the instantiation service into other services - to inject it into registries that are created too early to be created with the instantiation service
18345|Is there an ETA on when this might be implemented @joaomoreno? Sometimes I find it difficult to read clearly. I had a similar question as well: https://github.com/Microsoft/vscode/issues/3795
18346|"turning off extensions didn't help - I can still reproduce it.  here is my `jsconfig.json`  ``` {     // See http://go.microsoft.com/fwlink/?LinkId=759670     // for the documentation about the jsconfig.json format     ""compilerOptions"": {         ""target"": ""es6""     },     ""exclude"": [         ""bower_components"",         ""jspm_packages"",         ""node_modules"",         ""public"",         ""temp"",         ""tmp"",     ] } ```"
18347|"@KayLeung I have used CTRL+E in WebStorm, but since there were tabs I would allow myself to go for them using the mouse more often than not. I recently used a tabbed editor (Koding.io) when I didn't have access to VSCode and can confidentially say that I don't miss setting up/arranging tabs. It seems tedious compared to just having a history. I found myself always get caught-up in how I want things laid out and predicting what files to open rather than just using the editor and flipping between files. This is probably partially a ""me"" problem more than a tab problem, I know. A little bit OCD, I guess.  I was a mouser when I used WebStorm. I used key shortcuts to search for recent and unopened files here and there, but moused to tabs for what was already opened. I didn't feel I could keyboard to specific tabs easily/intuitively, and there was that desire to arrange the tabs which also caused me to reach for my mouse in the end. Having a lack of tabs has unconsciously (and painlessly - in my case) helped me to slip into a keyboard-first workflow."
18348|"I just tried Adobe Brackets, and their Working Files list is split up by pane. If you have a Left and a Right pane then there are 2 lists of working files (""Left"" and ""Right"") in the sidebar instead of one as in VSCode. Not a bad solution. Wouldn't mind something like that (in addition to my other suggestion of adding context to CTRL+TAB based on the active editor pane)."
18349|Agree. We are working on a more discoverable solution.
18350|@rakkarage actually we should only create the .vscode folder if you edit workspace settings, create a task runner or debug.   @bpasero in case there is something happening which creates an unwanted .vscode folder
18351|@kieferrm heard you are taking over search :-)
18352|Reopening.   @chrisdias I assign to you because of the request of public nightly builds and the request of being able to run their own full VSCode builds
18353|@jrieken @bpasero @alexandrudima any volunteer. Want to get it out of the inbox :-)
18354|When you hover over these errors what do they show. Do the have [js] in front or something else (e.g. [eslint])
18355|"I'm having a similar problem. My git was working and then it stopped working and constantly says ""Failed to execute git"". I've tried settings git.path with no success. Also, git is in my PATH as well.  VS Code Version: 1.0.0 OS Version: Windows 8.1"
18356|See https://github.com/Microsoft/vscode/issues/5512
18357|Here you go, also thanks for the replies :D  ![hover](https://cloud.githubusercontent.com/assets/6374766/14652485/8bc1b234-0642-11e6-94c4-ccacd24387f3.png)
18358|@venil7 could you share the content of the js file showing the behavior. Would ease tracking this down.
18359|Looks good to me, I think.  Is there any hope of support for multi-cursors that aren't necessarily next to each other?  For a contrived example, say I have JSON with integer values, but they really should be doubles. With multi-cursors, I can accomplish that fairly easily. Will this be possible with the proposed block column selection? ![multi-cursor-select](https://cloud.githubusercontent.com/assets/4721566/14652422/18fc0312-0629-11e6-8a3e-cb288920e5bf.gif)
18360|We are aware of these problems and we are working on improving this in two ways: - you will be able to always type the English command even if you are in a different UI language. For example you will be able to type 'git pull' or 'configure language' even if you are in Russian interface. - we are looking into ways to integrate UI Language switching into the Menu.
18361|Integrated terminal issue: https://github.com/Microsoft/vscode/issues/143
18362|@jrieken   I created a sample vscode extension to demonstrate the same. I have just added two listeners: `onDidChangeActiveTextEditor` and `onDidChangeTextEditorSelection`.  Steps to reproduce: 1.Have the `30linefile.ts` open with cursor on line 30 2.Have the `10linefile.ts` open with cursor on line 10 (Please ignore all output until this point) 3.Switch from `10linefile.ts` to `30linefile.ts`. Here is the output  ``` onDidChangeTextEditorSelection called => file: c:\Users\Shardul\Desktop\sample-vscode-extension\test\10linefile.ts line count: 10 selection: Ln 30, Col 1  onDidChangeTextEditorSelection called => file: c:\Users\Shardul\Desktop\sample-vscode-extension\test\30linefile.ts line count: 30 selection: Ln 30, Col 1  onDidChangeActiveTextEditor called => new editor file: c:\Users\Shardul\Desktop\sample-vscode-extension\test\30linefile.ts ```  4.Switch from `30linefile.ts` to `10linefile.ts`. Here is the output  ``` onDidChangeTextEditorSelection called => file: c:\Users\Shardul\Desktop\sample-vscode-extension\test\30linefile.ts line count: 30 selection: Ln 10, Col 1  onDidChangeTextEditorSelection called => file: c:\Users\Shardul\Desktop\sample-vscode-extension\test\10linefile.ts line count: 10 selection: Ln 10, Col 1  onDidChangeActiveTextEditor called => new editor file: c:\Users\Shardul\Desktop\sample-vscode-extension\test\10linefile.ts ```  As you can see in both the instances, there were **two** `onDidChangeTextEditorSelection` events. The second one has the correct file and selection, but in the first event the file and selection do not match.  I have uploaded my sample extension to [this repo](https://github.com/shardulm94/sample-vscode-extension). The sample files used above are also included in the `test` folder. Hope this makes sense.
18363|Disabled the language features for the left hand side of a diff.
18364|"I have a repo for my dot files. In this repo I have renamed `.bash_profile` to `bash_profile` so it is not hidden. I symlink to this from my home directory.  So I hoped that `""*bash_profile"": ""sh""` would pick up both these files. It doesn't seem to on my machine.  The simplest way to reproduce this seems to be:  ``` mkdir issue5471 cd issue5471 cp ~/projects/dotfiles/bash_profile . cp bash_profile .bash_profile ```  Now `code .bash_profile` works but `code bash_profile` doesn't, It reports as Plain Text."
18365|"I tried with the provided tool and after loading all the required files, I am getting error ""Unable to get property 'substr' of undefined or null reference"" Find the attached zip file which contains all the three files. [app.zip](https://github.com/Microsoft/vscode/files/226723/app.zip)"
18366|> how to get on alpha channel?  Currently the alpha channel is internal. Now that 1.0 is out we will revisit this.
18367|@aeschli I tried to get this to work but failed. Could you have a look here and advice: https://github.com/Microsoft/vscode/tree/dbaeumer/4613
18368|@KievJunta Is this C#?
18369|I can reproduce this using VSCode 1.0.0 on OSX 10.11.4 and Windows 10 with the standard Format Code shortcut (‚áß‚å•F) - no auto-format is required to be enabled.  As @mbergeron indicated, replacing the top-level `<template/>` tag with `<div/>` causes it to work as expected.  Context: I'm learning Aurelia where the html templates must be wrapped in `<template/>`.  I upgraded to VSCode 1.0.0 and ‚áß‚å•F no longer works for html templates.
18370|I would be surprised. If you use workspace settings, debug or tasks, you will need the .vscode folder.
18371|"The fix is to use the following setting:  files.associations { ""*bash_profile"": ""shellscript"" }"
18372|I have noticed a number of similar regex issues, like not being able to select `.*` and others. I didn't open issues but it seems like the regex search feature needs some work.
18373|Sweet!
18374|nope, i am not running code with a different user account / permissions
18375|the folder and db file is created when i open an empty text file and left there no debug, tasks, or workbench settings, just open new text file you are claiming this should not happen? or does not happen? thanks
18376|How to install and use .Net Core Debugger is written here http://tattoocoder.azurewebsites.net/setting-up-asp-net-core-debugging-in-vs-code/
18377|yes,thank you @BillyONeal
18378|I believe this issue is about not being able to access the menu options while the Japanese IME is active. <kbd>alt</kbd>+<kbd>f</kbd> (file menu) then <kbd>s</kbd> to save, but the IME has likely taken the s captive until it's completed a character.
18379|Info provided so removing more-info label.
18380|After this is cleaned up could the `InstantiationService` or service registry be modified to prevent this from being introduced again? Keeping a service->dependency map would make it easy to detect cycles at service registration/creation.
18381|Duplicate of https://github.com/Microsoft/vscode/issues/313
18382|By analyzing the blame information on this pull request, we identified @egamma, @alexandrudima and @bpasero to be potential reviewers
18383|Hi **@liunian**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
18384|"@weinand node-inspector behaves as expected: unchecking ""Pause on caught exceptions"" causes the debugger to continue its execution without breaking on the thrown error."
18385|@egamma When will develop this featureÔºü
18386|"Hey, i just uninstall this extension ""vscode-twig-pack"" and the problem is gone."
18387|@RyanEwen you have made a very good point. I always work with 2 panes for any open instance of my IDE. I may have 2 open instances over 2 screens, for 4 open panes. I couldn't quite put my finger on it but you did. Having a single list when there are two (or more?) open panes, is the problem with current the Working Files implementation that has made it unusable for me. Thank you for being specific here.
18388|By analyzing the blame information on this pull request, we identified @egamma, @isidorn and @bpasero to be potential reviewers
18389|Hi **@outcoldman**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
18390|BTW, there are a ton of ways to fix the min case so that it works, like adding node_modules to the exclude in jsconfig.json - but none of these fixes helps in our full app. Am at quite the loss as to how to proceed. Please let me know if I can provide any more info.  Intellisense is also down.
18391|same here:  # **VSCode**  ![vscode_oceanic](https://cloud.githubusercontent.com/assets/11524061/14664404/4f2fbec4-06d3-11e6-828b-1a072e76e398.png)  # Sublime  ![sublime_oceanic](https://cloud.githubusercontent.com/assets/11524061/14664405/4f31464a-06d3-11e6-8161-cfc57028a47e.png)
18392|By analyzing the blame information on this pull request, we identified @aeschli to be a potential reviewer
18393|Hi **@Ikuyadeu**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
18394|We do not create a .vscode folder unless you open a folder with VS Code and use one of these features: settings, tasks or debug.
18395|@kyamamoto03 can you please update the description in english?
18396|+1 please make it possible
18397|I pushed a change to get rid of the keybindingservice <-> messageservice cycle.
18398|@nrkn thanks a lot for this nice test case. I was able to reproduce this immediately. First analysis shows that the tsserver which is powering JavaScript language smartness throws on reading the project info. We need to do two things here: - let the user know that reading the project info failed. - make a issue for the TS team.
18399|This issue was moved to Microsoft/TypeScript#8212
18400|Reopening and moving to @jrieken: can you add code that informs the user that reading the project info for JS validation failed and why. This would allow users to report easier bugs. I also created https://github.com/Microsoft/vscode/issues/5532 to send telemetry events for failed requests.
