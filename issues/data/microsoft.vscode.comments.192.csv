19101|Yep, that was it. I was using code.exe. Thanks!
19102|Cool!
19103|@alexandrudima @jrieken would appreciate a second look on my change (https://github.com/Microsoft/vscode/commit/a6d74034f1e77b0863878526b9f6e1db6144477b).  Basically what we always did before was to reload the entire configuration from disk as soon as the `onDidRegisterConfiguration` event was fired that indicates a new configuration was provided. In this case, the extension host would trigger this event for each extension that provides configuration. Since the extension host needs some time to come up, this event fires sometime after the workbench opens.  This means, for each extension with configuration we would do a full reload of all configuration from disk even though that was not needed because the only thing that changes is the default values, not the actual values in the configuration files.  I did a bad change to buffer this event because I noticed it is fired once per extension. So I would wait for 50ms before reloading the configuration from disk on such an event and this causes a race condition, because the extension might come up before 50ms and expect the configuration settings to be there.  Now, with my new change, instead of reloading the configuration from disk each time, I just update my cached configuration with all the new default values I get from the extensions. In other words, the new cached configuration is the total set of defaults with the actual changed values mixed in.
19104|Yes, very cool. Love it.
19105|Thinking more about the issue I have to agree that we need to move telemetry reporting into a separate process because no matter how smart we get, the blocking issue will always be an issue on the renderer side.
19106|This is listed in the release notes for v.1.0.1-insider but it isn't working for me, on that version. My files are still being revealed in the explorer.
19107|@stephenmartindale did you try `explorer.autoReveal: false` in settings?
19108|no its a separate file/external file here is the hierarchy:  ``` app - css      -- style.css - html       -- index.html       -- app.html ```  so, in index.html i've included the css file , but in app.html am not getting any suggestion for css classes.
19109|+1
19110|i found a way to add multiple tasks  under linux i just use /usr/bin/env as commant then configuring tasks:[] section but it could be just cool if the tasks.json file accepted and array rather than a single object @dbaeumer in documentation may be you can put an example of editing multiple tasks this way for other people
19111|Why not with a little diff popup when your mouse goes over?
19112|@stevencl I think what you outlined from the discussion a few days ago is great. This is exactly what we all have been waiting for regarding tabs. A few of the other editors I have use also implement horizontal as well as vertical panel configurations. This allows you to have two files opened side by side at the top and one or two opened below them. While this is a not a critical feature, I do find myself missing this quite often while developing front end web apps & mobile apps. The reason is most of what I work on is MVC or derivations thereof so having a model, view, controller and some UI file (css, Js, etc) open at the same time is a huge benefit. Are there plans to include this as well? Atom does this really well which was the last editor I used before VSCode. Unfortunately it severely lacked in other areas that VSCode excels at, hence my sole use of VSCode. If not in the planned release with tabs & document management changes, this would be a great future enhancement.
19113|You can add more fonts to your editor font family in the settings. You should add a font like Segoe UI or something to add any characters that are not in Consolas.
19114|Is there a way to get portable configs? In other words, get my badass conf'd VS Code at my work computer to my other computers without manually installing everything?
19115|+1 Running into this -- I did indeed have a very old version of VS Code, I tried updating it, it didn't go so smoothly, so I deleted the old version, downloaded the most recent and copied that to my applications folder. Now I get the error, but it works fine from anywhere else.
19116|Hi @biij5698 ,  I think it doesn't exist _in the core_, but maybe this extension [expand-region](https://marketplace.visualstudio.com/items?itemName=letrieu.expand-region) does the trick.  Hope this helps
19117|I can't wait to see it!
19118|> Though if you take the editor, it also creates services only later after the workbench is already there. If I had a service that needed the IModeService or IModelService from the workbench, I could not get to it until the editor widget is created.  That is not true. All services are registered either in the [shell](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-browser/shell.ts#L224) or [workbench](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/browser/workbench.ts#L300). It's also not possible anymore, since I remove the `registerService` method from the instantiation service (which actually wasn't badly used often)
19119|Closing this since 67cc42c is a change the will throw errors when services are missing and the new `@optional` decorator isn't used.
19120|"This is what I have: ` ""explorer.autoReveal"": false,`"
19121|Wait - I've worked out what is going on: The explorer is simply redrawing the selection rectangle which makes it look like it is revealing the file - it isn't actually scrolling.  To be perfectly honest, the fact that it is not scrolling is enough. Perhaps the documentation should simply be clearer - this setting disabled scrolling, not revealing of the file.
19122|@bpasero I have a added a [test](https://github.com/Microsoft/vscode/blob/master/extensions/vscode-api-tests/src/workspace.test.ts#L18) which still fails. Are we sure that don't activate an extension before having send its default configuration to the extension host? This was the previous behaviour and folks have built on that.
19123|deal
19124|@charlesmilette because it is good to keep feature requests small. I believe that my suggestion adds value on its own without popup. Sure it can be inflated to something bigger but why? And mouse over does not necessarily means [user intent](https://www.nngroup.com/articles/timing-exposing-content/) to view more information.
19125|@gregvanl can you please follow up.
19126|@jrieken could you point him to the right OmniSharp doc.
19127|@joaomoreno starting with you. I know we have that for git. May be something the editor can provide out of the box.
19128|@joaomoreno assigning to you.
19129|@bpasero assigning to you since you track comparable issues.  @biij5698 any additional information like what do you do, what kind of files are you editing, which OS are you on and which version are you using would be helpful.
19130|@jrieken not sure if this would be us or OmniSharp.
19131|Suich a feature is not available right now.  @bpasero FYI.
19132|@jrieken don't know what our keys are right now to expand the selection. Can you help.
19133|@isidorn I don't know if this is us or powershell. Starting with you.
19134|This issue was moved to Microsoft/vscode-eslint#71
19135|Closing.  @grdnrio please ping when the additional information is available.
19136|https://github.com/Microsoft/vscode/issues/3884 is working towards moving both extensions and settings into the same folder.
19137|@enjikaka there are a few issues related to that: - Create a portable 'extensions' file https://github.com/Microsoft/vscode/issues/4875 - Merge `.vscode` and `.config/Code` https://github.com/Microsoft/vscode/issues/3884 - Settings sync https://github.com/Microsoft/vscode/issues/2743
19138|@joaomoreno does the Windows installer need to be changed to put `bin/` in the `PATH`?
19139|@jrieken I am out on vacation for two weeks. Can you please follow up.
19140|@gilboa23 @4kochi could you start vscode from a command prompt with --disable-extensions and lets us know if you still experience the problems.
19141|@jayrosen1576 horizontal splitting is captured in this issue https://github.com/Microsoft/vscode/issues/1749, be sure to :+1: to show your interest.
19142|@jrieken since I am out on vacation for the next two weeks can you please follow up. The idea to track that down further is to use the next insider build, enable tsserver logging (the new option) and see if this is the tsserver or VSCode. Then we know at least where to look at.
19143|OK. See the problem. And we can't hook an handler for a language either since there can be more than one 'quick fix' provider per language. May be having a command 'ELint - fix all problems' is not a bad idea afterall.
19144|"I think Nvidia drivers conflict with certain combinations of <kbd>ctrl</kbd>, <kbd>alt</kbd>, <kbd>shift</kbd> and arrows. That's probably what it's referring to, though I don't see <kbd>shift</kbd>+<kbd>alt</kbd>+arrow being an issue after a cursory search.  If this is the case, ""provider"" should be replaced with ""driver""."
19145|I definitely prefer @jrieken's mock-up (and it seems like others do as well).  You could add Installed/Recommended/Marketplace tabs under the search field, and do a fancy animation of the icons when switching between coding and management mode.
19146|I do not want this to be taken the wrong way.  If it's an nvidia-only, Windows-only edge case, maybe a mention of that combo and/or a link to some specific issue would be more useful?  It made very little sense the way it was presented to me:  ![image](https://cloud.githubusercontent.com/assets/8641/14763777/b6e41702-0955-11e6-822f-56b0d550e3cd.png)
19147|"@danielschmitz Hmm, the pop up seems to work, but that ""runTask/<task_name>"" doesn't seem to work.  It says ""No handler found"" when I invoke the keybinding. I'd like to keybind 2 different task_names.  Can't seem to find any documentation on that ""/<task_name>""...."
19148|By analyzing the blame information on this pull request, we identified @egamma and @bpasero to be potential reviewers
19149|Hi **@aioutecism**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
19150|"@egamma I see, the C# extension does work like the old built-in support.  How about a nice alert like the ""Visual Studio Code has been updated"", which says something like   > Click _View Online_ to view the EXTENSION_LANGUAGE extension, which may include features such as better syntax highlighting, debugging support etc. for LANGUGE [View Online] [Later] [Never]"
19151|@jeff881208 - I think you need to have a look at https://docs.asp.net/en/latest/ - it will give a much broader understanding of what you might be looking for, if I understand your question correctly. VSCode is merely the editor for the code, not the whole computing stack.
19152|@dbaeumer The files are html,The OS is windows 7(32 bit),The vscode version is 1.0.0.
19153|The recommendation is to define a task that runs eslint on your project and then you use an eslint problemmatcher that extracts the errors/warnings from the project. Pls see https://code.visualstudio.com/docs/editor/tasks.  In general you will get answers faster when you ask them on Stack Overflow.
19154|@Tyriar   ref: https://atom.io/packages/terminal-panel  if zsh supported i'll appreciate that
19155|The additional line come from the integrated emmet support. In the May version of VS Code we have added a setting to disable emmet expansion triggering on Tab.   Pls see #4588   You can already try this out in our  [insiders build](https://code.visualstudio.com/blogs/2016/02/01/introducing_insiders_build) today: http://code.visualstudio.com/Download#insiders
19156|"@dbaeumer   https://code.visualstudio.com/docs/editor/editingevolved ""Shrink/expand selection""  It seems VSCode has this feature but doesn't work in my v1.0.0"
19157|Labeling as important since several extensions were derived from this sample and appear to be broken as well, e.g., https://marketplace.visualstudio.com/items?itemName=buzzfrog.imagepreview
19158|Ok, thank you for your attention. It still seems like a bug that Undo deletes a bunch of unmodified text. I verified that this still happens in the insiders build. Would you like to reopen this, or shall I file a new issue?
19159|"Please support Node-style module resolution for projects that use Javascript, Typescript, or a even a mixture.  Intellisense should ""just work"" for CommonJS (require) or ES6 module imports, following the full set of module resolution rules defined by Node.  Lack of proper support for Node-style module resolution makes VS Code rather useless for modern, modular, Node-based development and debugging.  Even the simplest of projects that imports a module by name, and that can run successfully under Node, VS Code can't understand how to provide Intellisense for.  I've spent many days browsing Github issues, Googling the web, and groking VS Code config files, and trying different things (to get Intelliense to work for the simplest of projects) and have come to the conclusion that, currently, it just doesn't work."
19160|+1 from the uservoice !
19161|@rhires Hi everyone, I just read the document at https://docs.asp.net/en/latest/client-side/yeoman.html and  https://docs.asp.net/en/latest/dnx/console.html . I know to to create and run a project from command-line. But we I try to debug the project through VS Code. it doesn't work . It shows DebugAdapter bin folder not found on path C:/Users/Jeff/.vscode/extensions/ms-vscode.csharp-0.3.7/coreclr-debug/debugAdapters/OpenDebugAD7.exe.  Thanks.
19162|Cool 👍
19163|Make sure you put C:\Program Files\Code\bin\code.cmd on the path and not the exe.
19164|@shanalikhan do you have such a `compile` command in your node_modules folder? can you run `node ./node_modules/vscode/bin/compile` from the command line?
19165|Can you try to run VS Code without extensions? From the command line, execute: `code --disable-extensions` to see if it makes it better?
19166|You can change this globally or per workspace in settings (F1 > open global settings, F1 > open workspace settings). there are other issues opened to allow to persist this setting per file.
19167|We only put things into the recent menu that you open from the native file picker or from the outside of Code into Code.
19168|Seems to work if you move focus away after renaming but not if you hit enter directly.
19169|@jrieken this is a very cool test. I found an issue with the package.json and after fixing it (https://github.com/Microsoft/vscode/commit/8e0ebc3a216141ccf147c012b6eedf5618acae41), the test runs fine.
19170|This is because we keep the editor model cached and fail to resolve it from disk when it updates. I would assume when markdown becomes a real extension this issue would also be resolved.
19171|As I have explained in the linked Electron issue, I have been working on this issue and the report is wrong. I thought that I had ruled all the other possibilities before reporting the error, but finally it is related to Chromium 3D rendering inside Gnome 3.20 in my installation (specifically, I think the culprit is the display card driver). Disabling 3D rendering in Chromium works as a workaround. If I could disable it for VS Code, I would be able to use it until a fix is provided.  You can close the issue.  Best regards.
19172|By analyzing the blame information on this pull request, we identified @ajkerrigan and @alexandrudima to be potential reviewers
19173|Hi **@Inori**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
19174|"@echpiel it is fine to keep issues open here labeled as ""upstream"" so that we can keep track.  You say that you cannot disable 3d rendering in VS Code. Is this some flag we could expose to users? If so, can you provide guidance where this can be flipped in Chromium?"
19175|**@Inori**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
19176|@bpasero Hello,I'm work on window 7 and open the vscode by double blick.
19177|It is very regret
19178|@biij5698 any extensions installed?
19179|I would really like to be able to set CTRL+/- to increase `editor.fontSize` and `editor.lineHeight` equally. The current zoom behavior is not good for me, because I work with different languages and some have characters with smaller fonts (Thai, Chinese) and I would like to be able to easily increase the font size when working with those characters.  I recently looked into hacking this out in an extension, only to find out that it's basically impossible to set a user preference via an extension (which makes sense), so it appears there's currently no way to do this.
19180|Wrap with abbreviation is missing as well :broken_heart:
19181|"Checked my path.  Last entry is ""C:\Program Files\Microsoft VS Code\bin"".  The only contents of that directory are code and code.cmd.  I suspect the problem comes from step 1 of my repro.  When you chose a default app, you're picking the exe, not a .cmd.  So by opening a .log file from the cmd window, the system is directly launching code.exe, not code.cmd from the path."
19182|@bpasero Sorry if I was not specific enough. The hardware accelerated rendering can be deactivated in the Chromium browser, that uses the Chromium rendering engine. I know how to disable it in the Chromium browser (it is under the advanced options) but I do not know the connection with the Chromium rendering engine. So I cannot provide guidance about the Chromium rendering engine.
19183|@egamma I know this is closed, but @egamma do you know of any way to run eslint as well? I can't seem to get it working with the flow language.
19184|When i run the command and then run the npm install and set vsce package. It worked Thanks
19185|"I think i found the cause for the issue in my project. The ""typescript.tsdk"" parameter in the settings file was set to an older version of typescript lib (v1.8.0). I cleared the flag and this seems to have solved the issue.  I'm closing this issue. Thank you for your assistance."
19186|By analyzing the blame information on this pull request, we identified @aeschli and @alexandrudima to be potential reviewers
19187|Hi **@dbillingham**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
19188|> Your mapping sets endLine to 3 which is undefined. Due to the code in problemMatcher#createLocation (line 283) a problem with only line and column is created. Since this points to a blank we even don't expand this to a word.  Would it be feasible to support the no-endLine-but-two-columns case there? Having a single line with two columns doesn't seem to be _that_ outlandish, so I wouldn't be surprised if that occurred elsewhere, too.
19189|**@dbillingham**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
19190|I just did: `sudo rm -r -f ~/.cache`  I don't know if it was the best solution at all, but it does the trick...
19191|"Here is the result of ""where code-alpha"". C:\Program Files (x86)\Microsoft VS Code Alpha\bin\code-alpha C:\Program Files (x86)\Microsoft VS Code Alpha\bin\code-alpha.cmd  This is intermittent issue and I can also  repro it on windows10 machine. Find the crash log file here. [operation_log.txt](https://github.com/Microsoft/vscode/files/233688/operation_log.txt)  ![image](https://cloud.githubusercontent.com/assets/17735796/14770936/fdfccac2-0a30-11e6-9370-9c0dbe908e8d.png)"
19192|By analyzing the blame information on this pull request, we identified @egamma and @Tyriar to be potential reviewers
19193|Hi **@mquandalle**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
19194|@mquandalle :+1: thanks!
19195|@dbillingham can you link the GitHub issue tracking this (if it exists)? Thanks :smiley:
19196|Okay. Pretty sure this is a bug (the dirname of the filename is added to the recent menu, but not the filename).
19197|"I agree, maybe it would be better to tweak the `createLocation`'s first condition not to check for `endLine`, and for the value do something like `endLineNumber: endLine || startLine`.  Tweaking the regexp would result in a complete madness I'm afraid, and using two problem matchers sounds really inconvenient."
19198|"Here's a turn-key example of the scenario described above:  [NodeJsIntellisenseExample.ZIP](https://github.com/Microsoft/vscode/files/233776/NodeJsIntellisenseExample.ZIP)  Just expand to a local folder and open VS Code there.  Open ./index.js in the editor and attempt to invoke get Intellisense for the call to hello().  The fact that no Intelliesense appears (other than the symbol ""hello"" has type ""any"") seems to contradict the claim that:  > The following patterns are also recognized: >  > CommonJS-style module patterns, specified as property assignments on the exports object, or assignments to the module.exports property.  Source:  https://code.visualstudio.com/Docs/languages/javascript"
19199|[ Issues #5447](https://github.com/Microsoft/vscode/issues/5447)
19200|"You can enable this by adding this to your settings:  ``` json   ""editor.selectionClipboard"": true, ```  I think it will be on by default in the April release."
