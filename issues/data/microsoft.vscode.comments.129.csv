12801|@bpasero Should `vscode` be a dependency or a `devDependency`?
12802|@pcgeek86 sorry but what is wrong with commenting on the closed issue so that I can reopen it? Am I missing something?
12803|@felixfbecker devDependencies
12804|"@dbaeumer From the [link above](https://github.com/Microsoft/vscode/issues/3791#issuecomment-194300157):  > This is a TypeScript project and there are no source js files in my ts files glob.  I'm not sure what you mean by share my workspace. I've also already linked to [my project](https://github.com/ibgib/stackGib) above.   My workspace settings file was empty. I have just yesterday added a workspace settings file that points to my local version of typescript to use string literal types. My user settings is as follows:  ``` // Place your settings in this file to overwrite the default settings {     //------- Editor configuration      ""editor.fontSize"": 9,     ""editor.quickSuggestions"": false,     ""editor.tabSize"": 4,     ""editor.insertSpaces"": true,     ""editor.wrappingColumn"": 90,     ""editor.wrappingIndent"": ""indent"",     ""editor.suggestOnTriggerCharacters"": false,     ""editor.renderWhitespace"": true,      //-------- Window configuration --------     ""window.reopenFolders"": ""all"",      //------- Diff Editor     ""diffEditor.renderSideBySide"": false,      //------- Files configuration      ""files.trimTrailingWhitespace"": true,      //------- Search configuration      ""search.exclude"": {         ""**/bin"": true,         ""**/bin-webpack"": true,         ""**/node_modules"": true,         ""**/platforms"": true,         ""**/plugins"": true,         ""**/typings"": true     },      //------- Telemetry configuration      ""telemetry.enableCrashReporter"": false,       //-------- JavaScript configuration --------      // Missing semicolon.     ""javascript.validate.lint.missingSemicolon"": ""warning""       //-------- TypeScript configuration --------      // Complete functions with their parameter signature.     // ""typescript.useCodeSnippetsOnMethodSuggest"": true } ```  A quick rundown of the structure of the [project](https://github.com/ibgib/stackGib): It uses a node server, an ionic/cordova client, and common shared code. It's a relatively small project. It uses webpack on both the client and the server. It uses gulp to compile what webpack doesn't, which is very little now. We still use DefinitelyTyped for type definitions. The code targets es5 and we are working on changing it to es6.   Environment-wise, I am running on Windows 10 Pro in a Hyper-V guest VM with lots of ram and processing power with 6 dedicated cores."
12805|"exactaly. and It realy seems to be a GPU rendering issue. Removing the""translate3d"" CSS transform (GPU Process) it becomes sharp. Starting code with ""--disable-gpu"" too."
12806|Hold the phone! I got the answer! It's perfect! Ready? We don't _need_ tabs. Let's just extend the working files with a simple option to display them ~~in tabs~~ horizontally across the top of the editor! Woo hoo! Problem solved without creating tabs!
12807|"I actually prefer the way it is now - panels for open files and a list-like file picker with ""working files"" on the side. Back when I used Atom, I hated it that every time I just quickly looked at a file, it would open a new tab, and within minutes my tab bar was full of useless tabs.  So I'm -1 on this. But I would still like to see undocking of windows."
12808|> I've just switched over to VSCode from Atom and noticed how amazingly organized and clean it feels after working with it for a while. The reason? No over-population of tabs! The actual lack of tabs is what makes this experience so smooth  this. 100% agree.
12809|"> I actually prefer the way it is now - panels for open files and a list-like file picker with ""working files"" on the side. Back when I used Atom, I hated it that every time I just quickly looked at a file, it would open a new tab, and within minutes my tab bar was full of useless tabs.  I get that and that is why we are asking for an _additional_ feature not a replacement for working files. I can't for the life of me understand why both could not be included in the editor. I mean seriously. Look at how many want tabs in this thread! This is not a _Hey I'd like the buttons to be blue_ scenario. This is about a hinderance to the productivity for the vast majority of people wanting tabs in this text editor (which by the way is on it's way to being superior to Atom and Sublime). I get the valid arguments on both sides I just can't understand why tabs and working files can't be included with options to turn of either. Everybody wins then."
12810|@bpasero Because there is a good chance that it will not be re-opened by someone, and disappear under closed issues long term. Perhaps with the VS Code team this is less of an issue, but I've seen it happen on other Microsoft projects, so I'm investing my time and effort in a way that I know it'll get noticed.
12811|Perfect!
12812|@pcgeek86 try it out please :)
12813|@aaronswiftming what did you do to make it work?
12814|@jayrosen1576 Maybe the problem is that nobody really made an in-depth proposal about how it should look like - should the tab bar sit on top of all windows? - How would clicking a tab work when you have multiple files open side-by-side, or in a future release, even split horizontally? - Would the tab of the active file be always highlighted? What if the debug console is focused? - If you enable the tab setting, would the working files section be removed because it is redundant? - What about duplicate file names in different folders? - What about the duplicate close button of a tab and a panel? - Will closing the panel close the tab? - Will a tab appear as soon as you open a file like in Atom (urgh) or only when you edit like with working files?  These are all questions the development team would have to spend time on. And as hard as I try, I cannot think of an implmentation that's more elegant than the working files list and isn't confusing.
12815|Here's the proposal for how it should look:  1) Download Atom 2) Open Atom 3) Look at tabs 4) Implement in VSCode
12816|@daviwil is this a problem in the PowerShell extension or in VS Code? If the former I can move this issue over.
12817|@jayrosen1576 seriously? I named some valid concerns with Atom's implementation and also problems that Atom simply doesn't have because it doesn't have a concept of working files.  Then again, your profile picture says everything.
12818|My wording suggestions: Configure in Settings... ->  Configure file associations...  Configure defaults for '.md' -> Configure file association for '.md'...  My understanding is that this will always open the settings, therefore the ellipses (...). IMO it's also important to mention 'file associations' because that's the name of the setting and the concept the user should remember.
12819|before and after heap snapshots [Archive.zip](https://github.com/Microsoft/vscode/files/169192/Archive.zip)
12820|- should the tab bar sit on top of all windows?   **A:** Yes. Try tabs in Atom - How would clicking a tab work when you have multiple files open side-by-side, or in a future release, even split horizontally?   **A:** Tabs appear at the top of each pane. Try tabs in Atom. - Would the tab of the active file be always highlighted?    **A:** Yes. Try tabs in Atom. - What if the debug console is focused?   **A:** Same result as when the debug console is focused now with two files opened side-by-side. - If you enable the tab setting, would the working files section be removed because it is redundant?   **A:** Only if you disable working files (as an option) - What about duplicate file names in different folders?   **A:** Tab includes partial path. Try tabs in Atom. - What about the duplicate close button of a tab and a panel?   **A:** Panel doesn't have a close button. Try tabs in Atom. - Will closing the panel close the tab?   **A:** Yes. Try tabs in Atom. - Will a tab appear as soon as you open a file like in Atom (urgh) or only when you edit like with working files?   **A:** Only if you enable the option to do so (usePreviewTabs = false in Atom turns this off). Otherwise double-click opens them in a tab. Try tabs in Atom.
12821|> On Mar 11, 2016, at 10:03 PM, Andre Weinand notifications@github.com wrote: >  > @aaronswiftming https://github.com/aaronswiftming what did you do to make it work? >  > — > Reply to this email directly or view it on GitHub https://github.com/Microsoft/vscode/issues/4004#issuecomment-195376922.  It’s the first time to use vs code ,so I’m acting so stupid, and then I try more times ,and wait more some minutes ,,finally it’s downloaded and installed  successfully. Forgive my foolery. And thanks for your attention.
12822|for March and continued discussions
12823|@edumunoz Your approach is correct. I've added a boolean attribute `allThreadsStopped`to the StoppedEvent and I've updated the node modules and VS Code.  ``` ts /** If allThreadsStopped is true, a debug adapter can announce that all threads have stopped.  *  The client should use this information to enable that all threads can be expanded to access their stacktraces.  *  If the attribute is missing or false, only the thread with the given threadId can be expanded.  **/ allThreadsStopped?: boolean; ```
12824|This has already been reported by the user (for some reason I can not dig up that bug). We have fixed it and it should not be happening with the latest vscode (0.10.10) Just tried and I can not reproduce
12825|@aaronswiftming no worries. Installing the C# takes some time and we do not show progress. We have improved this for the March release.
12826|@felixfbecker Because this product carries the Visual Studio moniker there should be optional tabs, and they should behave as they do in any other Visual Studio product.  It says volumes about your character when you bring up something as piddly as a profile picture in a response to a valid answer to your concerns.
12827|@aeschli emmet only helps when editing html inside PHP. Enabling emmet inside PHP was a popular feature request.
12828|"> Hold the phone! I got the answer! It's perfect! Ready? We don't need tabs. Let's just extend the working files with a simple option to display them in tabs horizontally across the top of the editor! Woo hoo! Problem solved without creating tabs!  @jayrosen1576 This doesn't actually solve the full problem, since as I've said before (and brought up again in literally the comment immediately preceding yours), it's not just the visual appearance of tabs that's different - it's the behavior.  As I said in my first comment here, you can get ""tabs in the sidebar"" instead in Sublime Text too, but it's still not the same as working files.  (IMO it's better.)"
12829|> Should we stop showing the info message for workspace settings at all?  I'd keep it, it is useful since it tells me the setting.  :+1: on @aeschli 's wording suggestions
12830|@kfranqueiro I totally agree. I was just being snarky. This tab thing is a really silly argument. If VSCode simply had the tab capability of Atom's tabs with the option to hide them (even by default) it would be perfect. I think we are all asking for the same thing. I just can't understand why both cannot be included with an option to turn either off.
12831|Hmm now you mention it, it happens less than I thought! But it definitely happens in one case, and that is when you're developing an extension, and have a secondary vscode window (the one spawned by debugging). If you press ctrl+r in that window to refresh, the debug sidebar will pop out again in the main window.  I think it can happen in other cases too, but the next time I have it, I'll try to work out the steps to reproduce.
12832|Honestly, discussing if tabs are a good choice for a text editor is just stupid. This is not a new concept. Just implement and leave them optional. Make it an extension and let it be the no. 1 extension by far until people realize this is a basic functionality and it makes no sense to not have it, just like VS uppercase menu choice.
12833|Not for GA.
12834|Yes, `fsPath` is the one use for fs operations. It's also honors UNC share paths were windows paths are made up from a `authority` and `path`, like `file://shares/file/stuff` is `\\shares\file\stuff` where the path is just `/file/stuff` and auth is `shares`.
12835|I afraid that the _raw_ path as given to `parse` isn't stored but only the uri components
12836|Ok pushed. Thanks!
12837|@bpasero Sorry, I definitely couldn't share it :( I haven't looked but you might be able to find it online somewhere. It is just a mostly-flat old-fashioned ASP VB.Net shopping cart.  The large majority of the files are .vb with aspx, ascx, and a small handful of css files.
12838|Yeah, steps would be great - thanks
12839|"@sushruth FYI there is a ""Subscribe"" button to the right on github that lets you follow the thread without commenting."
12840|dupe of #4001
12841|It's the file matches that leak cos they are referenced by the remove action which seems to be referenced via the action bar...  [Archive 2.zip](https://github.com/Microsoft/vscode/files/169422/Archive.2.zip)
12842|With the latest 0.10.10 VSC and TS 1.8.7 I don't see this anymore. Thanks!
12843|@nvivo Couldn't have put it myself. This whole discussion just seems dumb.
12844|Using https://github.com/textmate/git.tmbundle as extension now for git commit message and git rebase. I did not add it for gitconfig because our existing Ini support already picks it up.
12845|Problem seems to be that `ActionRunner@11221` get more and more listeners registered without ever unregistering...
12846|> just like VS uppercase menu choice.  @nvivo Have you tried this extension? No menu option but you can setup some keyboard shortcuts. works pretty well.  [https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case](https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case)
12847|@edumunoz thanks for the PR. This code change impacts all debugging scenarios, so most of the debug adapters need to be tested as this can easily break lots of user scenarios - I have added checkboxes to your original comment. Unfortunetely, we do not have tests for the debug service.  Concerns which I have regarding how model data is handled I will comment directly in the commits.
12848|Cool, thanks for the pointer!  For PowerShell there isn't much difference between Run and Debug.  Though it would be nice if we had a REPL that could stay open and usable even when the debugger isn't running :)
12849|@v-pavanp does it fix when you resize the window and or sidebar? something in the chrome console?
12850|I verified that the second instance gets the right configuration but I am not sure if it is picked up in https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-browser/index.html#L101
12851|What do you get if you run `node` and in its interactive prompt run `require('url').parse('YOUR PROXY URL')`?  Namely, do the `host` and `auth` parameters look OK to you?  If not, you might need to url escape your username / password.
12852|Thanks @dbaeumer The code at defining-a-problem-matcher works as a starting point - _and_ an ending point, i.e. it works fine without modifications! :-)  Instead of creating a separate Ctrl-Shift-M menu of errors, could you make it so the user can just click on the error messages in the output window? That would feel more similar to how it's done in both Emacs and Visual Studio.
12853|With other text editors, for example Sublime, I also need to specify the `-n` option to make sure that a new editor window always opens and to ensure it only needs to wait for that one window to close before returning to the command line. Otherwise, I find myself needing to close all instances of the editor before it returns.  How is this currently working in Code? How do `-w` and `-n` interact?
12854|That depends on what VS Code uses to determine where the caret goes after the completion.  I'm able to reproduce this issue also.  Nothing has changed in our completion provider in the last couple PowerShell extension updates.  Is it possible that the semantics of CompletionItem.textEdit have changed in this release?
12855|"<img width=""527"" alt=""screen shot 2016-03-11 at 17 17 41"" src=""https://cloud.githubusercontent.com/assets/1794099/13708158/5fa84e28-e7ad-11e5-8338-011a3db7a9d1.png"">  will show in the title when `>1`references"
12856|We plan to improve our error list experience in the future.
12857|@dbaeumer good catch, I put in a typo while fixing another thing you reported to no longer ask for confirmation. So now the experience should be: Delete, Move to trash, fails, delete permanently => gone
12858|@bording good point, I decided to force a new window always when `-w` is specified because opening it in an existing instance seems weird. Closing the window causes the script to terminate, independent if there are other windows open or not. I hope @Tyriar and @joaomoreno can verify all these corner cases during testing next week :)
12859|@bpasero Isn't VS Code always opening a new window anyway if `-r` is not specified?
12860|We made this decision basically because we don't want to step onto the toes of those that actually like textual completions everywhere. Also it wouldn't have helped in cases in which only textual completions are available, esp in markdown files. Last, it's aligned with what other editors do, so with muscle memory of those users.
12861|I just got some similar lagged behavior after pointing to upgraded TS (1.8.7), so the issue may be related to TS and not VS code. Let me work through this this weekend and I'll post some more info.
12862|@felixfbecker yeah typically it is, there is a setting though `window.openFilesInNewWindow` which can cause any files to open in the last used instance. `--wait` overrules this now. Same as overruling `-r`.
12863|"@isidorn Yes, what I'm reporting is related to the ""virtual view"". My suggestions are: 1. If you are using a virtual view you should use a virtual caret, so the virtual view is indistinguishable from a real view.  2. It'd be nice to have a Copy button, like you have for output channels"
12864|Just doing a quick test with 0.10.10, if I run `code.cmd` from the command line, I don't see a `-r` option listed. If I run it without any options, it reuses an existing window. I have to use `-n` to get a new window.
12865|"Yes, we do have `:` registered as a completion character. However, upon receiving the `:` in the `$env:` example above we do return a completion list to VSCode that has all the variables in it. Here's a snippet from our editor services log file which shows that the extension returns a non-empty completion list when the `:` is typed:  ```     READ MESSAGE:      {       ""jsonrpc"": ""2.0"",       ""method"": ""textDocument/**didChange**"",       ""params"": {         ""uri"": ""file:///c%3A/Users/Keith/.vscode/extensions/ms-vscode.PowerShell-0.5.0/examples/DebugTest.ps1"",         ""contentChanges"": [           {             ""range"": {               ""start"": {                 ""line"": 0,                 ""character"": 4               },               ""end"": {                 ""line"": 0,                 ""character"": 4               }             },             ""rangeLength"": 0,             ""text"": "":"" <----           }         ]       }     }  3/11/2016 9:32:39 AM [VERBOSE] - Method ""ResolveFilePath"" at line 248 of C:\projects\powershelleditorservices\src\PowerShellEditorServices\Workspace\Workspace.cs      Resolved path: c:\Users\Keith\.vscode\extensions\ms-vscode.PowerShell-0.5.0\examples\DebugTest.ps1  3/11/2016 9:32:39 AM [VERBOSE] - Method ""ReadMessage"" at line 111 of C:\projects\powershelleditorservices\src\PowerShellEditorServices.Protocol\MessageProtocol\MessageReader.cs      READ MESSAGE:      {       ""jsonrpc"": ""2.0"",       ""id"": 8, <----       ""method"": ""textDocument/completion"",       ""params"": {         ""uri"": ""file:///c%3A/Users/Keith/.vscode/extensions/ms-vscode.PowerShell-0.5.0/examples/DebugTest.ps1"",         ""position"": {           ""line"": 0,           ""character"": 5         }       }     }  3/11/2016 9:32:39 AM [VERBOSE] - Method ""ResolveFilePath"" at line 248 of C:\projects\powershelleditorservices\src\PowerShellEditorServices\Workspace\Workspace.cs      Resolved path: c:\Users\Keith\.vscode\extensions\ms-vscode.PowerShell-0.5.0\examples\DebugTest.ps1  3/11/2016 9:32:39 AM [VERBOSE] - Method ""WriteMessage"" at line 58 of C:\projects\powershelleditorservices\src\PowerShellEditorServices.Protocol\MessageProtocol\MessageWriter.cs      WRITE MESSAGE:      {       ""jsonrpc"": ""2.0"",       ""id"": ""8"",  <------       ""result"": [         {           ""label"": ""$ALLUSERSPROFILE"",           ""kind"": 6,           ""detail"": null,           ""documentation"": null,           ""sortText"": null,           ""filterText"": null,           ""insertText"": ""$env:ALLUSERSPROFILE"",           ""textEdit"": {             ""range"": {               ""start"": {                 ""line"": 0,                 ""character"": 0               },               ""end"": {                 ""line"": 0,                 ""character"": 5               }             },             ""newText"": ""$env:ALLUSERSPROFILE""           },           ""data"": null         },         {           ""label"": ""$AMD_ENTRYPOINT"",           ""kind"": 6,           ""detail"": null,           ""documentation"": null,           ""sortText"": null,           ""filterText"": null,           ""insertText"": ""$env:AMD_ENTRYPOINT"",           ""textEdit"": {             ""range"": {               ""start"": {                 ""line"": 0,                 ""character"": 0               },               ""end"": {                 ""line"": 0,                 ""character"": 5               }             },             ""newText"": ""$env:AMD_ENTRYPOINT""           },           ""data"": null         },         ... ```"
12866|"I seem to be experiencing the same issue. Although, my application is pure JS, no TS. Hovering over anything in JS I get a tooltip of ""Loading..."" and nothing happens.   I have two main projects that I use VS Code for and it only happens on one of them. The other loads fine. The main difference in the project with the issue is that it uses `nvm` for node versioning compatibility. I've made sure `tsc` can be run in both environments and that seems to be fine.   Please let me know if I can provide any other info that might be useful."
12867|"In the february release they deprecated relative paths in your project json. Simply do what the error says and prefix ${workspaceRoot}/ to outDir. Basically your json file should look like this then:  ``` json // A launch configuration that compiles the extension and then opens it inside a new window {     ""version"": ""0.1.0"",     ""configurations"": [         {             ""name"": ""Launch Extension"",             ""type"": ""extensionHost"",             ""request"": ""launch"",             ""runtimeExecutable"": ""${execPath}"",             ""args"": [""--extensionDevelopmentPath=${workspaceRoot}"" ],             ""stopOnEntry"": false,             ""sourceMaps"": true,             ""outDir"": ""${workspaceRoot}/out/src"",             ""preLaunchTask"": ""npm""         },         {             ""name"": ""Launch Tests"",             ""type"": ""extensionHost"",             ""request"": ""launch"",             ""runtimeExecutable"": ""${execPath}"",             ""args"": [""--extensionDevelopmentPath=${workspaceRoot}"", ""--extensionTestsPath=${workspaceRoot}/out/test"" ],             ""stopOnEntry"": false,             ""sourceMaps"": true,             ""outDir"": ""${workspaceRoot}/out/test"",             ""preLaunchTask"": ""npm""         }     ] } ```"
12868|The help was outdated in 0.10.10 and we since fixed that. Can you share some steps and your Code settings for me to reproduce? I suggest to do this from a new issue and not here.
12869|1. already captured in #2163 2. changed the title of this issue to reflect this flaw
12870|Thanks
12871|We will change how we handle threads mostly due to https://github.com/Microsoft/vscode/pull/3990 So putting this back on backlog, as I would like to first fix our thread handling and then look into this
12872|![image](https://cloud.githubusercontent.com/assets/22350/13709038/27db44c8-e7b2-11e5-88ba-e9e77edc7fb5.png)
12873|I have node 4.3.1 in windows 7 with vs code 10.10 and I get :  ``` Url {   protocol: 'http:',   slashes: true,   auth: 'user1:pa$$1',   host: 'proxyhost.company.com:3128',   port: '3128',   hostname: 'proxyhost.company.com',   hash: null,   search: null,   query: null,   pathname: '/',   path: '/',   href: 'http://user1:pa%24%241@proxyhost.company.com:3128/' } ```  I have Also running with code 10,08 same problem .
12874|Is there any functionality that seems broken? Can you for example install extensions?
12875|I don't understand the change of this PR. Could someone please explain?
12876|That's unfortunate. PHP debugging involves multiple requests in most of the cases, I get bug report after bug report and cannot do anything about it because the Thread system in VS Code seems somehow broken itself :/
12877|@felixfbecker #3650 has more details
12878|That is where I get the error , trying to install an extension , in the autocomplete  listing. I also have multiple network interfaces from vagrant and OpenVPN . I have no ideea where to start looking at.  I also  have another funky network related application:  http://widecap.com/ , It can make any application proxyfiable even if it doesn't support poroxying .I use it for apps that don't support proxying.I also tried widecap on vscode without proxy ... but I got some other errors in the console.
12879|If we get a PR in time for March this issue should be addressed. If we do not get a PR in I can investigate into this explicit issue next week.
12880|dup of  #3932 (sorry, should have looked first)
12881|The error code `EAFNOSUPPORT` is what gets me worried. There's something about your system that doesn't let Code talk to `10.0.1.1:3128`, which looks like a decently normal IPv4 address to me.  Is `10.0.1.1` your proxy?
12882|@daviwil please file a separate issue for this. Sounds like an interesting use case that we should support in the future.
12883|"Ns lookup on the proxy host gives me `10.0.1.1`.  I tried again with *_widecap *_software and the error I get is :   ``` connect EAFNOSUPPORT **1.0.0.1:443** - Local (undefined:undefined): Error: connect EAFNOSUPPORT 1.0.0.1:443 - Local (undefined:undefined)     at Object.exports._errnoException (util.js:837:11)     at exports._exceptionWithHostPort (util.js:860:20)     at connect (net.js:838:14)     at net.js:981:7     at GetAddrInfoReqWrap.asyncCallback [as callback] (dns.js:62:16)     at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:81:10) ```  Which gives me some wierd IP address **1.0.0.1:443**. I also have :`""http.proxyStrictSSL"": false` in vscode user settings"
12884|I read through https://github.com/Microsoft/vscode/issues/3650 but I don't understand how it is related to this issue?
12885|@adamweeks If it's JS then it would be a different issue. Have you read through this [similar JavaScript issue](https://github.com/Microsoft/vscode/issues/3791)?
12886|@bpasero Thanks a lot! I'll test this out once it's available.
12887|Yep, I filed one a long time ago (#547) and it seems another has been filed since then (#1222)
12888|You can use Cmd+P to open a file by its name.
12889|It is not directly related but that issue will probably require a restructuring of how we handle threads in the vscode model. And that is very related to this issue.
12890|Can you clarify? Would Ctrl+Tab work?
12891|"> With the March release VS Code will support to 'run' a program   I'm a little confused.  Are you referring to the release on ""March"" 7th or a future release which may or may not happen in March?  Maybe it's time to rethink the milestone naming convention.  ;-)"
12892|@rkeithhill In March we are **working** on the 'March' release which ideally ships at the end of March (but in practice slips a bit into the next month). So what was released on March 7 was the February release. In general just use this query to find our [release plans](https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3Aiteration-plan) with all the details.
12893|Excellent. Updated.
12894|If you don't like this discussion folks, just move on. Reading this thread is completely optional!
12895|@ibhub can you open a new issue?  This issue is about the text of the message, but you are running into an issue using the feature.  Thanks.  CC @weinand @isidorn
12896|@weinand
12897|@bill-mybiz yep, ignore me :)
12898|@bpasero Thanks! Does that map to a VS Code command? I looked through the list and didn't see one. I might have missed it.
12899|@joaomoreno Can I help test this somehow? I see there's a storage key, but I'm not sure how to access that, to change the version number.
12900|@bpasero I've tried to add a unit test but I cant seem to run tests.  When using the launcher it doesn't run my test.  When using `ctrl+shift+t` I'm told weak is not a 32bit program. Which is weird because I can build and launch vs code with no errors.  Is there something I need to do on windows for this?
