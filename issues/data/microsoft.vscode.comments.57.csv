5601|I'm not sure if I face the same problem. In the latest version the output of my test task stops sometimes. I run a batch file (using Windows 10) which compiles the test project and runs the resulting exe. While the compiler output is always displayed the test output doesn't appear in approximately 40%  of all runs. When I run the batch from command line everything works fine. It used to work fine in VSCode before the December update.
5602|cc @chrisdias @dbaeumer   @olivif Do you have more details or maybe you remember something else you did, I tried unsuccessfully to repro by doing the following: - installed jscs extension - `npm install jscs` in the folder I have opened - copied the entire default user settings - created a new `test.js` file - pasted many times,  - reached 40k lines - I see no crash  Is there more to it?  ![image](https://cloud.githubusercontent.com/assets/5047891/12151825/53a3e710-b4b1-11e5-9eb2-639461bc00e8.png)
5603|@jrieken I still see on master the exact behaviour from the second gif: The for loop snippet is after a lot of other stuff at the end of the suggestion list.
5604|:+1:
5605|Please show me [what you see in the Git Output](https://github.com/Microsoft/vscode/issues/1508#issuecomment-168659280).
5606|@markrendle, @drewcassidy: We now have a block cursor :)  @egamma: Maybe I'm missing something but I don't see this in the January Iteration Plan? To better understand the VS Code roadmap, the goal is still to expand the extension APIs to better support VIM (as an extension)?  I think most of the issues that we [https://github.com/VSCodeVim/Vim] have been struggling with have been localization -- dealing with the variety of keyboards/keybindings that I did not know existed
5607|"@alexandrudima thanks for having a look. those are the steps I did as well, the main difference to your example is that I was editing jscs preferences, specifically `""jscs.configuration"": """"`. The other difference is that I was doing: copy, paste, save, remove some lines (ctrl X), save, repeat.    maybe it was a combination of extensions I had installed with the preferences I was editing. regardless, after removing all extensions I couldn't repro anymore. I have also upgraded to 0.10.6, reinstalled jscs and tried to repro again with no luck.   the strange thing was that it was super consistent at that point, I could just follow the steps and repro every time. after reinstalling extensions and upgrading, I couldn't repo even once."
5608|Sorry... bad multi-tasking today. It's blank: ![screen shot 2016-01-06 at 3 19 44 pm](https://cloud.githubusercontent.com/assets/1559447/12153649/f5856348-b488-11e5-8a7f-4bc84b433cd7.png)
5609|Assigning this to @jrieken who wrote the original gulp task that compiles the API docs: could you take a look at enabling H4 tags (one level deeper for H3s that have children)?  Let me know if you need help :)  Thanks!
5610|Unfortunately, no repro... this is odd. What could be causing a leak within that specific project?  Speaking of which, this might be different from @Tyriar's initial issue. His was unresponsive, mine and gwynjudd are crashes with the error dialog..? In which case maybe we should make a new issue...
5611|Perfect! Thanks :clap: <br/> However, there still seems to be a problem when the class name begins with an underscore:  ![baseerror](https://cloud.githubusercontent.com/assets/9283914/12157699/e7330fca-b4d3-11e5-9d23-f2ba719138b8.png)  I have [set up a repository with my sample project](https://github.com/SetTrend/TS18) for another issue I observe with TypeScript (Microsoft/Typescript#6382). Perhaps you may want to take some files and my setup from there?
5612|There isn't, yet. Issue #1673
5613|+1  Although I would prefer it Resharper Style where it changes the behavior of the standard Ctrl + Left and Ctr + Right hotkeys.
5614|> At this time, for the case of Nunjucks, you have to go the full way, and (re-) implement all the functionality that you need. But at least you have full control, and e.g. don't see any snippets that don't make sense in your context.  ok, another question then: how can I re-implement emmet snippets in a language plugin?
5615|"> it's pretty standard  I guess that depends on what you think the ""standard"" is (or want it to be)?  Atom/Sublime or Visual Studio.  :-)"
5616|"+1  ... and along those same lines, it would be useful to see the ""index"" of the currently highlighted match; e.g. if there are 20 matches and the 14th is highlighted, I'd see 14/20, and find next / find previous would increment / decrement the index, respectively."
5617|@Elusive138 odd. does it reproduce if you just open that workspace without opening any JS file?  Also, maybe we can start profiling this using the chrome developer tools where you can do heap snap shots. For that, just do a snapshot before and after some time to see where those memory goes.
5618|@bpasero Oh, I completely forgot about those devtools. I'll try that one tonight.
5619|Hi Dirk,  It still persist with 0.10.6 on Linux. Here are some screenshots attacked.  Thanks  ![screenshot from 2016-01-07 12 06 20](https://cloud.githubusercontent.com/assets/8169482/12163955/9f7774c8-b537-11e5-9462-4fc0eacf05be.png) ![screenshot from 2016-01-07 12 06 35](https://cloud.githubusercontent.com/assets/8169482/12163956/9f7d5adc-b537-11e5-916e-7c9cb780dd8b.png)
5620|Hi Dirk,  It still persist with 0.10.6 on Linux. Here are some screenshots attacked.  Thanks ![screenshot from 2016-01-07 12 16 13](https://cloud.githubusercontent.com/assets/8169482/12164062/7cf1c592-b538-11e5-87fd-f688d5969a6f.png)
5621|Hi Dirk,  Here is my package.json file.  Thanks ![screenshot from 2016-01-07 12 17 02](https://cloud.githubusercontent.com/assets/8169482/12164086/a5e73da6-b538-11e5-911e-0131f5bb66aa.png)
5622|Closing, code . & works.
5623|Interesting. Since you seem to be on a Mac, try opening Terminal and type `git` and `git --version`. Let me know what that yields.
5624|Hi **@sdenel**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
5625|@sdenel Sorry for picking this up so late. There are now merge conflicts, do you mind cleaning those up?
5626|This is a really cool idea. Do you want to try to tackle it?  We have code to handle [staging ranges](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/git/common/stageRanges.ts) and an [example action](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/git/browser/gitActions.contribution.ts#L251) that uses it, as a starting point.
5627|@alexandrudima fyi
5628|@alexandrudima fyi
5629|@alexandrudima fyi
5630|Before you fix this, can I ask you to zip up the contents of `c:\Program Files\Microsoft VS Code\resources\app\extensions\csharp-o` and upload them somewhere where I can look at?  You can fix this by simply deleting the `c:\Program Files\Microsoft VS Code\resources\app\extensions\csharp-o` directory using the Windows Explorer.  Duplicate of #1605.
5631|The `.vscode` directory is where an instance of VSCode saves its configuration settings. It's unrelated to what you are doing.  When you ran `git clone https://github.com/microsoft/vscode`, this should've created a `vscode` folder under your current working directory. This is the folder that `cd vscode` should go into.
5632|@egamma @chrisdias fyi
5633|Duplicate of #1673
5634|You seem to have made a mistake by running `npm` with `sudo` at least once. I'd preferably avoid it since that will create root owned directories in `~/.npm` which will be hard for your user to work with. Just my two cents.
5635|@SofianHn, @gregvanl I believe there was a reason why we did it that way. Is it that only then they show up in the right hand side navigation?
5636|yes and no. there is command but I believe it won't work the way it should.
5637|It should be like `vscode.editor.changeLanguage` with `uri, languageid` or so. basically whatever gets executed when a selection in language picker is made
5638|Correct, it is an issue with the installation on the user machine. That custom restore script just happens to call `npm` somewhere.
5639|<kbd>Ctrl E</kbd> (<kbd>⌘E</kbd> on Mac) will open **quick open**. This widget will not only let you open any file in your workspace, but also show you the list of your previously opened files.  **Bonus tip:** holding <kbd>Ctrl</kbd> (or <kbd>⌘</kbd>), pressing <kbd>E</kbd> multiple times and releasing <kbd>Ctrl</kbd> (or <kbd>⌘</kbd>) gives you the feature of **quick navigate** in that very same history. It's my bread and butter.
5640|I can have a go :smile:  I see this was also a feature request in this issue #150
5641|I will simply close this issue since it contains too many items, and address each one individually: 1. Please file an issue just for this. 2. Will likely not happen, as Atom and Code have very different extension models. 3. Can you do this using the tasks mechanism? 4. I don't understand what you mean by this. 5. Code doesn't come with standalone Node. You are free to using whichever version you want. 6. Please file an issue just for this. 7. Please file an issue just for this. 8. #105
5642|@tucker-m please enable `filePicker.alternateFileNameMatching` in settings to get fuzzy matching. Happy to hear feedback how it works.
5643|Also @jrieken fyi
5644|I think this action does not exist the way wanted, it just opens the mode picker. Having a way to change the mode on a opened document is maybe something that should be exposed as API?
5645|"@rajeevkumarsharma the problem is that you list app/app.ts in the tsconfig.json file. So the settings defined in the tsconfig.json file only apply to that file. However the code is on app/lib/rest.ts. You either need to list that file as well or don't list any files at all. If you go with the second I recommend to exclude the node_modules folder. Something like:  ``` json {     ""compilerOptions"": {         ""module"": ""commonjs"",         ""moduleResolution"": ""node""     },     ""exclude"": [         ""node_modules""     ] } ```"
5646|"@potasiyam can you run ""code --verbose"" and open the dev tools console to see file events logged and retry and send the output here?"
5647|Duplicates #1740
5648|Closing
5649|+1  That's funny, I came across this exact issue just a moment ago. My workaround was to use it's ASCII code: `&#124;`
5650|Do you see the same problem when compiling using tsc on the command line. If so pls report against the Microsoft/TypeScript repository.
5651|@jrieken we do not support glob patterns for registering file names to languages currently. The code that decides which mode to load given a file name is https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/modes/languageExtensionPoint.ts#L451
5652|Ok, I see, this happens in the case the find widget is hidden.  If focus is in the editor and the find widget is hidden and <kbd>F3</kbd> is pressed, focus moves to the now revealed find widget.  If focus is in the editor and the find widget is shown and <kbd>F3</kbd> is pressed, focus stays in the editor.
5653|Hi Dirk,'  Now it is fine with exclude property.  Thanks for helping Rajeev Kumar Sharma
5654|@joaomoreno I had the same issue with my corporate proxy, I used your instruction, and I've got the same error message as @takuan-osho . **end of central directory record signature not found**  I'm trying to install the PowerShell Extenstion behind a corporate proxy.
5655|Absolutely, I can now reproduce. Steps: - Create a `bug.js` file with the following contents:  ``` function duplicateFunction(param) {  } ``` - Commit that. - Add `return param;` to the body of that function. - Open the file in the Git viewlet. The error will show up and stay around.  The `return` statement changes the function's signature and confuses the language service.  @jrieken I thought the read-only buffers were ignored from the language service.
5656|It is possible that your proxy blocks some requests?
5657|After a few design iterations and discussions with the team we don't think that this is the right thing to do just now. We might revisit this once the horizontal panel is ready but I will close this until that point.
5658|@joaomoreno yes that's totally possible. The proxy I'm using is a corporate proxy, and I have no idea what rules he is using.
5659|Hey I just wanted to do a +1 on this one, this would be a really useful addition!
5660|The new more colorful default themes are now available as an extension. Please see issue #1849 for background and for how to install them.
5661|As for the editor service: there is always an active text editor, independent from where focus is. Clicking into a viewlet does not make the current active editor inactive. The same would be true btw if we introduce a horizontal panel for output/repl.
5662|@PeterJausovec, @SteveLasker fyi
5663|closing in favour of #1851
5664|I like
5665|Difficult to fix, as we tokenize line by line.
5666|we cannot make it a setting because by the logic of the document API and synching it will remove that document and create a new one. like calling `document.languageId = 'foo'` will make it disappear.
5667|see also #1231
5668|@aeschli can you point me to right direction where to look at this? I'm pretty new to vscode.
5669|> ok, another question then: how can I re-implement emmet snippets in a language plugin?  Is the question to enable emmet snippets for a particular file type?   The emmet implementation maintains a table of file types in which emmet is enabled. You could provide a PR to enable this for your language. This is the [source](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/emmet/node/editorAccessor.ts#L22).
5670|FYI @wadeanderson7
5671|I can confirm this happens for me as well. I am using Mac OS X. The operating system's display scaling is off (i.e. 1:1). I have been experimenting and it seems as though the bug is that the right click menu is displayed according to the cursor position, but this calculation is not adjusted to take into account zoom.  The reason I say this is because if I right click near the top left of the editor, the cursor is quite close to the top left of the menu. But if I right click near the bottom right of the editor, the cursor is much further away from the top left of the menu. The misalignment is proportional to the distance from the top left of the editor.
5672|@jpoon To support a VIM extension is still on our roadmap. It was a temporary copy/paste incident that the above link was created and that this showed up on the January plan, sorry about that.  Regarding open issues in vscode to support a VIM extension is this [list](https://github.com/Microsoft/vscode/issues?q=is%3Aopen+is%3Aissue+label%3AVIM) representative of the issues you are facing?
5673|Autocomplete in PHP consists of all global symbols (functions, variables) as well as variables (starting with $) and functions defined in the code.  Can you tell us more about when you see the slowness? Is it for large files?
5674|Actually, we've discussed this in the team and decided to close it, as the `for-of` syntax doesn't really offer inherent advantages besides slight readability improvements and we don't really have guidelines for these sort of things.
5675|I can't reproduce. Can you clear your browser history, cache, etc?
5676|Duplicate of #69   There is a workaround in #69 that will get you the support you want. The proper fix will come in January.
5677|I get: `crun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun`  Like I said, I don't have git installed :stuck_out_tongue_winking_eye:
5678|I love the new light theme plus! <3
5679|The dark theme seems to color functions different compared to light plus. I am not sure though colouring functions adds much value.  ![image](https://cloud.githubusercontent.com/assets/900690/12173833/60772cd8-b559-11e5-89e3-aec3d66a0be6.png)  ![image](https://cloud.githubusercontent.com/assets/900690/12173836/662b0708-b559-11e5-8e5d-eb114bca29e8.png)
5680|for me the old and the new themes look exactly the same (javascript). EDIT: I'm seeing the color changes described. Sorry.   Although, for example, I'm not seeing parameter names colored in arrow functions. Is this supposed to be supported?  > response (MA): this is a issue of the JS/TS tokenizer, I filed issue https://github.com/Microsoft/TypeScript-TmLanguage/issues/42  The problem which the other themes do not display colors as expected persist. EG: monokai not displaying the parameter names in orange. Is this related to the tokenizer issue?  > response (MA): again this has to do what scopes the tokenizer uses and what Monokai is coloring.
5681|I don't see that. Using Monokai I get brown as color: ![image](https://cloud.githubusercontent.com/assets/6461412/12173735/d5b14e76-b558-11e5-90bb-3e9b4171d9e8.png)  Monokai defines the comment color on scope `comment`.  To debug this, open the dev tools (F1 > Toggle Developer Tools) to see what css rule matches the token: ![image](https://cloud.githubusercontent.com/assets/6461412/12174226/c77f4c88-b55b-11e5-9195-b63d41863c47.png)
5682|It's an issue with the csharp tokenizer, same issue in atom (languages-csharp 0.11.0) ![image](https://cloud.githubusercontent.com/assets/6461412/12174635/24a4af8c-b55e-11e5-90ed-0fcd3e8bd920.png)
5683|This issue was moved to atom/language-csharp#48
5684|Can confirm that - the fix in #69 doesn't work for me. - the proxyStrictSSL setting doesn't seem to make a difference. - the Atom setting works for me in Atom  Our corp proxy is Triton Websense, and that's the extent of what I know about it, other than that it consistently interferes with Node apps using SSL.
5685|In the December we modified the default white theme to be in sync with the original Visual Studio light and dark themes. So what you see is expected. You can follow the discussion in #1270. The colors will be available in new themes, see #1849
5686|"this one is driving me mad as well. We use zscaler. What I have done   initially I was getting 'unable to get local issuer certificate' when even trying to choose 'install extensions' bypassing .visualstudio.com at zscaler for ssl inspection fixed that and I could list extensions.   now I just get the error one step later.   using   ""http.proxyStrictSSL"": false   in settings.json does nothing.   I logged a call with zscaler as well to see if they could assist. Same technique what I've done above seems to work fine for atom and sublime text so I think this is a vscode problem."
5687|Ok, now we're getting somewhere. What do you get when you run `which git`?  You don't have `git` installed, but you do have `git` in your path somewhere, it is just broken. Pushing a fix.
5688|Ok guys, this is embarrassing. :dizzy_face:   Just like #69, this issue wasn't correctly fixed. Pushing a definite fix right now.  **Workaround** until the next release: 1. Launch Code in Administrator mode. 2. In Code, open the `C:\Program Files (x86)\Microsoft VS Code\resources\app\out\vs\workbench\electron-main\sharedProcessMain.js` file. 3. Use the **Find Widget** (<kbd>Ctrl F</kbd>, <kbd>⌘F</kbd> to replace the only occurrence of `http.proxy.strictSSL` with `http.proxyStrictSSL`. 4. Save and restart Code.
5689|My bad, should have thought of that first. Verified in In Cognito mode, so I'm sure it works fine.
5690|@jmeier what is a docked window?
5691|As far as I know there is no reason for it to be h3. We have the constrains for H2 in order to show in the right side navigation. I am looking with @bgashler1 to make the subs h4 and fix the styling to make it more readable.
5692|I've just tried this and no luck for me.   after following your instructions, saving and restarting code I get the same issue. print screen attached showing after I reopened it. edited line included as well as the error.   ![2016-01-07_18-35-46](https://cloud.githubusercontent.com/assets/5390419/12177701/d68119de-b56d-11e5-9a9d-d92e1bdca938.png)
5693|I have moved this to the marketplace backlog.
5694|I do? I get this output:  `/usr/bin/git`  I have barely used git, so I wouldn't know 😄 I use SourceTree for my version control stuff. This is a work computer, so maybe it was here initially.
5695|I thought emmet was an option to enable in a lang plugin... but it's totally unrelated, I see... I would say this hidden config is kinda wrong, either should it be a plugin configuration switch or a user setting... Anyway I got the big picture and I guess I'll just stick to the HTML lang for the time being. I guess you can close the issue.  Thanx
5696|I agree that hard coding is not correct and needs to be improved. Closing this issue as suggested.
5697|it still reproduces using the --disableExtensions flag
5698|It's fantastic that there is a `VIM` label.  A couple more: - https://github.com/Microsoft/vscode/issues/997 - https://github.com/Microsoft/vscode/issues/1066
5699|Thanks! Seriously impressed at how on top of it you guys are with triaging these issues :+1:
5700|Added RegExp example
