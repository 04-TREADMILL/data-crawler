2701|yeah. you can do `[{pattern: '**/lowercase'}, {pattern: '**/Uppercase'}]` tho it would be pita to provide all possible permutations. @PeterJausovec is your scenario actually such that case matter and is it common that the file must match on name (like a package.json, tsconfig.json) but is given varying cases?
2702|@jrieken : So the support for this feature will take some time to implement.
2703|@jrieken So type definitions won't be necessary anymore in the future as they can be generated on the fly? Or will `tsc` still need them?
2704|@isidorn I do not have the old state and I do not want to introduce a new model for preserving the old state. Since the UI has the old state by definition (it's visible in the UI), it makes more sense to implement this feature there. In addition we can offload repeated implementations of this feature from debug-adaptor authors.
2705|Makes sense. I can look into this over holidays :santa:
2706|depends... Even if tsc understands this  ``` module.exports.foo = function(a, b, c) {    return a * b; } ```  to be a module that exports a member `foo` of type function you will need to help it out the types of the parameters. They cannot be inferred by TS. That's why there are `d.ts`-files
2707|@abhilashsajeev The TS team is working on this since a while and close to finish
2708|All details in here: https://github.com/Microsoft/TypeScript/issues/4789
2709|I can add a flag to glob to ignore casing, since its just a RegEx in the end it should be easy.
2710|(that is, it would be an option, I dont want to enable this for any glob)
2711|unless the flag is in the glob expression itself, it will be the same as me lower-casing the string first I guess
2712|@jrieken :+1:  Thats great! as long as this comes out I would completly switch my node.js devs to vs code. Hope to have this by end of year.
2713|"OK - so if I understand what this means is VsCode requires `sources` and will ignore `sourcesContent`?  Anyway - this seems to be an issue with my compilation pipeline. (facepalm) When I manually doctor the source map, it works. I just migrated this app to Babel 6... coincident with using VS code for the first time. When I said other debuggers were working, it didn't occur to me that they were working _before I updated_. Something in my pipeline is not respecting any of the source map directives other than `sourceMap`. I didn't look carefully enough at the output before complaining here. I am guessing there's a problem with gulp-babel version 6, or I just did something stupid.  Interestingly I have to remove the  `""sourceRoot""` definition, or it breaks on the wrong line.   This works:  ``` {""version"":3, ""sources"":[""../src/ioc.js""], ""names"":[], ""file"":""ioc.js"", ```  This breaks on the wrong line:  ``` {""version"":3, ""sources"":[""../src/ioc.js""], ""names"":[], ""file"":""ioc.js"", ""sourceRoot"":""../src/"", ```  This is the undoctored version that babel is generating.   ``` {""version"":3, ""sources"":[""ioc.js""], ""names"":[], ""file"":""ioc.js"", ""sourceRoot"":""/source/"", ```  No idea where it's getting ""/source"" from. This all worked fine prior to 6. Thanks for bearing with me here."
2714|The submodules still show as modified, the reason is that their contents are still staged for deletion. If i unstage the changes in each of the submodules the git status is then finally clean.
2715|It does look like when you are loading a project (the first time?) into visual studio code it stages every files for deletion in the project and its submodules.
2716|"@jamietre yes, VSCode ignores the sourcesContent (for now) because it does not make much sense to use the embedded and readonly source from the sourceMap if you have the real source available in your VS Code workspace (where you can edit and compile it).  Usually the optional ""sourceRoot"" is the extracted common prefix of all paths in the ""sources"" array (to save space). So it is prepended to all paths from ""sources"". In most cases I've seen it to be the empty string or non existent (your first case). The second case looks already broken because sourceRoot looks like a common prefix but it is not removed from the path from ""sources"".  And the third case looks strange because sourceRoot is absolute (starts with a slash). This is always a problem because it makes the source map location dependent."
2717|Even after you clean up the mess, the submodule contents eventually are again staged for deletion.
2718|Right, since glob patterns are not RegExp syntax, there is no syntax from what I remember to form a case-insensitive glob. Would it make sense to allow to set this flag from the side of the extension?  {pattern: '**/lowercase', ignoreCase: true}
2719|@alexandrudima Thank you so much! Your workaround worked for me. I guess it should be added to [How to build and run from source](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source) . Of course after finding more generic solution.
2720|Thanks @joaomoreno. Will wait for next release to be fixed.
2721|It's definitely just a workaround, let's try to find why you couldn't compile. I'll set up a VM tomorrow with exactly your setup and see what I get.
2722|Fix delivered
2723|Is your project OS? Could I clone it and give it a try?
2724|Hi **@Tyriar**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
2725|Unfortunately it is not, I'll see if I can recreate it with a simple project.
2726|Thanks @MattiasPernhult and @Agetorp ! You guys are legends!
2727|Definitely can reproduce this.  Moving folder to non-network share seems to solve any problems.
2728|I would say case doesn't matter; since Docker users will probably have more than 1 dockerfile, our idea was to provide the syntax coloring and all that magic for files that are named `dockerfile*`.
2729|Hi **@scottaddie**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
2730|My extension is only interested in the text that is currently visible in the editor.  If it is not visible I do not need to work with those lines.  At a basic level, Given user input I am highlighting anything that is visible inside the current editor that matches the request,  if is not visible I do not need to highlight it.  I think there are many ways to meet the requirement, not only through line count.  Let me know if you need/want more clarification.
2731|Yeah, is it for performance reasons that you want that? You can use the decorations api for highlighting parts of the editor content and you wrt perf shouldn't need to care if the lines are visible or not
2732|Yes - by default it works for C# and TypeScript and can be invoked with `Cmd+T`. Other extensions can contribute via the `WorkspaceSymbolProvider`
2733|"I _would_ write one, but the documentation isn't really helpful as it basically says ""download the example project"". A step-by-step tutorial would be helpful."
2734|Dude it is what the message says - you have to install php and then either put the path of the php binary in the setting or inside your %PATH%.
2735|Found https://github.com/cmpaul/vscode-php-debug
2736|But i use Wamp. I solved The problem, but why this message? Why i have to install php? If i don't want, The message will be showing to me... I think it isn't good.  Enviado pelo meu Windows Phone  ---  De: Felix Beckermailto:notifications@github.com Enviada em: ‎03/‎12/‎2015 15:17 Para: Microsoft/vscodemailto:vscode@noreply.github.com Cc: schinaidermailto:victoralmeidaschinaider@hotmail.com Assunto: Re: [vscode] Cannot validate the php file. The php program was not found. (#971)  Dude it is what the message says - you have to install php and then either put the path of the php binary in the setting or inside your %PATH%.  ---  Reply to this email directly or view it on GitHub: https://github.com/Microsoft/vscode/issues/971#issuecomment-161736266
2737|You don't need to, but it cannot validate (lint) the file without it. Just like the message says. I'm not familiar with Wamp, search for your php.exe.
2738|Sorry for anything 😃. I just want to say i think is not user friendly to show The message all time i open the Visual Code. I think it will be good, if i could easily desativate the warning... Understand?  Enviado pelo meu Windows Phone  ---  De: Felix Beckermailto:notifications@github.com Enviada em: ‎03/‎12/‎2015 15:29 Para: Microsoft/vscodemailto:vscode@noreply.github.com Cc: schinaidermailto:victoralmeidaschinaider@hotmail.com Assunto: Re: [vscode] Cannot validate the php file. The php program was not found. (#971)  You don't need to, but it cannot validate (lint) the file without it. Just like the message says. I'm not familiar with Wamp, search for your php.exe.  ---  Reply to this email directly or view it on GitHub: https://github.com/Microsoft/vscode/issues/971#issuecomment-161739099
2739|Imo if you do PHP development you probably have PHP installed, right?!
2740|yes.
2741|@rhires   I had the same problem but updating to 0.10.3 solved it.
2742|Posting snafu, please see #985.
2743|"So, it looks like VS Code uses Element style html: http://docs.emmet.io/  where this:  ``` ul#nav>li.item$*4>a{Item $} ```  becomes this once you press <kbd>Tab</kbd>:  ``` <ul id=""nav"">     <li class=""item1""><a href="""">Item 1</a></li>     <li class=""item2""><a href="""">Item 2</a></li>     <li class=""item3""><a href="""">Item 3</a></li>     <li class=""item4""><a href="""">Item 4</a></li> </ul> ```"
2744|pls see #291 for the zooming issue (in general pls do not create combo issues :smile: )
2745|"@felixfbecker https://code.visualstudio.com/docs/extensions/example-debuggers is meant to be a ""a step-by-step tutorial"". Please let me know what you are missing from the tutorial or what is difficult to understand. I'd be glad to help."
2746|fix delivered
2747|Yeah that's a fair point, I guess shipping the compiled module in my extension is probably a good idea (or at least the binary) and get it done for each platform.  I _might_ be able to make an assumption of the build tools (given that it's work working with microprocessors) but it's solid assumption.
2748|That would be :+1:
2749|"Thanks for the interest in this topic and I apologize for not commenting sooner, I’ve been on vacation and just getting through my backlog. Let me try to provide more details behind our thinking here.  When we set out to open source our code base, we looked for common practices to emulate for our scenario. We wanted to deliver a Microsoft branded product, built on top of an open source code base that the community could explore and contribute to.   We observed a number of branded products being released under a custom product license, while making the underlying source code available to the community under an open source license. For example, Chrome is built on Chromium, the Oracle JDK is built from OpenJDK, Xamarin Studio is built on MonoDevelop, and JetBrains products are built on top of the IntelliJ platform. Those branded products come with their own custom license terms, but are built on top of a code base that’s been open sourced.  We then follow a similar model for Visual Studio Code. We build on top of the `vscode` code base we just open sourced and we release it under a standard, pre-release Microsoft license.   The cool thing about all of this is that you have the choice to use the Visual Studio Code branded product under our license _or_ you can build a version of the tool straight from the `vscode` repository, under the MIT license.   Here's how it works. When you [build](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#build-and-run-from-source) from the `vscode` repository, you can configure the resulting tool by customizing the [`product.json`](https://github.com/Microsoft/vscode/blob/master/product.json) file. This file controls things like the Gallery endpoints, “Send-a-Smile” endpoints, telemetry endpoints, logos, names, and more.    When we build Visual Studio Code, we do exactly this. We clone the `vscode` repository, we lay down a customized `product.json` that has Microsoft specific functionality (telemetry, gallery, logo, etc.), and then produce a build that we release under our license.  When you clone and build from the `vscode` repo, none of these endpoints are configured in the default `product.json`. Therefore, you generate a ""clean"" build, without the Microsoft customizations, which is by default licensed under the MIT license (note, i made [this commit](https://github.com/Microsoft/vscode/commit/9dd095c27ea79f526b054f741bb52fa62fae80a9) to help make this more clear).  I hope this helps explain why our Microsoft branded Visual Studio Code product has a custom product license while the `vscode` open source repository has an MIT license. Last, I apologize for the fact that the naming of “Visual Studio Code”, “VS Code” and the `vscode` repository are so similar, I think it contributed to the confusion.   Chris"
2750|I've had this occasionally myself. I'm pretty sure it happens when VSCode is checking with git to see if there are any remote changes, and changed files, etc. Usually it doesn't last long for me, but for very large repositories I could see it taking a while. Normally I see this when I try to pull from a remote and a simple retry works fine. I don't know what could be done about this except to make vscode's interactions with git configurable. Git uses file-based locking and if the repository is being updated it needs to be locked to keep integrity.
2751|+1
2752|Hi **@takumif**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
2753|I'm just hitting `COMMAND + -` on my keyboard. The screenshot shows the smallest it will get.  Cheers, Trevor Sullivan Microsoft MVP: PowerShell
2754|I've had this consistently, especially when doing a git rebase with VS code open.
2755|(ctrl+k,u)
2756|"Cool. Just got the vscode 0.10.3 update. I thought you meant a separate update for omnisharp. We'll see if I continue having the time out issue. It isn't a consistent thing. Meanwhile: Interesting. I notice that the update date is 11-26-15...and vscode didn't tell me there was an update. Time for a new issue: ""VScode ""checking for updates"" hangs and doesn't check for updates."
2757|"@rhires I should have mentioned ""vscode"". And yes, i agree about the new issue. Like it was for you, vscode didn't tell me anything about the update."
2758|Sneak in https://github.com/Microsoft/vscode/issues/507 maybe?
2759|I have this issue as well.
2760|`queryMethod` looks like a simple object so you cannot call it like a function, so i think this error is normal since there's no call signature for this object.
2761|I've hit this with typescript snippets in 0.10.3 and 0.9.x (I think 0.9.2).  A fix is much appreciated!
2762|@bpasero Sorry, I thought they were same because the first time I met this issue, that JSON file was supposed to be shown at startup. So I did experience slow startup / crashes :) And now after reading the discussions I realized they're different.
2763|well, removing the extensions did the trick but now I wonder if i update next time, then again I would have to remove all the extensions and then re-install them one-by-one which is very time consuming, right! BTW thanks for help!
2764|+1
2765|Can someone send me instructions how to setup such an environment? I would like to reproduce.
2766|That's abnormal behaviour. Maybe something broke during the update process.
2767|+1
2768|Or the extension has some side effects. What extension did you have installed when the problem occured?
2769|duplicate of #250
2770|@pali88 Can you please provide a description
2771|Pull request delivered, thanks @Tyriar !
2772|We just ask Chromium to render the font. The only alternative would be to add support for dynamically injecting css @font-face
2773|@slayerxj Can you please share the JSON file with me?
2774|@jacek-dargiel Can u give me an estimate of your workspace size, like # of JS files?
2775|@rhires @DiegoZoracKy Do you guys have mono installed or is it just coreclr?
2776|LGTM. Thanks for the contribution.
2777|This issue was moved to blindly/vscode-puppet#1
2778|Thanks @bumpmann. `queryMethod` is defined as an object which unlike a function or constructor doesn't have a call signature.
2779|@wk-done What is you are trying to achieve? Running a C# app from terminal out of VS Code? Is it a msbuild app or dnx app? Please provide _exact_ steps like 1. have this code 2. do this 3. do that 4. _xyz_ happened which isn't expected
2780|A rewriting issue
2781|Hi **@resir014**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
2782|"Now I get permission denied errors from Git - I don't think code should be blocking Git from doing anything?  (note that `git up` is a synonym for `git pull --rebase`)  ``` $ git stash && git up && git stash pop Saved working directory and index state WIP on master: 2811dac Issue #6272: webapp: bugfix after enum rewrite. error: unable to create file lib/server/dbal/dbal-base.ts (Permission denied) fatal: Could not reset index file to revision 'HEAD'. lib/server/dbal/dbal-base.ts: Permission denied lib/server/dbal/dbal-base.ts: Permission denied First, rewinding head to replay your work on top of it... Applying: Issue #6272: webapp: bugfix after enum rewrite. Removing lib/server/dbal/history.ts On branch master Your branch is ahead of 'origin/master' by 1 commit.   (use ""git push"" to publish your local commits) Changes not staged for commit:   (use ""git add/rm <file>..."" to update what will be committed)   (use ""git checkout -- <file>..."" to discard changes in working directory)          modified:   lib/server/dbal/dbal-base.ts         deleted:    lib/server/dbal/history.ts  no changes added to commit (use ""git add"" and/or ""git commit -a"") Dropped refs/stash@{0} (90803eefd2da3da61892b8c7d1e2ae898f3fd92d) ```"
2783|"For now I've disabled Git in the user settings, let's confirm that it goes away then.  ``` ""git.enabled"": false, ```"
2784|Such extension has appeared not long ago https://github.com/mattiascibien/dlang-vscode
2785|Good idea. Let me know how that goes. Meanwhile, I'm looking into alternative ways to poke around the `git status` without side effects.
2786|Thanks for the pointer. I'm very interested in 'adoption blockers' and in tuning our quick open even more. We should definitly look into this.   +@stevencl
2787|@aeschli I'd be nice if you can update the html and JSON intellisense to use the textEdit
2788|Pull request delivered, thanks @resir014 !
2789|Have to check if there is API in Electron to find out about spaces.
2790|I believe this is fixed with our update to Electron 0.34.5. @pcgeek86 you can verify this by building your own distribution of Code from master and giving it a try?
2791|@moostad when this happens can you open chrome tools (Help > Toggle Developer Tools), open the Profile tab and run a CPU profile to see where the time is spend?
2792|For december I actualy tweaked the quick open search algorithm to include more results. Before we would not match a file `quickopen.test.ts` when you searched for `open` because we did not search for the string inside the name.  There are more things we can do to come closer to what Sublime/Atom do: - [ ] include the full path of a file to match on instead of just the name - [ ] match fuzzy, that is if you search for `ott` it would match `quickopen.test.ts` because there is a sequence in the file name of these characters, even though not directly connected (I think `ott` could be rewritten to `o*t*t*` to express this)  I am happy to work on this and give it a try. I am not sure we need to make this an option as long as the most relevant results are sorted to the top.
2793|:+1:
2794|Duplicate of #901
2795|@joaomoreno i have fixed the problem of disappearing highlights when focusing a suggestion
2796|@isidorn whats your commit id you are on?
2797|Ok updated to latest and I no longer see it, it seems. I will reopen if I see it again
2798|@isidorn nice, there was a bugfix for this yesterday, but now it should all be ok!
2799|@lextm Thank You. Just what I was looking for. I am having problems with the section header snippets. Do they work for anyone else? According to https://code.visualstudio.com/docs/customization/userdefinedsnippets regex replacements are not supported (yet).  Maybe a command that underlines the current line could be used instead. If the line is already a header, it could be modified to use the next header level. This is how the emacs rest-mode works.
2800|"Challenge is to have a nice signature that is backwards compatible. I only see something like this  ``` interface CompletionItemProvider {   providerItem: ((doc, pos, token) => CompletionItem[] | Promise<CompletionItem[]>) | ((doc, pos, context, token) => CompletionItem[] | Promise<CompletionItem[]>) } ```  which I am not a big fan of"
