9301|I'd just filed an issue on this same topic, see #2974 for some more details.
9302|@MSLaguana this issue is the more general issue that results in a mismatch between debugger source and breakpoint source being out of sync because live update isn't supported at all. Your issue #2974 refers to the specific 'save' sub-issue.
9303|windows 10 x64
9304|Dup of #2975
9305|Fixed via https://github.com/Microsoft/vscode/commit/61f5dc66974300dc4a665de1c90f6cd7d68df1d5
9306|Then it's a duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/11. This has been reported several times so it got a lot of attention. I'm not sure what's the state, if it's hard to fix or how close we are with a fix. Feel free to comment in the issue.
9307|Yes, thanks for clarifying. But the linked issue wasn't an issue earlier and it was possible to use ES6 `import` statements in the previous release without the jsconfig file.
9308|"I have Salsa mode enabled... although despite having installed TypeScript 1.90, I still get the ""(Salsa !)"" status on this project.  My html file - which uses script tags with relative paths, still fails to open when I Ctrl-Click the src. It is still ignoring the ""../../.."" part of the path, and concatenating the rest of the path onto the end of the current project folder location. The is definitely (as far as I can tell) as VSCode problem.  The additional issue, where a ts file is using SystemJs to load modules -also has the red squiggle underlining the paths, but I think this is an issue with TypeScript or my config. I am using 'map' in my config to point to script files. My app works.. it finds the files at runtime, by tsc still complains with error TS2307."
9309|This issue was moved to Microsoft/vscode-tslint#28
9310|There is an extension for Python, pls see https://marketplace.visualstudio.com/items?itemName=donjayamanne.python
9311|I've started to move a few highly requested items from [User Voice](http://visualstudio.uservoice.com/forums/293070-visual-studio-code) that are good candidates for extensions. Lots of language support extensions. I also added a list of popular atom extensions that some of our users have given us feedback on.
9312|@rotozoom if I install mocha in a project folder 'project1' on Windows, then './node_modules/.bin/mocha' is not a JavaScript file but a shell script (which doesn't make sense for the 'program' attribute). That's the reason why the debug adapter thinks that a source map (shell <-> JavaScript) might be missing.  Using the path `./node_modules/mocha/bin/mocha` works for me.
9313|Thank you, @weinand ! My bad!
9314|I believe this was a purposeful choice. We don't want to apply the `Visual Studio` brand to the OSS flavour of Code. @chrisdias has the word on this.
9315|"It might actually be useful in communication to refer to the distinction as ""vscode"" and ""osscode"" (or ""oscode""?).  This would have probably helped out in issue #60 (see [comment 6](https://github.com/Microsoft/vscode/issues/60#issuecomment-161792005)).  Compare to Chromium and Google Chrome.  Maybe @chrisdias has an opinion on this?  EDIT: Oops, looks like he was already just added to the conversation."
9316|This is somewhat related to this question http://stackoverflow.com/questions/31458077/mac-user-running-mamp-issues-trying-to-modify-files-inside-root-folder-eacce?noredirect=1#comment50887510_31458077  An item on uservoice also has been created: http://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8915236-visual-code-w-terminal-integrated-and-super-admin  Seems like there is a need for a os-independant solution to be able to edit files which need administrator password / elevated rights.
9317|I'm fairly sure I'm having the same issue but instead of just freezing vscode it's also freezing my whole desktop environment(cinnamon)
9318|Duplicate of https://github.com/Microsoft/vscode-node-debug/issues/11
9319|Duplicate of https://github.com/Microsoft/vscode-node-debug/issues/11
9320|@aeschli very nice work!  # Proposed Design  Here is what I'm thinking on the look and feel.  It is based on Visual Studio's experience with code folding. ![visual-studio-way](https://cloud.githubusercontent.com/assets/11839736/13024059/c0edf440-d1a4-11e5-8356-f4f53edc54da.gif) - We would use a tree view expander and collapse icon - `#989898` for the line and 1px border-color  Nice to haves: - Peak view of the ellipses (see alternative design no. 1 below).  This is also done in VS.  ## Alternative Designs...  ### 1. In-context affordance for folding  This was an interesting idea, but I worry that it may not be scannable as easily to the eyes as a user tries to find where the folding expanders are in his/her code.  They may also be confused with code since they are inline.  Here it is. ![code-folding-02](https://cloud.githubusercontent.com/assets/11839736/13023499/3b9599de-d19e-11e5-9972-0514ce3b1545.gif)  ### 2. Hierarchical in-context  Some IDE's do a similar approach.  I have a competitive analysis doc if you want to take a look. ![leaving-it-open-all-the-time](https://cloud.githubusercontent.com/assets/11839736/13024043/933758a2-d1a4-11e5-9224-eb20857b43a0.png)  ### 3. Chevrons  As you can see, this could get confusing, especially the more tabbed in you are.  It's not clear what each chevron will do, especially in large chunks of a class, for instance. ![using-margins](https://cloud.githubusercontent.com/assets/11839736/13024134/a80eee1a-d1a5-11e5-8744-6f01f9d5ce1e.png)  @stevencl, would love your feedback here.
9321|"The OSS version is just that - the OSS version, it is not Visual Studio. It is only ""Visual Studio"" when we build the distro which applies our branding, licensing, telemetry, etc. We should not merge this in."
9322|+1
9323|Added the icons ae75a36b3b937b25f99912001ff77264064d033a There is one for light and dark. ![image](https://cloud.githubusercontent.com/assets/11839736/13024737/ab596d58-d1ae-11e5-8196-edc26dacd625.png)  Let me know if you need anything else :)
9324|@bgashler1, love your first alternative design example with one exception: Please don't fold the closing brace. Atom does this and it really is annoying. Many people have asked that it be left exposed.
9325|I've had trouble when following the official guide as well.  Didn't really have the patience to fully investigate, in my case upgrading nodejs from 0.12 to 4.3 did resolve the problem, even though the guide says 0.12 is sufficient.  YMMV though.
9326|@chrisdias thanks for the clarification :)
9327|my node installed by `sudo apt-get﹉`, version 4.2.4.  I will upgrade it to 4.3, thanks for your suggestion.
9328|"> After discussing with @dbaeumer we should introduce a way for an extension to contribute an 'initial'  tasks.json .  Yes, please!  With the PowerShell extension we want to provide a default task to run Pester tests.  It would be great if an extension could provide the initial tasks.json file you get with `Tasks: Configure Task Runner`.  We would also like to provide a problemMatcher that could be referenced from the Pester (test) task.  The problemMatcher is somewhat lengthy and it would be nice to reference it like so:  ``` javascript {     ""version"": ""0.1.0"",      // Start PowerShell     ""command"": ""${env.windir}\\sysnative\\windowspowershell\\v1.0\\PowerShell.exe"",      // The command is a shell script     ""isShellCommand"": true,      // Show the output window always     ""showOutput"": ""always"",      // Allow Pester to invoke scripts and run Pester     ""args"": [         ""-NoProfile"",         ""Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process;"",         ""Write-Host 'Invoking Pester...'; Invoke-Pester;"",         ""Invoke-Command { Write-Host \""Completed all tasks in task runner: $($args[0])\"" } -args""         ],      // Associate with test task runner     ""tasks"": [         {             ""taskName"": ""Pester"",             ""isTestCommand"": true,             ""problemMatcher"": ""$pester""          }     } } ```  Seems like the `package.json` needs a `contributes.Tasks` where extension authors can contribute both problemWatchers and task initial configurations."
9329|@bpasero Thanks for fixing! Has the fix been included in the January release? I still see the issue in 0.10.8 and I wonder if I miss something.
9330|"That's typically caused by typescript not being able to find the vscode.d.ts file (which is no longer included in the vscode package).  So if it's not somewhere in your `./node_modules/vscode` folder, then you need to add the ""postinstall"" script from the [Update notes](https://code.visualstudio.com/Updates#_extension-authoring) and run `npm run postinstall` from a command prompt to download it."
9331|"Working with old method is easier and faster, i think  <img src=""http://mantlebee.com/DATA/imgFirmaMail.png""> www.mantlebee.com  ---  Da: Alexandru Dimamailto:notifications@github.com Inviato: ‎12/‎02/‎2016 09:41 A: Microsoft/vscodemailto:vscode@noreply.github.com Cc: mantlebeemailto:mantlebee@outlook.com Oggetto: Re: [vscode] Find & Replace shortcut with wrong highlight text (#2953)  @mantlebee I did this change intentionally, is it that most other editors reseed the search string on `Ctrl+H` ?  ---  Reply to this email directly or view it on GitHub: https://github.com/Microsoft/vscode/issues/2953#issuecomment-183229065"
9332|"Prior art: Firefox controls this with a ""browser.tabs.closeWindowWithLastTab"" option.  Should default to true on Mac and Linux."
9333|[YouTube Video](https://youtu.be/c4EPXiDtsY8)  Sometimes it is slow like this and the cursor freezes.  Before I capture it, it was even slower.  But after the capturing I closed the window and restarted VS Code. And tried again to type. This time it was faster. Not as fast as in JS but usable.  Maybe VS Code builds a cache of the project or file and that takes some time.  I've also opened a file with 617 lines of code (a php class) and it was fast. I think it depends also on the scope/context.
9334|Great feedback, thanks a lot. I'll try to improve these next week Created #3009
9335|I would like notepad++ compatible code folding:  > //{ This folds > code here > //}
9336|Important feature indeed. With Netbeans, we can also add `<editor-fold>` tags to create a folding block.
9337|After several machine restarts, order was restored.
9338|FYI: I've been running a command prompt along with VS Code.  After running a build in the command prompt, I switched over to VS Code and the *.ts files went missing again.
9339|I was talking with @cwadrupldijjit and he was telling me about having this issue on OS X and I started seeing it as well, but it's intermittent.  Sometimes it happens, other times it doesn't.  There doesn't seem to be any specific language, file length, filename, etc. that I can reproduce it consistently on.  When it happens, as @sarbbottam reports, I can't get my code back using `CMD+Z`, I have to right-click in the Working Files and select Revert File.  I'm using OS X El Capitan.  I haven't tried it on Windows.  I'm pretty sure this is a duplicate of #2829.
9340|"I found another workaround (since I don't like auto-save): 1. insert a space 2. delete the space 3. (don't save)  Now you can tab/shift-tab to your heart's delight.  As long as the file is already 'dirty', the bug won't happen.  If you do happen to accidentally clobber your code with tab/shift-tab, you can right-click the file in the Working Files view and select ""Revert file"".  This is similar to Possible Workaround 2 above, only you don't have to have an extra dirty file open all the time."
9341|true, this made me switch again to atom
9342|@jrieken I have the same problem on Windows 10. The linked issue OmniSharp/omnisharp-vscode#27 is still not resolved. For workaround should I do this - run omnisharp manually as stated in Windows section [here](https://github.com/OmniSharp/omnisharp-server)?
9343|@aeschli just like @maimoehl video....my codes are not more than 30 lines..... I guessed it was ok, VSCode is probably generating cache. I restarted it but its still the same
9344|+1
9345|I too like the look of the first alternative design but does it offer a larger hit area (as per @egamma's suggestion)? Can the user click on the vertical line for example to collapse the region?  Can you also try showing what it looks like if you don't fold the closing brace?  It might also be worth looking at how this works/looks for other languages. For example, will this work just as well with HTML, CSS, Visual Basic (and other languages that don't use punctuation marks as block delimiters)?
9346|I have adopted this on the vscode side.  @bgashler1 dark theme icon looks the same as white theme, I think you uploaded twice the same one. Also the question mark does not look properly centered. Can you look into these issue  @weinand I have added `suppportsConditionalBreakpoints` to `debugProtocl.d.ts` note 74ca4c3. If the adapter does not specify anything here I act as if the adapter does not support conditional breakpoints. I can change that such that the adapter has to explicitly specify if he does not support conditional breakpoints. Opinions? In any case, Node Adapter now needs to send this with the rest of the capabilites We should also ping the other adapter writers to adopt this. We can just ping them on this issue or is it better to send an end of sprint e-mail regarding the changes?
9347|How can I say 'no' to something that has tests 😇
9348|This may be premature, bit I think it may be fixed. I recently updated VScode and right now I have it open with dropbox on and I'm not getting constant notifications saying that those files have been changed.
9349|This morning when I came into work, it hadn't crashed. I didn't do anything different before I left work on friday.
9350|That is strange, we didn't do anything to change this. Are you sure it's not a problem to you anymore?
9351|@isidorn I'm now returning the `suppportsConditionalBreakpoints = true` from node-debug but I'm seeing the following behaviour: if I create a conditional breakpoint outside of a debug session, I'm seeing the '?' icon which gets replaced by the '=' icon on session start. This does not match the behaviour for unconditional breakpoints, which are verified outside of a session. We should show conditional breakpoints with the '=' icon outside of a session.
9352|"I have tried and getting this error . `npm install` Node version : 5.4 Npm version : 3.3.12  ``` > code-settings-sync@1.0.1 postinstall C:\Users\shana\Dropbox\code-settings-sync > node ./node_modules/vscode/bin/install  module.js:328     throw err;     ^  Error: Cannot find module 'semver'     at Function.Module._resolveFilename (module.js:326:15)     at Function.Module._load (module.js:277:25)     at Module.require (module.js:354:17)     at require (internal/module.js:12:17)     at Object.<anonymous> (C:\Users\shana\Dropbox\code-settings-sync\node_modules\vscode\bin\install:4:14)     at Module._compile (module.js:398:26)     at Object.Module._extensions..js (module.js:405:10)     at Module.load (module.js:344:32)     at Function.Module._load (module.js:301:12)     at Function.Module.runMain (module.js:430:10) ```  ```  npm WARN EPACKAGEJSON code-settings-sync@1.0.1 No license field. npm ERR! Windows_NT 10.0.10586 npm ERR! argv ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js"" ""install"" npm ERR! node v5.4.0 npm ERR! npm  v3.3.12 npm ERR! code ELIFECYCLE npm ERR! code-settings-sync@1.0.1 postinstall: `node ./node_modules/vscode/bin/install` npm ERR! Exit status 1 npm ERR! npm ERR! Failed at the code-settings-sync@1.0.1 postinstall script 'node ./node_modules/vscode/bin/install'. npm ERR! Make sure you have the latest version of node.js and npm installed. npm ERR! If you do, this is most likely a problem with the code-settings-sync package, npm ERR! not with npm itself. npm ERR! Tell the author that this fails on your system: npm ERR!     node ./node_modules/vscode/bin/install npm ERR! You can get their info via: npm ERR!     npm owner ls code-settings-sync npm ERR! There is likely additional logging output above.  npm ERR! Please include the following file with any support request: npm ERR!     C:\Users\shana\Dropbox\code-settings-sync\npm-debug.log ```"
9353|Duplicate of #329
9354|Sorry, I notified these commits by mistake.  This issue can be fixed by excluding `OutputService.bufferedOutput` from `OutputService.receivedOutput`, but it changes behavior of `OutputService.getOutput()` and may cause other bugs.
9355|@bgse  thank you very much.  i spend half day to install nodejs version4.3, but I cannot install `npm` successfully because of dependency. My OS is Deepin 2015 which based on debian sid. So, nothing i can do, except waiting, waiting for deepin upgrade their software.
9356|@bubifengyun The error to do with native-keymap is likely because you need to install `libx11-dev`, make sure you follow the [prerequisites section](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#installing-prerequisites) for Linux:  ``` sudo apt-get install libx11-dev ```
9357|@Tyriar Yes i have installed it. I have done the prerequisites before install  ``` libx11-dev is already the newest version (2:1.6.3-1). ```
9358|This issue can not be reproduced after I reinstall visual studio code. The files and symbles show as I want after a while when I pressed ctrl+p But it still cost me a short period of time for waiting a blue stick roll over the poped up window.
9359|Yes it is related. I was able to get the `::` together by playing with the syntax file, but the `[]` I think would be trickier because they are considered delimiters and seem to be parsed as such by a higher level configuration. I'm sure someone more familiar could comment, but it may not be worth the effort.
9360|Same issues. I hope `Salsa` can works without a `jsconfig.json`. How about contain a default `jsconfig.json` without manual creating one?
9361|"I believe that four spaces is the default for VS Code. You can set `""editor.tabSize"": 2` in the user settings JSON file that opens when you open preferences. Or you can install the EditorConfig extension and use an `.editorconfig` file to set it for your specific project."
9362|"Do you install `TypeScript@next` locally or globally? Maybe `Salsa` will work after setting `typescript.tsdk`.  <img width=""545"" alt=""screen shot 2016-02-15 at 11 47 25 am"" src=""https://cloud.githubusercontent.com/assets/7543300/13039446/f6921004-d3d9-11e5-9982-e49cec645d95.png"">  I install `TypeScript` globally.  [VSCode Docs](https://code.visualstudio.com/Updates#_javascript-salsa-preview)"
9363|Thanks @colinbate
9364|There is a existing extension: [change-case](https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case)
9365|+1.
9366|Possible duplicate: https://github.com/Microsoft/vscode/issues/2829 See also here: https://github.com/Microsoft/vscode/issues/3003
9367|I'll fix that right away
9368|I would like to support this feature request. Especially on a laptop the cursor is hard to spot when the weather conditions are slightly brighter than 'cloudy-with-rain'.
9369|@drywolf The extension host is spawned as a regular node process (meaning only node API). It is very unlikely we will spawn it as an electron renderer (to give access to electron API). Perhaps we can enhance our own vscode API to accomodate your use case if you would explain what you want to do.
9370|Closing in favor of #329
9371|@bgashler1 @chrisdias @waderyan  fyi
9372|Indeed, let's track it in #2829
9373|@largeDachshund Do you have a build process where these files get deleted and recreated? (i.e. pressing Refresh in the explorer shows them?)
9374|After discussing with Dirk we agreed that the adapter should read this from the env 'VSCODE_NLS_CONFIG'
9375|@bgashler1 Joao also had a feedback that this should not be a question mark, but an exclamation mark, Not completely convinced, both work for me but just wanted to pass on the feedback
9376|Thanks ! I did not know it.
9377|Which one? I'll look into it this morning
9378|@egamma still waiting for your response. :)
9379|A coding tool which cant modify system and config files (for ftp server) is an EPIC FAIL. :-(
9380|@alexandrudima Detailed reproduce: 1. Hide the menu bar. 2. Make some multi-select using alt-LMB. 3. Release the `alt` key, and the menu will show up.
9381|I agree with @Nimzozo. It's a pain especially when that trying to download extensions list, I can't write code, open anything or even switch to another application. It would be nice if that behave like what find  window (`cmd` + `f`)  does. I mean it keeps current state until user press `esc`.
9382|a nail button maybe?   ![nail](https://cloud.githubusercontent.com/assets/9464825/13054260/ce1cf21e-d443-11e5-8b23-9d37c02c2b24.png)
9383|On this site: https://code.visualstudio.com/ I am currently on windows and I don't see the button to download for linux (the one near the top of the page).   It's in the purple section. When I was logged on Linux I had 2 other buttons (linux and mac). It's a purple rectangular button near the top of the page. If you wish I can give you the markup of the button tonight when I can log back in Linux.
9384|> add cursor below `Ctrl+Alt+Down` > add cursor above `Ctrl+Alt+Up`  It is `Ctrl+Shift+Down` (or `Up`) on my Linux (Arch Linux / i3 if it matters)
9385|Yep I see it. Thanks for catching this. Fixing now.
9386|Moved this to vscode-website repo.
9387|"My workaround to actually get it to run.  ""command"": ""/usr/local/bin/node"",     ""args"": [""/usr/local/bin/gulp""],"
9388|@bubifengyun maybe Deepin is missing some package required to build then. I've only tried building on vanilla Debian 8.3.0 and Ubuntu 15.10. Do you have `g++` installed? I needed that to build on Debian.
9389|"Is the ""/usr/local/bin/"" path in your path environment variable?"
9390|Could you please take a screenshot of this?
9391|Hi there, to verify the steps to reproduce, you have the following code:  ```  console.log(a) console.log(b)  var a = function a() { }  function b() { } ```  The below part is highlighted:  ```  var a = function a() { }  function b() { } ```  You press tab and then the highlighted code turns to: `}`  The undo button does not return you back to your original code. Is this correct?
9392|precise, yes.
9393|Hello. This is not a bug. It is not updating for you because you did not enter your Git credentials. After entering your git credentials, the branch automatically changes.
9394|Could you also include your User and Workspace JSON settings, please? :)
9395|"Workspace settings is an empty hash. `{}`. User settings below:  ``` js // Place your settings in this file to overwrite the default settings {     ""update.channel"": ""insiders"",     ""editor.insertSpaces"": true,     ""editor.tabSize"": 2,     ""editor.renderWhitespace"": true,     ""files.trimTrailingWhitespace"": true } ```"
9396|Hi there. I think this should go into the VSDocs repo.  https://github.com/Microsoft/vscode-docs
9397|While I agree VS Code works fine without tabs now (been using it since the beginning quite productively), I also agree with some comments above that suggest having tabs as an option (maybe disabled by default) and letting users decide if they want them or not.   Everyone is different so having an option there would be great. Even though I can work fine without them, I wouldn't mind having them added in and would probably use them some - too many years of using VS full. Sounds like they're already on the backlog though - thanks!
9398|Yes, echo $PATH  /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin  defined in /etc/paths
9399|"Are you able to type in ""node"" and ""gulp"" into the terminal and run them?"
9400|Yeah, and I can do where node and where gulp to see they're in /usr/local/bin.
