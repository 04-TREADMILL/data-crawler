23601|We have feature request to allow more than one command.
23602|As said I close this one since it will be addressed in tsserver.
23603|@TedDriggs   That is exactly the behavior I got but it got fixed when I excluded the node_modules. Do you have some other folder with some content that could make VS Code have hard time?
23604|"Yes, but each example should contain their own node_modules:  ![](http://puu.sh/paepK/a776126489.png)  Like that. Since each example has a node_modules inside, it adds to the ""Loading..."" time. Can take hours / 100% cpu and it never finishes.  Also tried with the exclude, but I guess that there are certain files (like those e2e-spec files) that doesn't have a tsconfig in the same folder so they don't have any exclude."
23605|@alexandrudima I am not able to get it to show in the default config file. How is the default config file generated?  Nevermind, found it. Now all that's left is the smoke test to see if I broke anything.
23606|@jrieken It works perfectly, thanks :+1:   By the way, Is there an API to show items in the pick list, just like the _Go to Symbol_, where you have some kind of _groups of items_ (that appears when you type '@:' in the pick list)?   ![vscode-pick-list-like-go-to-symbol](https://cloud.githubusercontent.com/assets/3781424/15649770/653e93ac-264a-11e6-8dda-4c0af353f65c.png)  Currently, I'm using the `QuickPickItem.detail` property to show the file name of the item in the pick list, but the _Go to Symbol grouping_ approach is much better, because it does not _repeat_ that info for every item in the pick list.  Thanks in advance
23607|There is nothing special about my setup. I am writing to local disk.
23608|"I got the same Error.  This is my jsconfig.json:  ``` {     // See https://go.microsoft.com/fwlink/?LinkId=759670     // for the documentation about the jsconfig.json format     ""compilerOptions"": {         ""target"": ""es6"",         ""module"": ""commonjs"",         ""allowSyntheticDefaultImports"": true     },     ""exclude"": [         ""node_modules"",         ""bower_components"",         ""jspm_packages"",         ""tmp"",         ""temp""     ] } ```  I'm working on windows on an electron project. So I have a `./node_modules` and a `./app/node_modules` directory.  What I have to do to make it work."
23609|I'm gonna send a PR. It works on my end.
23610|@garthk can you share your project. This sounds like a setup problem with tsconfig.json but without having the folder layout and the content of some of the file it is hard to tell.
23611|Hi **@hashhar**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
23612|JS files are handled by the tsserver as well. So if there is a tsconfig.json file the exclude matters even for JS files. I noticed that you have a tsconfig and a jsconfig. @jrieken do you know which one takes precedence if they are both there when opening a JS file. It is my understanding that a tsconfig.json always wins. At least that file gets open in that setup when clicking on configure excludes in the status line.
23613|In the example you provided did you put node_modules into the exclude of the tsconfig.json file. This should help a lot since the toh-6 example is pretty small. What a tsconfig.json file does is the following: - it limits the project scope to the ts/js files that are in the same directory or a sub directory of the directory that contains the tsconfig.json file minus the directories listed in the excludes section.   Could you in this setup open VS Code directly on the toh-6 folder to avoid any additional unnecessary work done. TS features like hover, code complete should be more or less instant then.
23614|@Aukstkalnis how do you build the project ?
23615|Closing then.
23616|We receive the errors from eslint (http://eslint.org/). There is little we can do about that. If you feel strong about it please open an issue in the eslint repository.
23617|Opening VS Code directly on a example is not productive because we normally need to see the whole project when doing stuff. Still, I opened VS Code directly on `toh-6` folder, put the exclude on tsconfig (which I thought it was ignoring node_modules by default) and still, Loading... for a few minutes.
23618|This message is shown when the eslint extension tries to validate the file but fails since a specified eslint plugin can't be loaded. As soon as a extension and alter the settings we will improve this by allowing the user to exclude eslint from running using a button click. We have an issue for that. Closing this one.
23619|I understand we are all busy, there are lot of issues and perhaps this is our own fault, but if we could schedule a quick hangouts sometime to see it live, perhaps we can see the problem in a better way.
23620|https://github.com/Microsoft/vscode/issues/519
23621|https://github.com/Microsoft/vscode/issues/3112
23622|https://github.com/Microsoft/vscode/issues/3112
23623|The request to open VS Code on toh-6 was only to isolate the problem. And I do believe you that it is slow. Having a hangout makes sense but I would first like to have an idea what to look for which I don't right now :-(.   My toh-6 folder looks a little different than yours. To ensure that I do what you do, what do I need to get to that layout.
23624|See this issue: https://github.com/Microsoft/vscppsamples/issues/41
23625|1. cd /public/docs/_examples 2. npm install 3. cd ../../.. (basically back to the angular.io folder again) 4. gulp add-example-boilerplate  That will add those extra files to all those folders (also node_modules).
23626|This is something we do support from within code but not exposed as API. The related option for a picker entry is in https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/quickopen/common/quickOpenService.ts#L18  We use it e.g. if you click on the whitespace picker in the status bar.
23627|"@pythondetective when you do the ""Compare"" command can you grasp what the modifications are? Are you running another process in the background that modifies files?"
23628|You're welcome, I'm glad I could help.
23629|https://github.com/Microsoft/vscode/issues/1169
23630|Here we go. I missed the gulp add-example-boilerplate step when setting up. It was already in the description. Sorry for that.
23631|I have the same problem with files like [bootstrap.min.css](https://github.com/twbs/bootstrap/blob/06aa2a5bf24a31bc9a40cdf518eed5b15de9da30/dist/css/bootstrap.min.css)/bootstrap.min.js/font-awesome.min.css and similar files with few line breaks/long lines.  (Don't know if those are the only files that cause it, but if someone can reproduce it with them that would be ok I think. Just copying the file in a new file freezes the editor already.)  (Version 1.1.1 Commit def9e32467 Shell 0.37.6, Renderer 49.0.2623.75, Node 5.10.0, OS Windows 7 64 bit, Extensions: https://marketplace.visualstudio.com/items?itemName=seanmcbreen.Spell https://marketplace.visualstudio.com/items?itemName=TwentyChung.jsx https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools https://marketplace.visualstudio.com/items?itemName=austin.code-gnu-global
23632|To my understanding from the other bug that this was linked to:  VS Code gets confused if you have large amount of JS (or TS) files in your project. The node_modules and bower_components are just some most common places.   There can be some other folder, like some temp or something that still gets included and that is why VS Code is confused.  They were working on some improvements but it got pushed to 2.0 if I understood correctly.
23633|I was able to reproduce this when running gulp add-example-boilerplate. The problem is that all node?modules folders are scanned which makes the tsserver consume 500 MB of memory. Will look what the proper exclude rule should be
23634|TS behaves correctly when opening a ts file (for example angular.io\public\docs_examples\architecture\ts\app\app.component.ts) because the file is covered by the tsconfig.json file here: angular.io\public\docs_examples\architecture\ts\tsconfig.json which excludes the node_modules folder. However when opening e2e-spec.js it isn't covered by that tsconfig.json which creates a new project resulting in scanning the file system. Will investigate how to best configure this to make this a more happy experience.
23635|Hi gents. Same error here. Windows 8.1, VS Code 1.1.1 + insiders also.  ![vscode](https://cloud.githubusercontent.com/assets/429190/15651447/02528268-2680-11e6-9107-cf8395bf42a3.png)
23636|By way of this some more detail. The issue currently arises in the context of some use cases when styling components in accordance with Angular 2 (RC1). Here a few snippets from the Angular documentation section, I linked in my initial comment:  > **/deep/** >  > Component styles normally apply only to the HTML in the component's own template. >  > We can use the `/deep/`selector to force a style down through the child component tree into all the child component views. The /deep/ selector works to any depth of nested components, and it applies both to the view children and the content children of the component.   ...  > The`/deep/`selector also has the alias `>>>`. We can use either of the two interchangeably. >  > The /deep/ and >>> selectors should only be used with emulated view encapsulation. This is the default and it is what we use most of the time.  Angular 2 supports the use of `/deep/`and `>>>` in emulated view encapsulation, i. e. when there there is no native shadow DOM support.  The `>>>` alias causes an error in a css stylesheets edited in VS Code as well.  Otherwise, the cross-references would lead to the shadow DOM as the note in _Section 2.3_ of [W3C Shadow DOM](https://www.w3.org/TR/shadow-dom/) and the more specific discussion in [Deep Combinator W3C CSS Scoping](https://www.w3.org/TR/css-scoping-1/#deep-combinator).
23637|@rostacik that's [a V8 bug in node 6.x](https://github.com/node-inspector/node-inspector/issues/864). Our workaround for this problem seems to work for most, but not for all. Until node 6.2.1 arrives the workaround for those that are hit by this is to use node 5.x.
23638|"Here we go: using the following content for this angular.io\public\docs_examples\architecture\tsconfig.json file:  ``` json {   ""compilerOptions"": {     ""target"": ""es5"",     ""module"": ""commonjs"",     ""moduleResolution"": ""node"",     ""sourceMap"": true,     ""emitDecoratorMetadata"": true,     ""experimentalDecorators"": true,     ""removeComments"": false,     ""noImplicitAny"": true,     ""suppressImplicitAnyIndexErrors"": true   },   ""exclude"": [     ""dart"",     ""ts/node_modules""   ] } ```  Makes everything work nicely in the architecture example. The problem was the node_modules folder in ts and the node_modules folder in dart (which took me a while to discover). Since you have quite some linked node_modules folders and it is already problematic with a single example all I can suggest is to setup the exclude rules as indicated. Otherwise the tsserver is simply looking at too many files.  @Foxandxss Let me know how it goes."
23639|@Tyriar For performance reasons we want the tokenizers to run in the render process. As we don't want user code to run in the render process we went for declarative tokenizers. First we had Monarch support as well, but before the API deadline decided to go fully for text mate to keep the API simple. Also, in order for our theming support to work well, we want all tokenizers to emit TextMate tokens.   We are aware of the limitations and problems of TextMate, and we are open to allow other types of tokenizers, but no work is planned in this area at the moment.
23640|@Aukstkalnis Just to double check. The tasks.json must normally sit in a settings folder. This is the case in your setup.
23641|Sorry a .vscode folder.
23642|We plan to replace extensions with a more stable UI this release, closing.
23643|@Tyriar we store the last used folder in a setting, can you provide some more steps how this happens? Is the path you picked before maybe getting deleted meanwhile?
23644|@weinand yes sir, I can confirm that with v4.4.5 VS Code behaves as expected, thanks for quick reply.
23645|Closing as duplicate of #3385
23646|"I bumped into this today, after updating to insiders 1.2.0. I'm on Ubuntu 16.10. For now, workaround by manually overriding the font family:  ``` ""editor.fontFamily"": ""'Monaco', sans-serif"", ```  Either way, I see no sense in giving ""Droid Sans"" as a first option, even on Linux. If the user has the MS fonts installed, they should be used."
23647|I'm totally fine with double clicking the tab to add as working tab or some keyboard shortcut. As long as it's discoverable using tooltips.  On Monday, May 30, 2016, Daniel Imms notifications@github.com wrote:  > Personally I'd prefer a separate setting. I will often click around files > in the explorer searching for what I want, so it may not be a file I'm > interesting in keeping open. But quick find I know exactly what I want. >  > — > You are receiving this because you commented. > Reply to this email directly, view it on GitHub > https://github.com/Microsoft/vscode/issues/5554#issuecomment-222456731, > or mute the thread > https://github.com/notifications/unsubscribe/AA-JVGFQbF1pl3XXjda7-ZBh8B1tXAMAks5qGrNxgaJpZM4ILyEK > .
23648|I tried this and seems that the issue is gone. It might have been an isolated event.  I believe this can be closed as nobody else has reported it in about 6 months.
23649|I was looking into the Backlog issues and this came up. The way I see it, Code only fails to open a new instance if the currently running instance and the new instance both have same target folder. - It works for opening two copies of a single file. - Doesn't work for two empty instances. - Doesn't work for two directories.  The above behaviour is independent of the flags. No flags make any difference in this behaviour.
23650|I would like to start working on it. I'll read through the relevant code and try sending a PR within a week or two.
23651|Can you please paste the code snippet that shows the issue?
23652|"Yes, adding a tsconfig at that level fixes it for that concrete example (so we would need to add one tsconfig.json at each ""root level of each project"".  Even if the `ts/` folders doesn't have the `tsconfig.json` (they have it in the parent folder), the examples work, but we had the idea of be able to copy the `ts/` folder of any folder somewhere else and have it working like an independent project. If we move the tsconfig to the parent config, that is not possible anymore.  Would be awesome if we could have one tsconfig at the very root that would ignore _all_ node_modules in any folder.  /cc @wardbell"
23653|We use https://github.com/beautify-web/js-beautify for formatting. By default, the html formatter does not format inside [html inline elements](http://www.htmlhelp.com/reference/html40/inline.html). `select` is such a inline element. You can change the list of unformatted element with the `html.format.unformatted` setting. I'm also not sure why inline elements are not to be formatted. Feel free to file an issue against the formatter directly.
23654|"No problem creating/maintaining as many `tsconfig.json` files as we need at any level specified.  I tried that first. But I wrote  ```   ""exclude"": [     ""node_modules""   ] ```  rather than   ```   ""exclude"": [     ...     ""ts/node_modules""   ] ```  Does `tsconfig` support glob patterns?  FWIW, if no globbing support (and I think not as [1927](https://github.com/Microsoft/TypeScript/issues/1927) is still open), then we should write something like the following and put it at project root's for _every_ sample:  ``` {   ""compilerOptions"": {     ""target"": ""es5"",     ""module"": ""commonjs"",     ""moduleResolution"": ""node"",     ""sourceMap"": true,     ""emitDecoratorMetadata"": true,     ""experimentalDecorators"": true,     ""removeComments"": false,     ""noImplicitAny"": true,     ""suppressImplicitAnyIndexErrors"": true   },   ""exclude"": [     ""dart"",     ""js/node_modules"",     ""ts/node_modules""   ] } ```  We don't want to exclude _all_ of the js samples from analysis, do we? Let me see if that works and I will report back.  ### Update  That worked!  Too bad about the inability to glob but, fortunately, my tooling makes it easy to copy a master `tsconfig.json` around ... and exclude it from source control of course."
23655|Duplicate of https://github.com/Microsoft/vscode/issues/1210
23656|Pushed for opening files. I left this untouched for Mac because imho this does not make sense for opening folders.
23657|Duplicate of https://github.com/Microsoft/vscode/issues/1210
23658|Thank you! on another machine I did not reproduce this problem. I reinstall vscode after this problem gone.
23659|@aaskat great to hear that!
23660|Thank you for your time
23661|I really want contribute. if you give me small tasks I can do.
23662|It's hard... Needs thinking.
23663|I don't like that mockup, how about putting it at the bottom of viewlet? Then it isn't so crowed at the top (buttons, input, details, results...)
23664|@74th Thanks for finding this. You were right, the problem was that the publisher starts with a number. I was using the extension id (which starts with the publisher) as a css selector. However, css selectors can not start with numbers.  In your extension, you also need to rename the file `NaturalContrast.tmtheme` to `NaturalContrast.tmTheme`, so it matches to what you have in `package.json`. That way the theme is correctly loaded also on case sensitive file systems like Linux.
23665|I like to show this information somewhere and would suggest to try it out for a while to see how it behaves. I am not sure if the position above the search result is good or bad. I think it is good because that is where I would look for it.
23666|@bpasero, That´s exactly what I mean. Any chances in exposing this API?
23667|On 1.2.0-insider (7ccb21d7e7256a7d42f3dda8b2d3721b8e59724f), the issue seems fixed.
23668|"Attached photo shows code and problem very clearly. Bottom public static function and variabled is no longer highlighted as in top function. All i have to do is use ""<<<XML"" as variable value..."
23669|I would also like to see all whitespace being rendered. That would be helpful when reading stuff like aligned JavaScript objects, PHP arrays, etc.  Eg:  ``` js let defaults = { →   type····: 'GET', →   timeout·: 500, →   secure··: true } ```  ``` php $address = array( →   'street'·=> '5th Avenue', →   'city'···=> 'New York', →   'state'··=> 'NY' ); ```  Maybe, if it doesn't adds too much complexity, make it so single spaces are not rendered, to keep regular text and strings legible, and only render it if there are at least 2 `SPACE` characters or at least one other whitespace character, like `TAB`.  Another option would be to be able to configure VSCode to only render whitespace on the selected text. (I miss this feature since I ditched Sublime last year...)
23670|No. From https://github.com/cfjedimaster/htmlescape-vscode/blob/master/src/extension.ts - I've implemented vscode.TextDocumentContentProvider. I'm using provideTextDocumentContent to get the text from the editor and create a new HTML document from it.
23671|I am not running another process in the background that modifies files. Sometimes, there are no modifications at all, just the same file. The problem arises whenever VSC takes long time to react to Ctrl+S.
23672|A more accommodating API would be a good priority, then.
23673|@bpasero I've rebased the branch :+1:
23674|It is also needed for extracting the markdown extension if full functionality is desired to be retained. My extensions are very similar to the markdown one, but for previewing RST and HTML files.  An option could be to provide an array called visiblePanels (or similar) which is a superset of visibleEditors
23675|I've also investigate to source code of VSCode and found this: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/modes/languageSelector.ts So when I just put 'javascript' the score is 10, when `{ language: 'javascript', scheme: 'file' }` it will be 20  After this I look at the typescript extension and found registration of Code Completion for javascript: https://github.com/Microsoft/vscode/blob/master/extensions/typescript/src/typescriptMain.ts#L134 So score for javascript in this case only 10  20 > 10 So `{ language: 'javascript', scheme: 'file' }` should be called before wildcard 'javascript' but it's not called
23676|Thanks for the link, which led me to this:  https://www.w3.org/TR/2013/WD-selectors4-20130502/#idref-combinators
23677|This is how it looks in 1.1.1: ![image](https://cloud.githubusercontent.com/assets/6461412/15657021/6cd01bc8-26ad-11e6-80cc-eaf0f77dbf6a.png) This is in the coming 1.2 where we updated the PHP syntax highlighting grammar: ![image](https://cloud.githubusercontent.com/assets/6461412/15657047/9c698144-26ad-11e6-8b3e-dc4cdc7d0131.png)  So this is looks like it's fixed. I'd still like to try it with your code snippet, just in case you still have it.
23678|I wonder if it is related to an OSX update; I have now noticed it in multiple apps.  Rebooting seems to have fixed it for all apps, including Code (where I first noticed the issue, and apparently wrongly blamed Code.  Sorry Code!).
23679|This how it looks to me using the Dark+ (default dark) theme: ![image](https://cloud.githubusercontent.com/assets/6461412/15657109/1cca76f4-26ae-11e6-9f68-7266a491307b.png)  A code sample would help to understand what's different in your setup. What theme do you use? Do you use any extensions for Rust?
23680|Any updates?  ---  References for Electron: - issue: electron/electron#980 - pull request fixing that issue: electron/electron#1405
23681|Yes, my task.json is in the .vscode folder which is generated in my project root directory.
23682|@hashhar yeah, I would only expect `-n` to do something different when opening a folder that is already open.
23683|@bpasero the issue is that it seems to retain the last folder used, I think it's more intuitive to consistently open at either the currently opened folder or the parent of that folder.
23684|link\* https://github.com/Microsoft/vscode-distro/blob/master/quality/alpha/product.json#L15
23685|"Yes in 1.1.1 it still have bug. No longer higlights php code but instead only variable value.  Here my snippet:  ``` <?php  $globaltype = GLOBALTYPE; $unitid = UNITID; $userid = USERID; $termtype = TERMTYPE;   class Queries {     public static function RegisterQuery($tel, $Firstname, $Lastname)     {         global $globaltype, $unitid, $userid, $termtype;          $LoginQuery = <<<XML         <?xml version=""1.0"" encoding=""UTF-8""?>         <Message Action=""Login"" Terminal_Type=""$termtype"" Global_Type=""$globaltype"" Unit_ID=""$unitid"" User_ID=""$userid"">            <Is_Virtual_Card>True</Is_Virtual_Card>            <Login Auto_Registry=""True"">%s</Login>            <F_Name>%s</F_Name>            <L_Name>%s</L_Name>            <Full_Name>%s</Full_Name>            <Auth_Code/>         </Message> XML;          return sprintf($LoginQuery, $tel, $Firstname, $Lastname, $Firstname."" "".$Lastname);     }       public static function ResetQuery($tel)     {         global $globaltype, $unitid, $userid, $termtype;          $LoginQuery = <<<XML         <?xml version=""1.0"" encoding=""UTF-8""?>         <Message Action=""Login"" Terminal_Type=""$termtype"" Global_Type=""$globaltype"" Unit_ID=""$unitid"" User_ID=""$userid"">            <Is_Virtual_Card>True</Is_Virtual_Card>            <Login Auto_Registry=""True"">%s</Login>            <Auth_Code/>         </Message> XML;          return sprintf($LoginQuery, $tel);     }  }   ?> ```"
23686|it's like it doesn't react to ending tag - `XML;`  ![untitled](https://cloud.githubusercontent.com/assets/1042441/15657704/058478ba-26bc-11e6-90c1-57517869a2ec.png)
23687|This is how it looks with other IDE  all good. colors are all ok, nothing broke.  ![untitled2](https://cloud.githubusercontent.com/assets/1042441/15657755/a2598bda-26bc-11e6-9cda-329b33f6fa31.png)
23688|This is how it looks in 1.2: ![image](https://cloud.githubusercontent.com/assets/6461412/15657790/a3b53e6e-26b4-11e6-9a3d-3a1962ed7e89.png)
23689|With the Dark+ default theme: ![image](https://cloud.githubusercontent.com/assets/6461412/15657813/f0b6361e-26b4-11e6-91e6-70b404fbc93e.png)
23690|Look nice :) Thanks :) Love VS CODE... hope it will still last as a lightweight editor :) Would be awesome if FTP support would be integrated.
23691|I went with the event, and not the keymods since the event was easier to hook up in the action bar 9c6c0bf  I fixed the markdown action. Not sure if there are other actions that depend on this behavior - if there are some let me know and I will fix them. As far as I know the context menu action do not have this functionality
23692|Now everything looks Ok in Insiders build. Thanks for quick response, guys!
23693|There was an issue that clicking step / continue would not move focus to the editor - this commit fixes that. Clicking on the stop aciton still does not bring focus to the editor - which I believe is fine for now. If more users ask for this we can improve on that.
23694|I've put all this information in a easy list of steps to make this work with sublime icons at least until this is officially supported: https://github.com/robertohuertasm/vscode-icons
23695|@jrieken I understand that. I just reported the issue because in https://github.com/Microsoft/vscode/issues/4393  it was considered a bug, and was fixed by [this commit](https://github.com/Microsoft/vscode/commit/a5a166a519790ec1863493da8a67b1700f1ac32a).  I will move to https://github.com/xavi-/node-copy-paste, as you suggested in some other issues, like https://github.com/Microsoft/vscode/issues/4972 and https://github.com/Microsoft/vscode/issues/217.  Thanks
23696|Fantastic! Works great!
23697|in chinese system show confusiton code ![image](https://cloud.githubusercontent.com/assets/9499016/15660993/ef9618e2-2715-11e6-8f0b-c1977432c0e0.png)  Version 1.2.0 insider
23698|@builden What does it show when you run the same command in the native terminal outside of vscode?
23699|@Tyriar  ![image](https://cloud.githubusercontent.com/assets/9499016/15661488/64efda2a-271a-11e6-8165-84e35c346e4f.png)
23700|@builden thanks, looks like the CJK chars are stacked on top of each other. Looks like it was just filed here https://github.com/Microsoft/vscode/issues/7036
