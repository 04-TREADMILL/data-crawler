701|"@alexandrudima fyi the code on my end that handles the editor status column indicator to change is using the following check:  ``` typescript if (event.source === 'api' || event.source === 'mouse' || event.source === 'keyboard') { ```  A comment above explains this: `Hook Listener for Selection changes (and only react to api, mouse or keyboard source, not any internal source of the editor)`"
702|Sounds good
703|Maybe make it a configuration option? Is this documented somewhere?
704|You can use the command line option `-n` to force open a new instance.
705|We need to improve our crash handling to find out what the cause of this crash actually is. This is on our backlog.
706|Can you check how Atom behaves please and report back. Thanks!
707|To be clear: The bug I mentioned seems Linux only. If you see blurryness on Mac or Windows, it must be something else and likely unrelated to the Electron update we did. It would help if those people could try with our previous version 0.9.x to see if it makes any difference.
708|Have you installed a plugin or something? This isn't core VS Code that's spawning the popups, it's probably a plugin that's not entirely working correctly...
709|It was our explicit UX decision to keep the explorer very light and not use icons. We might add support for extensions to add decorations to the explorer but currently this is not possible and not planned.
710|"@bpasero There are reports on that Electron bug that Windows users are having a similar problem, although the devs are not sure why since the Chromium fix for this was Linux-only. I would not be so quick to blame your team ;)  -----Original Message----- From: ""Benjamin Pasero"" notifications@github.com Sent: ‎11/‎20/‎2015 3:13 PM To: ""Microsoft/vscode"" vscode@noreply.github.com Cc: ""Nicholas Narsing"" soren121@sorenstudios.com Subject: Re: [vscode] Regression: editor text is blurry on Linux with 125%text scaling (#122)  To be clear: The bug I mentioned seems Linux only. If you see blurryness on Mac or Windows, it must be something else and likely unrelated to the Electron update we did. It would help if those people could try with our previous version 0.9.x to see if it makes any difference. — Reply to this email directly or view it on GitHub."
711|@flammard can you attach the file zipped?
712|@kissstudio so it works after you changed the encoding from the status bar?
713|Anyone that can give me instructions how to setup WebDav with Sharepoint, please let me know I would like to reproduce. Alternatively if I can access to some test environment that would also be nice.
714|> Would it be possible to add tabs through a custom extension?  No, this is currently not possible from an extension (see also http://code.visualstudio.com/docs/extensions/our-approach)
715|@lucasrivoiro is this editing PHP maybe?
716|:zap:
717|Not supported atm.
718|Duplicate of #218
719|Closing as duplicate of #160.
720|With the recent VSCode update, this actually got _worse_ for me.  My experience was similar to @idooo, but now I'm experiencing fairly major problems. See the screenshot below.  ![screen shot 2015-11-20 at 3 32 45 pm](https://cloud.githubusercontent.com/assets/1310403/11311144/00add0aa-8f9c-11e5-82f1-c61e3a07eb58.png)  I would absolutely LOVE if VSCode would syntax-highlight html in these multi-line strings. I _think_ a MS rep said this was coming soon (at AngularConnect)...?
721|I installed the Go Support extension before I started using VSCode. Also installed the following Go libraries:  https://github.com/rogpeppe/godef https://github.com/nsf/gocode https://github.com/mitchellh/go-ps  First time using VSCode so didn't realize the popups weren't part of the core code. Can you point me to documentation for restoring VSCode default settings?
722|We did not change the markdown coloring though, so maybe this is a side effect of something going really bad before (e.g. making the PH crash). @codekiddy2 any chance you used PHP in that session? Does it reproduce if you restart and just open the markdown? does the markdown contains embedded code snippets?
723|Hm interesting, this is not intentional :)
724|closed as dupe of #71
725|Yeah, try with right-click on a folder and search in. the box for where to search supports glob patterns, so it is a combination of file types and/or folders to search.
726|Filed over at Electron to ask for advice.
727|You can zoom the entire UI from the view menu and there is also an extension to persist the zoom setting.
728|This is currently as designed. You can close a file from the working files section in the explorer or via Ctrl+K Ctrl+W
729|The solution might end up to be integrated full editorconfig support in VS Code.
730|"@Morgy93 can you run code.exe from the program files directory with the ""--verbose"" flag and attach the output you are seeing?"
731|Yes, you can Copy + Paste via keybindings or the menu.
732|I'm facing this problem every minutes!
733|This is #160
734|@halyavin could it be that you open a large folder with many files?
735|I think this would make a great extension once we have support to open a diff editor.
736|@wbradney what OS? can you attach a screenshot
737|Even worse, on retina screens the cursor looks blurry.
738|@Totoajax what extensions do you have installed?
739|Make sure you have the latest generator (npm install -g generator-code).
740|@markkilonzi more infos please. are you maybe editing PHP? So it could be #160
741|@lukehoban fyi
742|@bpasero Github won't let me upload a zipped file.  Unfortunately, we don’t support that file type.  Choose Files Try again with a PNG, GIF, JPG, DOCX, PPTX, XLSX, TXT, or PDF.  Is there some other way of getting it to you?  It's about 3.5MB zipped with 7Zip.
743|Yeah - I believe this is a bug in the `vscode-go` plugin.
744|This issue was moved to Microsoft/vscode-go#50
745|@andrewrgoss Try to uninstall the `go` plugin and try it again. If the popups aren't showing up anymore, it's an issue with that plugin and you might file an issue over [there](https://github.com/Microsoft/vscode-go/issues).  _alright, little bit too late :)_
746|Awesome!
747|@jrieken I can reproduce, somehow the MainThreadOutputService is created with an undefined editor service (the output service is there though).
748|+1
749|@RWeigelt are you sure you can save there, can you try with nodepad?
750|It's odd that it didn't popup in the closed beta phase. Never used `.hide()` though.
751|yeah its php- i've checked out #160 ... found out its the one.... thanks man.
752|I dont think we are portable until we allow to specify the directory where data should go (including extensions). Reopening.
753|Yes, I can write a text file with notepad. And I also tried other drives. What I found out in the meantime is that this happens only when _creating_ a new file. Opening, editing and saving an existing file works correctly.
754|@flammard in those cases I simply create a new repository on GitHub and upload it there via git :)
755|Closing as dupe of #160
756|@RWeigelt so you do Ctrl+N, type something and then try to save it to r: from the windows save dialog?
757|"@bpasero I hope I didn't get it wrong. This is what I put into the ""Target:"" property of the icon, but there is no extra output on startup. ![unbenannt](https://cloud.githubusercontent.com/assets/7961978/11312024/b514d070-8fd3-11e5-82e0-48b8a183bb24.PNG) Even if I go for View -> Toggle Output there's just ""Output for 'Git'"" with lots of empty space."
758|This is good. But there's no way to make it a default option?
759|@Morgy93 sry, I meant to say that you try from the windows command prompt.
760|Fair, I can see about an option.
761|Exactly. The error message appears trying to use Save, Save As or (when creating multiple files), Save All.
762|@RWeigelt is R: some drive created with subst or a real physical drive? I assume it is not the root drive where windows is installed?
763|Here it is: https://github.com/flammard/data  Thanks very much for looking at this.
764|"R: is a RAM disk - so I suspected this to be the problem at first. That's why I checked on other, ""real"" drives (except the system drive C:), and I can reproduce the behavior."
765|"What I'm not sure about is why VSCode is trying to run `mkdir r:\` at all. When I do this from a command line (`cmd.exe`), I get an ""Access is denied"" there as well - which doesn't surprise me."
766|It actually tries to create the root path :)  If you run VS Code as non-admin, it won't even let you try to save to `C:\file.ext` but if you run VS Code as admin, it will let you try but fails on creating `c:\`.  ![capture](https://cloud.githubusercontent.com/assets/3933589/11312456/e07934c6-8fde-11e5-9c12-331e543bf6a9.PNG)
767|Yes, this is a large folder with many files. But why it consumes 100% of cpu indefinitely? Eclipse doesn't have such problem on this project.
768|This issue is under investigation, stay tuned!
769|Ok, I see somewhat similar behavior in starting the editor from Atom.  The differences are that atom spins up 4 processes (vs 2 for code) and while it's delayed in starting, it doesn't use 97% of CPU (the highest cpu utilization is 37%) and it starts up in less than 15 or secs and exit/relaunching atom is almost instantaneous, vs code which goes though the whole delay as if from scratch.  I hope that helps, let me know if you're looking for something more specific.
770|@bpasero Go and bookmarks. I'm gonna try remove them and see if it works
771|"@bpasero Alright, here we go:  ``` ### VSCode main.js ### c:\Program Files (x86)\Microsoft VS Code\resources\app { pathArguments: [],   programStart: 0,   workers: -1,   enablePerformance: false,   verboseLogging: true,   debugPluginHostPort: undefined,   debugBrkPluginHost: undefined,   logPluginHostCommunication: false,   firstrun: false,   openNewWindow: false,   openInSameWindow: false,   gotoLineMode: false,   pluginHomePath: undefined,   pluginDevelopmentPath: undefined,   pluginTestsPath: undefined } Lifecycle#unload() 1 ```  Here it just takes forever for Code to start .. then the ""crash"" happens:  ``` [VS Code]: detected unresponsive ```  ![unbenannt](https://cloud.githubusercontent.com/assets/7961978/11313335/6b0a13d8-8fdc-11e5-9899-6c3c183d3e9f.PNG) And if I go for ""Keep Waiting"" or just do nothing, this gets added:  ``` IPC#vscode-workbenchLoaded ```  And Code is ready for use now it seems .. after like two to three minutes of waiting.  For the easiness, full log:  ``` C:\Users\Thomas>""C:\Program Files (x86)\Microsoft VS Code\code.exe"" --verbose  C:\Users\Thomas> ### VSCode main.js ### c:\Program Files (x86)\Microsoft VS Code\resources\app { pathArguments: [],   programStart: 0,   workers: -1,   enablePerformance: false,   verboseLogging: true,   debugPluginHostPort: undefined,   debugBrkPluginHost: undefined,   logPluginHostCommunication: false,   firstrun: false,   openNewWindow: false,   openInSameWindow: false,   gotoLineMode: false,   pluginHomePath: undefined,   pluginDevelopmentPath: undefined,   pluginTestsPath: undefined } Lifecycle#unload() 1 [VS Code]: detected unresponsive IPC#vscode-workbenchLoaded ```"
772|I just posted a screenshot for this here: https://github.com/Microsoft/vscode/issues/130  ![screen shot 2015-11-20 at 3 32 45 pm](https://cloud.githubusercontent.com/assets/1310403/11311144/00add0aa-8f9c-11e5-82f1-c61e3a07eb58.png)
773|Hi **@lucaslra**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
774|@jpierson Using a new IDE should not force you to rename a bunch of files IMO.
775|@aeschli looking at Sass and Less support, they both inherit lots of things from CSS, and put some sugar on top of it (and some modifications either). Is there any way I can also import to my extension the CSS schema etc., to facilitate the process of creating the intellisense?  It would be much simpler, apparently, to create a native support for stylus, instead of an extension. At the moment, I'm using vscode-go extension as my base, but still trying to figure out many things.
776|Windows 7. I'll try and grab a screenshot when I get back to that machine. This is new behaviour after I updated vscode today. I can manually resize the window, and minimize it, but the maximize/restore button always shows as maximized regardless of the window size/position. When I click maximize, the window briefly fills the screen, the goes back to original size (and sticks top left).  Sent from my Windows Phone  ---  From: Benjamin Paseromailto:notifications@github.com Sent: ‎11/‎20/‎2015 3:50 PM To: Microsoft/vscodemailto:vscode@noreply.github.com Cc: Wayne Bradneymailto:wayne@bradney.com Subject: Re: [vscode] Can't maximize the window (#359)  @wbradney what OS? can you attach a screenshot  ---  Reply to this email directly or view it on GitHub: https://github.com/Microsoft/vscode/issues/359#issuecomment-158520345
777|I'm not using PHP, and I have tried your suggestion to close VSCode completely and then opening md file.  I would like to add that for example bash script coloring works just file, you can see the difference between these 2 images bellow:  ![sh](https://cloud.githubusercontent.com/assets/8350237/11314484/3c893886-8fe6-11e5-982e-d284ac7f3b9c.png)  And here is markdown, it's not the same and as colorful as it was before, and as you can see it does not contain any code snipets.  ![md](https://cloud.githubusercontent.com/assets/8350237/11314489/412153a6-8fe6-11e5-9f4c-b9e0cb44f43a.png)
778|In implementing this, consider actually integrating [neovim as a library](https://github.com/neovim/neovim/wiki/Plugin-UI-architecture) instead of (inevitably) a perpetually incomplete clone. It's very stable, and developers will appreciate being able to bring their vimrc and plugins!
779|Definitely! We have a similar discussion going on here: https://github.com/VSCodeVim/Vim/issues/18. From my brief reading, it looks like we'll also need to install neovim as well; it might be too much to ask of vscodevim consumers to install neovim as I doubt VSCode will allow extensions to install random executables.   In any case, neovim looks promising. I haven't played with it too much so feel free to send any pointers on how we might get started.
780|I use nvm on Linux and `sudo` is not required. It's not a certainty that `sudo` is required and I feel like someone who needs `sudo` for a global npm install already knows that.
781|I agree that a .deb or .rpm would be much better than a shell script. Package management on Linux distros is a solved problem and an accepted way to distribute applications and configure them per distro conventions.  Now... that said, I can see where the VSC team might not be equipped to provide package files for various distros. Many other open source projects have a member of the build and maintain repos for package managers. I can see where this would be a great opportunity for a Linux-smart person/group in the community take this over and improve the experience on Linux.
782|see #269 for further discussion on this
783|I feel like the VSCode extension API would need to be expanded significantly to properly implement vim, and looking at the project you appear to be having trouble with even the most basic aspects, like having a block cursor.  > On Nov 20, 2015, at 4:00 PM, Jason Poon notifications@github.com wrote: >  > Definitely! We have a similar discussion going on here: VSCodeVim/Vim#18 https://github.com/VSCodeVim/Vim/issues/18. From my brief reading, it looks like we'll also need to install neovim as well; it might be too much to ask of vscodevim consumers to install neovim as I doubt VSCode will allow extensions to install random executables. >  > In any case, neovim looks promising. I haven't played with it too much so feel free to send any pointers on how we might get started. >  > — > Reply to this email directly or view it on GitHub https://github.com/Microsoft/vscode/issues/300#issuecomment-158562825.
784|it's not just a matter of putting it on the path. It needs a decent shell script so that control returns to your terminal window. (like Atom and Sublime do)  Also, as @0xmohit points out, it's called `Code` and not `code` which makes a difference
785|I am confused... copy in VSC, paste in xterm seems to work. Am I missing something here?
786|@mackenza my PR features a small script that does this, something similar should probably be included in the codebase eventually https://github.com/Microsoft/vscode-docs/pull/46 to meet user expectations
787|Hi **@jel-massih**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <span>We will now validate the agreement and then real humans will evaluate your PR.</span>  TTYL, MSBOT;
788|yes it is. @bpasero
789|"Ouch - I'm sorry. I meant to say ""for Extensions"" - going to edit now.  On Fri, Nov 20, 2015 at 6:35 PM, Andrew MacKenzie notifications@github.com wrote:  > I am confused... copy in VSC, paste in xterm seems to work. Am I missing > something here? >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/217#issuecomment-158567014.  ##   #   Raymond Camden, Developer Advocate for MobileFirst at IBM  Email : raymondcamden@gmail.com Blog : www.raymondcamden.com Twitter: raymondcamden"
790|Did not see that one :) I can verify that `Ctrl + =` zooms in and there is an extension `Persistent Zoom`. Although, I guess extensions have some start-up time, which is why it has some lag when opening file with Code for example. That's why it would still be nice to have this as default setting.
791|That seems to be an issue with the rendering engine, since the cursor image is an SVG and should in theory look fine on all scale factors.
792|I'm guessing code runs `git rev-parse --show-toplevel` but returns `/c/` prefixed paths.
793|I'm experience the same issues in C# - no autocompletion.  However, hitting ctrl-space brings it up. Bit annoying to have to do this though. I thought there may have been a new option to switch on the 'auto' bit of completing, but can't find it!
794|It seems bingo! When I make junction link like below.  ``` cd C:\ mklink /J C C:\ ```  code works fine with git.  ![](https://i.gyazo.com/611824804775314b6bec87da3b64bdf5.png)  So, vscode should convert path on msys2 into `C:\` prefixed paths.
795|"@welefen Not sure if you noticed or not, but there is experimental support for ES7 decorators. In your jsconfig.json file, use the `experimentalDecorators` option:  ``` json {     ""compilerOptions"": {         ""target"": ""ES6"",         ""module"": ""commonjs"",         ""experimentalDecorators"": true     } } ```  That seems to be all the ES7 support you get at this time."
796|I installed package https://github.com/Alexpux/MINGW-packages/tree/master/mingw-w64-git-git
797|For me ctrl+space doesn’t help.  > On 21-Nov-2015, at 7:54 AM, Tarique Naseem notifications@github.com wrote: >  > I'm experience the same issues in C# - no autocompletion. >  > However, hitting ctrl-space brings it up. Bit annoying to have to do this though. I thought there may have been a new option to switch on the 'auto' bit of completing, but can't find it! >  > — > Reply to this email directly or view it on GitHub https://github.com/Microsoft/vscode/issues/179#issuecomment-158577759.
798|Was this change to the generator made after I submitted the issue? Because I downloaded the generator for the very first time just before I opened this issue.
799|"+1 There really is a very weird bug here. When placing the file in the root folder, on some projects, it works, on others it doesn't. Moving the file to the src folder does the trick. I have no resorted to stripping down the jsconfig.json completely... and no go.  ``` {   ""compilerOptions"": {     ""target"": ""ES6""   } } ```  To say the least, this is quite irritating and actually standing in the way on my team using this.  No, we are no going to place a jsconfig.json file in each root source folder, e.g. src/, specs, etc."
800|agree, but maybe it is a optimize  solution for memory
