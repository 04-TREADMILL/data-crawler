18601|@SamVerschueren sounds like a good example for a PR?
18602|@Tyriar ah nice, did not see your PR until now!
18603|This issue is currently assigned to the backlog. Every sprint we pick items from the backlog to plan for the current iteration. Please see https://github.com/Microsoft/vscode/wiki/Issue-Tracking#planning
18604|Yes I looked into it but to be honest, I have to clue where to start :). So if you can point me in the right direction, I would be very happy to do one :).
18605|A fix has landed in insiders. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18606|A fix has landed in insiders. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18607|We pushed a major update to the UI framework to our insiders release and would appreciate feedback if this issue got resolved. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18608|We pushed a major update to the UI framework to our insiders release and would appreciate feedback if this issue got resolved. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18609|We pushed a major update to the UI framework to our insiders release and would appreciate feedback if this issue got resolved. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18610|We pushed a major update to the UI framework to our insiders release and would appreciate feedback if this issue got resolved. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18611|We pushed a major update to the UI framework to our insiders release and would appreciate feedback if this issue got resolved. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders  Happy for feedback!
18612|Ok, an insiders release is out with my change included. Would be happy for someone to give it a try: http://code.visualstudio.com/Download#insiders
18613|@SamVerschueren I would start by fulltext search for the action id (workbench.action.files.newFolder) and that brings you here: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/files/browser/fileActions.ts#L590  From there you can get a feeling how this global action works and maybe add the new one. You will also see the one on top for creating an untitled file (which is not what you want).   When you find the references of that action you will see where it is being registered to the system: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/files/browser/fileActions.contribution.ts#L169
18614|Alright, awesome. Thank you very much @bpasero. Will see what I can do :).
18615|![capture](https://cloud.githubusercontent.com/assets/1171301/14699928/0a555b96-0751-11e6-90cf-40b97cc37067.PNG)  Issue still exists.  Before scrolling: ![1](https://cloud.githubusercontent.com/assets/1171301/14699968/4a8161ba-0751-11e6-9668-9dd962a34702.PNG) After: ![2](https://cloud.githubusercontent.com/assets/1171301/14699972/4e96edec-0751-11e6-8884-544a61b16d3e.PNG)
18616|👍
18617|Looking at Atom JS grammar it seems they use the `support.function` scope for function references. For variable references it's `variables.other.object`. We would still need a scope that stands for just the variable declaration. Moving this to the TM/JS grammar team for consideration. I personally think we should stick to what we have.
18618|This issue was moved to Microsoft/TypeScript-TmLanguage#149
18619|The text comes back truncated from the TSServer. Moving to TS team.
18620|This issue was moved to Microsoft/TypeScript#8238
18621|@isidorn I give this to you since you worked on the output view. IMO we need to allow output channel clients to register link matchers. I know that @bpasero tried to solve the generically but that will either miss stuff or produce too many false positives.
18622|@bpasero assigning to you since all views seem to be affected. Looks like a workbench issue.
18623|@vsccarl Stop filing C# issues in this repository. The correct repository is https://github.com/OmniSharp/omnisharp-vscode
18624|@alexandrudima not sure if this is you or @aeschli
18625|@outcoldman Actually there is an [extension](https://marketplace.visualstudio.com/items?itemName=webstp.extension-manager) for this. We should consider promoting that.
18626|@aeschli might be something we want to fix for April.
18627|Seems to be true for any action in trees, I am quite sure this used to work but no longer is. No clue why so far...
18628|@bpasero do you verify that it's an Electron issue?
18629|@isidorn ignore if there is a nls.localize. We haven't received any new translation input yet.
18630|This issue was moved to OmniSharp/omnisharp-vscode#228
18631|Actually, may not need the `-root` dir at all anymore because `.config` being so restrictive was the main reason for it. I'll check tomorrow.
18632|Sure. Which version of git do you have installed?  Does it work when you specify git's path exactly in the `git.path` configuration setting? In @kyberias's case, it would be `C:\Users\jaakk_000\AppData\Local\Programs\Git\cmd\git.exe`.
18633|I can reproduce for any empty folder. @isidorn could it be that debug viewlet crashes in empty folder setup?  shell.ts:454 Cannot read property 'map' of undefined: TypeError: Cannot read property 'map' of undefined     at file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/parts/debug/browser/debugViewlet.js:4:6062     at __dirname.undefined.t.Class.define.then (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:28372)     at t.setVisible (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/parts/debug/browser/debugViewlet.js:4:6016)     at file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:87:27329     at __dirname.undefined.t.Class.define.then (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:28372)     at t.showComposite (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:87:26524)     at file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:87:24776     at Object.h [as _notify](file:///C:/Program Files %28x86%29/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:21887)     at Object.__dirname.undefined.M.enter (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:25049)     at __dirname.undefined.t.Class.define._run (file:///C:/Program Files (x86)/Microsoft VS Code Alpha/resources/app/out/vs/workbench/workbench.main.js:23:26875)
18634|This issue was moved to OmniSharp/omnisharp-server#213
18635|I believe this is only happening on the second (!) line of trivia. It's a known issue with TypeScript/JavaScript format on type.
18636|I'd say it's related to https://github.com/Microsoft/vscode/issues/3797. Tho is reproduces for me only on the second line
18637|I cannot reproduce. Any more details...?
18638|"@lukaschal Improper JPN translation in following locations  [find.nls.resx.lcl](https://monacotools.visualstudio.com/DefaultCollection/Monaco/_git/MonacoLocalization#path=%2FLocalize%2Fjpn%2Fvscode%2Fsrc%2Fvs%2Feditor%2Fcontrib%2Ffind%2Fbrowser%2Ffind.nls.resx.lcl&version=GBmaster&_a=contents)  ```   <Item ItemId="";selectAllOccurencesOfFindMatch"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">     <Str Cat=""Text"">       <Val><![CDATA[Select All Occurences of Find Match]]></Val>       <Tgt Cat=""Text"" Stat=""Loc"" Orig=""New"" Appr=""PreApproved"">         <Val><![CDATA[一致項目のすべてのオカレンスを選択]]></Val>       </Tgt>     </Str>     <Disp Icon=""Str"" />     <Modified By=""snakamura"" DateTime=""2015-05-27T05:29:42Z"" />   </Item> ```  [findController.nls.resx.lcl](https://monacotools.visualstudio.com/DefaultCollection/Monaco/_git/MonacoLocalization#path=%2FLocalize%2Fjpn%2Fvscode%2Fsrc%2Fvs%2Feditor%2Fcontrib%2Ffind%2Fcommon%2FfindController.nls.resx.lcl&version=GBmaster&_a=contents)  ```   <Item ItemId="";selectAllOccurencesOfFindMatch"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">     <Str Cat=""Text"">       <Val><![CDATA[Select All Occurences of Find Match]]></Val>       <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">         <Val><![CDATA[一致項目のすべてのオカレンスを選択]]></Val>       </Tgt>     </Str>     <Disp Icon=""Str"" />     <Modified By=""ICizkova"" DateTime=""2016-03-10T16:02:42Z"" />   </Item> ```"
18639|@alexandrudima don't know where to start :-). Since the editor has a native keyboard module I start with you. But could be an electron bug as well. @bpasero does this ring any bell to you?
18640|No ringing.
18641|checked with the repo from above, doesn't happen with the first but the second Enter. I remember this behaviour being present in a previous version of TypeScript and their 'fix' made it work for the first enter. @venil7 might not be on 1.0
18642|Exactly. His steps are with one line. This is why I keep investigating. Would like to understand his issues.
18643|Closing since we now use TypeScript for this.
18644|@outcoldman added some feedback. did you actually try this change out before creating the PR? it does not work :)
18645|@Tyriar IMO Function keys are bad. May be we have to think about some cords which we then can use consistent to extend the space of available keyboard short cuts.
18646|Fixed with latest vscode insiders release, please try it there. Otherwise it will be available in the stable release in the next couple of weeks
18647|"@alexandrudima is there an event emitted when a command is executed like ""Copy"" in the editor?"
18648|@bpasero would it be interesting to have something like: https://github.com/ggreer/the_silver_searcher as a dependency and use it? Seems powerful for file searches.  #justMy2Cents
18649|There is a [localize call](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/debugViews.ts#L289)
18650|What you see is that colors of the default theme are shining through (in the case the turquise for the definition). I fixed this for 1.0.
18651|Please check out these docs https://code.visualstudio.com/docs/editor/debugging If you still see the issue let us know and please find a small reproducable sample repository where the issue happens. Closing for now, will reopen if more data is provided
18652|"Problem is a bad `jsconfig.json` files. It read  ```     ""files"": [         ""bin/wwww""     ] ```  Note the 4 w's, not 3. I have updated the test"
18653|Another option that might be very helpful is [Eclim](http://eclim.org/). It is used to provide Eclipse-level Java support in Vim, Sublime and other editors.
18654|@bpasero yes, debug crashed for no folder workspace This is a serious regression, not sure if we want to push it out to our insiders - marking as candidate to consider it.  ping @egamma
18655|@bpasero   [marked](https://github.com/chjj/marked) seems to be dead https://github.com/chjj/marked/issues/724  Maybe switch to a more well-maintained markdown library like https://markdown-it.github.io/ ? Otherwise this issue can't be fixed.
18656|@octref subscribe #4668 please
18657|@lravindr Can you paste your code here? Or make a screenshot with 'render whitespaces' turned on? What are the tab/spaces settings (you can see this in the status bar)
18658|"Yes, happens on first [Enter], with `""editor.formatOnType"": true,`"
18659|"Unfortunately not on Windows 10 150% text size on a 3840x2160 monitor.  Beware how you view the image below. Your browser might rescale it.  <img width=""870"" alt=""blurtext"" src=""https://cloud.githubusercontent.com/assets/143631/14702622/b7d568ba-07ab-11e6-9b26-bed0ab3b1662.png"">"
18660|@delmyers now on every call stack changed we are expending the debugged thread and selecting the debugged stack frame in the call stack tree. Please try it out and let us know what you think.  On a side note, if I want to file a bug against a C++ extension I did not find a git hub repo but a mail [address](mailto:c_cpp_support@microsoft.com). Is that the process for filing bugs right now?
18661|Rebased
18662|+1 really looking forward this, Monaco is hidden too deep in azure and Microsft should definitely make the best WebIDE available as a standalone service.
18663|I'm still seeing really long load times on version 1.0.0 when using as my external editor for Unity. For example triggering IntelliSense via hotkey with my cursor at the end of `Mathf.Clamp` takes 8 seconds to offer me suggestions. Consecutive invocations don't immediately get faster.
18664|Regarding applyTo: if it is an external build command run through tasks then allDocuments is fine. Whether you report absolute or relative paths doesn't matter as long as the problem matcher is configured correctly. The TS compiler for example reports problems relative to the workspace folder.  That is why it is configured as:  ```     fileLocation: FileLocationKind.Relative,     filePrefix: '${cwd}', ```  Regarding error positions: we do have some smartness here in the editor. If you only provide line/column then we automatically underline the word. If you provide line/column and endLine/End/Column then we take exactly that.  I saw you commenting on the language server protocol as well. If you are implementing a full language server for Haxe then you actually don't need any of this since the language server can report errors as well and the proper transformation of line/column can be done in code.  Let me know how you want to proceed.
18665|@joaomoreno moving back to you to response to additional comments.
18666|[ ![screen-shot-2016-04-21-at-10 44 28](https://cloud.githubusercontent.com/assets/149472/14703103/50591814-07ae-11e6-89ae-784642f1cf1a.png) ](url)  Even a variable in the same scope takes ~5 seconds of loading.
18667|Ok, I can no longer easily repro this, but let me know if you need more details if I hit it again
18668|Dup of https://github.com/Microsoft/vscode/issues/586
18669|A friendly reminder that we (myself, @bpasero and @bgashler1) will be sharing our latest designs for tabs and working files later today at 4pm British Summer Time.  Join us on this link at 4pm BST:  https://hangouts.google.com/call/u3wnrhjja5h47ovt7piatelkxme. We would love to hear your feedback.
18670|@Tyriar I did a quick scan over the changes. I hope you understand that this change - if done wrong - will  break every existing user out there with no easy way to get back and possible corruption. I am not confident to do such a change so late in the game without extensive testing across all platforms and all corner cases.
18671|Given my feedback, I am not suggesting to do this so late in the milestone.
18672|@venil7 I added code to trace what we get back from the TS language server in your setup to better understand why this is happening. I will ping you as soon as this lands in a public available build with instructions how to produce a trace. I don't know how to track this down otherwise.
18673|duplicate of #3754
18674|Moving to May.
18675|Same here, hot_exit is mandatory to try something else than sublime... would like to try, but can't imagine working again with editor that can't give me this security feelings that sublime is giving to me.  I often switch between 2 or 3 projects, that hot_exit let me do that with abslolutly no pain. Have to check code in another project, 3 new files in the current, no problem, project switch in the same window, copy past what i need, i come back to the working project, all is there ... even new file, undo etc ...   other situation, machin crash, need of restarting windows etc ... is osblolutly painless, as each project keep all files saved or not, open, i get back my tab in each project, can'l leave without this ,D
18676|Reading through the Python docs it looks like that python buffers stdout & stderr when running as a child process. Calling python with the -u switch works as expected.   ![bug](https://cloud.githubusercontent.com/assets/1931590/14704147/99e966fa-07b3-11e6-86e8-4a0e99c2892c.gif)
18677|Wasn't able to reproduce the freeze on latest alpha. Closing.
18678|Still waiting on TS team to provide a fix for this.
18679|I've installed the latest 64-bit version of Git from the above link at the time of opening this issue. As you can see from the installation directory, I've probably installed it only for my user account in Windows.  Look, I'm not looking for tips to workaround this issue. I've reported enough information to reproduce it. I don't think you need more information. **Have you tried reproducing it?**   I could poke around in the source code and find the bug for you but I guess it should be easier for you to do it if you think this bug is important enough to be fixed.
18680|Also I think @tjpeden's issue here is a totally different one. It even has a different error message. Don't mix the two.
18681|@nrj Your screenshot shows the initial loading process for code completion which is handled by a plugin. VSCode's internal code completion filtering (= the topic of this ticket) takes place after the plugin has delivered the suggestion items. The bahviour you are facing seems to be an issue of the plugin which provides the code completion (I guess it's OmniSharp).
18682|@infininight Great, I updated our grammar. The original issue seems to be fixed. thanks!  One comment mentions the async and await syntax. This seems to be still open. I created https://github.com/textmate/python.tmbundle/issues/53
18683|"@bpasero You were talking about other GUIs like Windows start menu. In this area, we (Japanese) also have same pain on searching programs. On Windows start menu, there are many _undocumented_ keywords for the pre-installed tools, calc for ""電卓"", feedback for ""Windows フィードバック"", paint/pbursh for ""ペイント"" and so on. We memorize many of them to deal with the problematic Windows GUI; the start menu is anyway not a good example of successful GUI.  So, anyway, for command line tools like git, we want the command names in English. We, Japanese developers usually use pull/push/fetch in normal operation and, are very familiar to these English commands. And, for basic editor operations like open, edit, find,... They should be shown as English commands with Japanese explanation (like hint/tooltip)."
18684|"That's a parse error from URI which happens if you create it with invalid strings. The rule, as contained in the error, is  _ If a URI contains an authority component, then the path component must either be empty or begin with a slash (""/"") character_ which means you cannot create a uri form `file:////ddd` or `file://ddd`.  To explain what is what check this: https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/uri.ts#L30"
18685|I've since updated the linked readme.md so it no longer suffers from the issue but the following link is to the point in the repo where I reported the bug.  https://raw.githubusercontent.com/lwsrbrts/PoSHue/4718c4f933031d8c2c8bcdc2bf0561ebe01e067a/README.md
18686|@jrieken the JSON provider returns a CompletionList with an empty array of items. If I understand right that should prevent the textual proposals to show up.
18687|@jrieken Maybe it would make sense to make the 'showTextualProposals' a setting on CompletionList. It's more explicit. It would also allow to have your own proposals together with textual proposals
18688|Reopening this given the discussion that happens.
18689|@egamma @chrisdias I would appreciate if a decision could be made by either PM lead or Dev Lead how we should handle this issue and then plan with the team how we do the adoption (if needed).
18690|@bpasero @egamma @chrisdias My suggestion is to display both English command and translated command together, but I prefer translate first, then English.
18691|"Some ideas on the UI (ignore the fact that both show up as english - we just have to decide which comes first english or translated):  <img width=""634"" alt=""screen shot 2016-04-21 at 11 29 23"" src=""https://cloud.githubusercontent.com/assets/900690/14706073/8303bc50-07b4-11e6-9a31-6a5b1e819600.png""> <img width=""630"" alt=""screen shot 2016-04-21 at 11 30 21"" src=""https://cloud.githubusercontent.com/assets/900690/14706074/8304ba42-07b4-11e6-8b48-a30a3c872040.png"">"
18692|I actually like the second option and would probably show english first and then the translation.
18693|@bpasero Second one looks good. You can simply replace the keyword line with English commands (and also, reduce text size). If you are already using English as UI language, simply turn off this line.
18694|I found out that the fact we assign `role: tree` seems to cause this and changing it to `role: listbox` seems to fix it. However I am not feeling comfortable making such a change because the role should actually be tree.  @zersiax any clue what might be going on? we have a `tree` with `treeitem` and each `treeitem` can have one or more `button` that have a `tabindex` to navigate to. Once I change the `role` from `tree` to `listbox` the screen reader (NVDA) correctly reads out the `button` when I navigate to it.
18695|@be5invis so you would prefer to see translated commands first and the english values below?
18696|@bpasero My preference is translated first, but some people may prefer English first. Make it configurable?
18697|@be5invis any chance you could check if the insiders released has fixed this issue for you?
18698|So if  no folders are open, opened files are not reopened after restart VSC? A bit dumb.
18699|@bpasero Hold on i am installing
18700|May have something to do with chromium bug 601933  https://bugs.chromium.org/p/chromium/issues/detail?id=601933 Have a look around the accessibility tree if something similar might be going on. I am guessing that changing the role to listbox breaks navigation among levels?
