19201|Awesome... Thx ;)
19202|@bpasero No,I don't have to installed any extensions.
19203|"@bpasero The only change is:  // 控制字体系列。     ""editor.fontFamily"": ""Microsoft Yahei Mono"",  ``` // 控制字体大小。 ""editor.fontSize"": 17,  // 控制行高。 ""editor.lineHeight"": 24,  ""files.associations"": {     ""*.tpl"": ""html"" } ```"
19204|Similar issues: https://github.com/Microsoft/vscode/issues/1648 https://github.com/Microsoft/vscode/issues/957
19205|Added tests.
19206|Moving to @joaomoreno. For some reason code.cmd does not block the VS Code output from the terminal.
19207|@joaomoreno maybe also related to https://github.com/Microsoft/vscode/issues/4808 ?
19208|@biij5698 are you saying you are just editing HTML files and nothing else? can you share your workspace with me?
19209|+1
19210|As with every command in the workbench, the Command Pallette (<kbd>Ctrl Shift P</kbd> or <kbd>⌘ Shift P</kbd>) will let you find those:  ![image](https://cloud.githubusercontent.com/assets/22350/14775806/fab84468-0ac1-11e6-9381-9f452cfe116a.png)  Additionally there are actions in the git view itself:  ![image](https://cloud.githubusercontent.com/assets/22350/14775822/188dcd00-0ac2-11e6-93ba-469a6d0967c9.png)  Finally, the sync action in the status bar does a _pull + push_ combination action:  ![image](https://cloud.githubusercontent.com/assets/22350/14775832/2aecf476-0ac2-11e6-9618-0930f1d56948.png)
19211|Thanks for the details, you are absolutely right!  Duplicate of #901
19212|It's not, but its definitely related. Once we have a history, merging is but a contextual action.
19213|The Windows installer **does** put `bin/` in the `PATH`. Unless you are a user since over 6 months and you've been going through a series of updates which neglected that fact.
19214|@tjpeden Your issue is definitely different. If the default path is where your git is, and Code tells you `Failed to execute git`, then something is wrong in your system. Have you tried running some git commands from the command line? I'd suspect a broken config file, or a broken installation directory.  @kyberias ping
19215|"I still have the problem, also with disabled extensions. But as I said if have .js file instead of .ts files. I also tried a never typescript version with the setting:  `""typescript.tsdk"": ""/usr/local/lib/node_modules/typescript/lib""`  The typescript version is `Version 1.9.0-dev.20160423`  ![vscode](https://cloud.githubusercontent.com/assets/1742426/14776165/e0f5bad0-0ac4-11e6-9dca-940b8d0e9645.gif)"
19216|This is so strange. Like [OS X caches the executable name somewhere](https://discussions.apple.com/thread/1496021?start=0&tstart=0)...
19217|This is because we have a [throttling of output](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/repl.ts#L48) otherwise the tree could be refreshed every ms and this could cause vscode to crash. We use this to stop a potentially spammy extension from flooding the repl.  Closing as designed
19218|Afaik this is not related to git at all.
19219|You clearly **need** the node he suggests.
19220|Hi @robbpriestley ,  One user already encountered a similar issue, please check it out as I explain the reasoning behind this https://github.com/Microsoft/vscode/issues/5276
19221|I open developer tools and I found in the tab console this error: ![captura](https://cloud.githubusercontent.com/assets/18613356/14776177/f2e6c748-0ac4-11e6-945b-0e692906d4e9.PNG)
19222|It definitely seems to block it on my machine. Closing it due to _I had old build installed on my windows8 Machine._.
19223|@Piscean exactly right. We don't have a clear answer for this.
19224|@joaloez very good idea to check the console, so this seems to indicate that VS Code fails to resolve the workspace you want it to open with.   Do you have sufficient permissions to access '\fileapp\Share\wwwDev02'? Would you be able to try a little node.js script out on this share for me? Would be interesting to reproduce this with a little snippet.
19225|@jrieken fyi
19226|I have looked into this and the simptoms are the same as for https://github.com/Microsoft/vscode/issues/5348 So node debug gets the same error from node.  This only happens in call back functions for some reasons - Martin also noticed that
19227|@joaomoreno I did a brief check of your changes, but since they are a lot I did not do a line by line review. Overall I like the services introduced and it makes sense to have the same service model we have on the renderer side also on the client.  The only immediate feedback I have is to keep the service names consistent: `ISettingsManager` => `ISettingsService` `IWindowsManager` => `IWindowService` `IUpdateManager` => `IUpdateService` `IEnvServie` => `IEnvironmentService`
19228|@bpasero no, not a regression, we never added that smartness. Though I agree it is a bad experience so I will improve it today. Do you think we should open the repl on the frist debug launch in the workspace. Or first debug launch since vscode started. Hmm? I would go for the second.
19229|Just merged it as you commented, thanks for the review. Name changes make sense. I mostly did not change anything, except making a log service. Everything else stayed the same. There is much room for improvement. Would love to see a common IEnvService on all parts of our system, for example. Would also like to strip it down and clean up the many properties it currently has.
19230|My project is in '\fileapp\Share\wwwDev02\www\tmk\' and this is the netwok share that I open. I don't know why VS Code fail in '\fileapp\Share\wwwDev02' (I don't have sufficient permissions) and not grabs the entire directory. I can ask at TI to try your node.js. Tell me what to do.
19231|duplicate of #5426   Please check my comment in #5426. You need the change the formatter settings if you want the content of `template` formatted.
19232|This issue was moved to OmniSharp/omnisharp-vscode#243
19233|@bpasero I though [this](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/html/browser/htmlPreviewPart.ts#L8) is enough
19234|+1. would be nice if you could use the same IEnvironmentService on the renderer side that just carries over all the properties it has so that you don't have to do the marshalling manually everywhere.
19235|Hm true, weird. Webview works for me after my change.
19236|now, I get it. Thanks for fixing
19237|I believe this is a dupe of #5736
19238|"Ok good, would be interesting if something changes between node.js 4.1.1 and node.js 5.10.0 (our latest use), so maybe you could try with both versions: - run node from the command line - type `require(""fs"").statSync(""\\fileapp\\Share\\wwwDev02"")` - send me the output  Second try: - run node from the command line - type `require(""fs"").lstatSync(""\\fileapp\\Share\\wwwDev02"")` - send me the output"
19239|@4kochi What you are seeing is #3797
19240|@isidorn ah so the change you did was to not pop up the repl when output is appended and the user closed it, right?  From your two options I am not sure what the difference is between the two?  Btw since this seems new behaviour I am not sure if it is desired for all users, maybe also check with @weinand. My use case is that I want to try out my extension often but there is absolutely nothing in the repl that I am using for my extension. So I constantly have to close the repl to win back the space for the editor area.  I like the idea of keeping the repl closed once it popped up after a  debug session and the user closing it. The alternative (I am sure you guys discussed this before) would be to close the repl when the debug session is  over?
19241|for html there are issues, see #1808 and #4795
19242|Yep, it needs a @optional decorator. I clicked around but it's likely I misses some cases...
19243|Ah, it's about completion in HTML for the class attribute? That we don't support that. Marking as duplicate of #1005
19244|@Tyriar there is no GitHub issue relating to this change
19245|@bpasero I do [this](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/node/extHostQuickOpen.ts#L1920). Should it be different?
19246|We also need the API **_byteOffsetAt**_ which just like [TextDocument.offsetAt](https://code.visualstudio.com/docs/extensionAPI/vscode-api#TextDocument.offsetAt)
19247|By analyzing the blame information on this pull request, we identified @joaomoreno and @egamma to be potential reviewers
19248|Hi **@Ikuyadeu**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
19249|@joaomoreno      <key>CFBundleExecutable</key>     <string>Electron</string>
19250|"![node_v4 1 1](https://cloud.githubusercontent.com/assets/18613356/14778292/71dbda9a-0ad2-11e6-8999-03e4e429ed61.PNG)  ![node_v5 10 0](https://cloud.githubusercontent.com/assets/18613356/14778299/78453ac0-0ad2-11e6-9806-2e7867d91bf5.PNG)  It should not be ""\\\\fileapp\\Share\\wwwDev02"""
19251|"I cannot reproduce this issue, for me prompt, value and placeholder can be used ""alle 3 zusammen"":  ![image](https://cloud.githubusercontent.com/assets/900690/14778514/aa58c9d6-0ad3-11e6-853b-eaa834ba241a.png)  ![image](https://cloud.githubusercontent.com/assets/900690/14778520/b9d88dec-0ad3-11e6-917e-41fec88635c7.png)"
19252|"@joaloez sorry you are right, please try with ""\\fileapp\Share\wwwDev02"""
19253|Yes, see http://code.visualstudio.com/docs/extensionAPI/extension-points#_contributesconfiguration
19254|@dbaeumer @egamma @jrieken fyi
19255|This worked for me: start a command prompt and navigate to working folder.  ``` set NODE_TLS_REJECT_UNAUTHORIZED=0 code . ```  from http://stackoverflow.com/questions/33820733/error-unable-to-verify-the-first-certificate-how-to-trust-all-certificates
19256|@idoros which language is this?
19257|@yyjazsf why would you want to see a dialog?
19258|@isidorn @weinand fyi
19259|@dbillingham The pull request removes functionality from the existing code that we want to keep: - on unfold, if the range at the cursor is not folded, find the first contained folded range and unfold it. That came from issue #3814. - on a regular (not recursive) fold we want to fold the most inner range containing the cursor. If I see this right, your change would make the most outer range to fold.
19260|@yyjazsf I cannot reproduce, can you attach a sample?
19261|@asednev I suggest you report this against the C# extension?
19262|Ok, thanks for clarification.
19263|Thanks, we fixed this meanwhile but have not yet pushed for another insider update!
19264|@alexandrudima are we maybe disabling compare for large files?
19265|At least I see we stop coloring after some lines in those files.
19266|This is a consequence of having multiple targets for the definition. I am not sure if we can/want to be smarter here.
19267|Dup of #2163
19268|"This seems to happen because of the unclosed quote in  `content=""text/html;charset=""utf-8"" />`"
19269|+1
19270|This seems to be fixed in 1.0: ![image](https://cloud.githubusercontent.com/assets/6461412/14779130/dfa6d97c-0ad6-11e6-96c5-c336620e7d57.png)
19271|Reproduced with the following snippet:  ``` javascript class TestCase {     ['foo']() {         this.registerComponent('foo-bar');     } }  class TestCase2 {     foo() {         this.registerComponent('foo-bar');     } } ```
19272|This issue was moved to Microsoft/TypeScript-TmLanguage#154
19273|I see uses of this font in editor, git and debug land. Starting with editor.
19274|Some languages allow symbols to be defined in multiple places and if such situations are encountered we show all. @alexxx537 Having said that it might be an issue with the extension you are using.
19275|fyi @alexandrudima
19276|"@bpasero Yes,and my workspace is : // 将设置放入此文件中以覆盖默认设置 {     // 控制字体系列。     ""editor.fontFamily"": ""Microsoft Yahei Mono"",  ``` // 控制字体大小。 ""editor.fontSize"": 17,  // 控制行高。 ""editor.lineHeight"": 24,  //支持tpl文件 ""files.associations"": {     ""*.tpl"": ""html"" }, //-------- 窗口配置 --------  // 启用后，将在新窗口中打开文件，而不是重复使用现有实例。 ""window.openFilesInNewWindow"": false,  // 控制重启后如何重新打开文件夹。选择“无”以从不重新打开文件夹，选择“一个”以重新打开最后处理的文件夹，或选择“全部”以打开上次会话的所有文件夹。 ""window.reopenFolders"": ""all"" ```  }"
19277|I meant, can you share the contents of the workspace. Is it maybe at GitHub?
19278|@jrieken  And we need more info that the context.  Example: Right Click on Explorer View, The context contains `viewer` and `element`, See https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/files/browser/fileActions.contribution.ts#L40  How to let the developers know the context. And sometimes the context can`t be serialized
19279|The tmgrammar has the following empty capture on line 1078:  ``` xml                 <key>raw</key>                 <dict>                     <key>captures</key>                     <dict>                          <key>2</key>                         <dict/> ```  I created https://github.com/Microsoft/vscode-textmate/issues/10.  As a workaround just remove these two lines.
19280|This got fixed in https://github.com/Microsoft/vscode/issues/3818  You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders
19281|Hm, weird. On the screenshot the zoom level looks ok, but not when I see it running here. It also seems to fix itself once I zoom in and out from the View menu. Might as well be a bug in the webview itself.
19282|> I would like to know this info, so I could differentiate my user data, which is stored on local disk instead of context.workspaceState.update.  We have now the `appName` in the API which is the product name. I still wonder why you need this and cannot use the `workspaceState` cos that already scopes by product etc
19283|👍
19284|The problem is that TypeScript doesn't give us a value for the project name anymore. That's why we think your file is part of the _virtual_ project which makes us suggest this...
19285|I guess this issue is also related where the webview does not take the full width into account because I am zoomed in:  ![image](https://cloud.githubusercontent.com/assets/900690/14781475/f90c430a-0ae2-11e6-8d5e-01479ae7dd16.png)
19286|@SteveALee To workaround this, remove `allowJS: true` setting from the jsconfig.json file.
19287|But if I add that folder into exclude files how VSC can find it and show definition to me?
19288|duplicate of #2204
19289|"projectInfo data **without** `allowJS`  ``` Sending request: projectInfo (6). Response expected: yes. Current queue length: 0 Arguments: {     ""file"": ""/Users/jrieken/Code/_samples/brian/client/src/js/pathUtils.js"",     ""needFileNameList"": true }  Response received: projectInfo (6). Request took 1 ms. Success: true  Result: {     ""configFileName"": ""/Users/jrieken/Code/_samples/brian/jsconfig.json"",     ""fileNames"": [         ""/Users/jrieken/Code/vscode/extensions/typescript/server/typescript/lib/lib.es6.d.ts"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/pathUtils.js"",         ""/Users/jrieken/Code/_samples/brian/client/webpack.config.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/globalError.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/drivers/speech.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/drivers/fullScreen.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/drivers/localStorage.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/runHot.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/components/view.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/components/viewAssistant.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/components/App.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/main.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/components/Card.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/config/defaultConfig.js"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/config/defaultSettings.js"",         ""/Users/jrieken/Code/_samples/brian/server/handlers/pages.js"",         ""/Users/jrieken/Code/_samples/brian/server/handlers/assets.js"",         ""/Users/jrieken/Code/_samples/brian/server/routes.js"",         ""/Users/jrieken/Code/_samples/brian/server/server.js""     ] } ```  and with (requires tsserver restart)  ``` Sending request: projectInfo (1). Response expected: yes. Current queue length: 0 Arguments: {     ""file"": ""/Users/jrieken/Code/_samples/brian/client/src/js/pathUtils.js"",     ""needFileNameList"": true }  Response received: projectInfo (1). Request took 4 ms. Success: true  Result: {     ""fileNames"": [         ""/Users/jrieken/Code/vscode/extensions/typescript/server/typescript/lib/lib.d.ts"",         ""/Users/jrieken/Code/_samples/brian/client/src/js/pathUtils.js""     ] }  ```"
19290|@aeschli Can we make an error/warning appear in jsconfig.json files that have that specific setting set?
19291|Thanks. I don't fully understand the explanation but will try the workaround . This is a JS project though so turning off the option seems strange. I only use to for typings.
19292|I know sounds weird. I know the `allowJS` flag introduced for **ts**config.json files to allow JavaScript and the **js**config.json files should have that set implicit by  their name. Tho I don't understand why it breaks the project info
19293|"I tested each command with routes ""\\fileapp\Share\wwwDev02"" ""\\fileapp\Share\wwwDev02\www\tmk""  node_v4.1.1  > require(""fs"").statSync(""\\fileapp\Share\wwwDev02"") > Error: EPERM: operation not permitted, stat '\fileapp\Share\wwwDev02' >     at Error (native) >     at Object.fs.statSync (fs.js:849:18) >     at repl:1:15 >     at REPLServer.defaultEval (repl.js:164:27) >     at bound (domain.js:250:14) >     at REPLServer.runBound [as eval](domain.js:263:12) >     at REPLServer.<anonymous> (repl.js:393:12) >     at emitOne (events.js:82:20) >     at REPLServer.emit (events.js:169:7) >     at REPLServer.Interface._onLine (readline.js:210:10) >  > require(""fs"").statSync(""\\fileapp\Share\wwwDev02\www\tmk"") > { dev: 60, >   mode: 16822, >   nlink: 1, >   uid: 0, >   gid: 0, >   rdev: 0, >   blksize: undefined, >   ino: 6292509357911562000, >   size: 0, >   blocks: undefined, >   atime: Mon Apr 25 2016 12:53:34 GMT+0200 (Hora de verano romance), >   mtime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   ctime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   birthtime: Mon Feb 29 2016 17:04:56 GMT+0100 (Hora estándar romance) } >  > require(""fs"").lstatSync(""\\fileapp\Share\wwwDev02"") > Error: EPERM: operation not permitted, lstat '\fileapp\Share\wwwDev02' >     at Error (native) >     at Object.fs.lstatSync (fs.js:844:18) >     at repl:1:15 >     at REPLServer.defaultEval (repl.js:164:27) >     at bound (domain.js:250:14) >     at REPLServer.runBound [as eval](domain.js:263:12) >     at REPLServer.<anonymous> (repl.js:393:12) >     at emitOne (events.js:82:20) >     at REPLServer.emit (events.js:169:7) >     at REPLServer.Interface._onLine (readline.js:210:10) >  > require(""fs"").lstatSync(""\\fileapp\Share\wwwDev02\www\tmk"") > { dev: 60, >   mode: 16822, >   nlink: 1, >   uid: 0, >   gid: 0, >   rdev: 0, >   blksize: undefined, >   ino: 6292509357911562000, >   size: 0, >   blocks: undefined, >   atime: Mon Apr 25 2016 12:53:34 GMT+0200 (Hora de verano romance), >   mtime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   ctime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   birthtime: Mon Feb 29 2016 17:04:56 GMT+0100 (Hora estándar romance) }  node_v5.10.0  > require(""fs"").statSync(""\\fileapp\Share\wwwDev02"") > Error: EPERM: operation not permitted, stat '\fileapp\Share\wwwDev02' >     at Error (native) >     at Object.fs.statSync (fs.js:892:18) >     at repl:1:15 >     at REPLServer.defaultEval (repl.js:269:27) >     at bound (domain.js:287:14) >     at REPLServer.runBound [as eval](domain.js:300:12) >     at REPLServer.<anonymous> (repl.js:439:12) >     at emitOne (events.js:95:20) >     at REPLServer.emit (events.js:182:7) >     at REPLServer.Interface._onLine (readline.js:211:10) >  > require(""fs"").statSync(""\\fileapp\Share\wwwDev02\www\tmk"") > { dev: 60, >   mode: 16822, >   nlink: 1, >   uid: 0, >   gid: 0, >   rdev: 0, >   blksize: undefined, >   ino: 6292509357911562000, >   size: 0, >   blocks: undefined, >   atime: Mon Apr 25 2016 12:56:14 GMT+0200 (Hora de verano romance), >   mtime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   ctime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   birthtime: Mon Feb 29 2016 17:04:56 GMT+0100 (Hora estándar romance) } >  > require(""fs"").lstatSync(""\\fileapp\Share\wwwDev02"") > Error: EPERM: operation not permitted, lstat '\fileapp\Share\wwwDev02' >     at Error (native) >     at Object.fs.lstatSync (fs.js:887:18) >     at repl:1:15 >     at REPLServer.defaultEval (repl.js:269:27) >     at bound (domain.js:287:14) >     at REPLServer.runBound [as eval](domain.js:300:12) >     at REPLServer.<anonymous> (repl.js:439:12) >     at emitOne (events.js:95:20) >     at REPLServer.emit (events.js:182:7) >     at REPLServer.Interface._onLine (readline.js:211:10) >  > require(""fs"").lstatSync(""\\fileapp\Share\wwwDev02\www\tmk"") > { dev: 60, >   mode: 16822, >   nlink: 1, >   uid: 0, >   gid: 0, >   rdev: 0, >   blksize: undefined, >   ino: 6292509357911562000, >   size: 0, >   blocks: undefined, >   atime: Mon Apr 25 2016 12:56:14 GMT+0200 (Hora de verano romance), >   mtime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   ctime: Thu Apr 21 2016 18:05:16 GMT+0200 (Hora de verano romance), >   birthtime: Mon Feb 29 2016 17:04:56 GMT+0100 (Hora estándar romance) }"
19294|For me fully featured XML editor (IntelliSense, validation, formatting, go to definition) is most important missing feature in Code. Would it be possible to reuse (or port to TypeScript) XML language support from Visual Studio?
19295|@mattflix VS Code does support inlined source maps but it does not yet support **dynamically generated** source maps at all. We are working on this feature already (and it was planned that the April release would already include some experimental support for dynamically generated source maps).  The babel-register setup is especially tricky because it maps the original source *.js to *.js.source and the generated JavaScript to the original source. This is not a big problem in a debug-only tool like node-inspector which gets all its files through node.js. But in VS Code it is much more difficult because we have to map the files seen by node.js back to the workspace files that VS Code sees. And VS Code does not know what babel-register is actually doing.
19296|Hi @jrieken ,  The contents that I'm saving is a JSON file. I did't use `workspaceState` because I wanted to let the user to have easy access to this file. So, I decided to use the same approach as `keybindings.json` and `settings.json`.  Your suggestion (to use `ExtensionContext` and `extensionPath`) does the trick, so for me it would be enough. But since you decided to add an API, I pretend to move to that API, when available.   What do you think about it?
19297|No. Basically, it is just a little indicator that appears yellow when you change some code, and turns green when you save.  [See here](http://www.codeproject.com/Articles/109611/Color-Indicator-for-Code-Changes-Track-Changes-in) for full description.
19298|It makes sense to store things outside in a readable file. My concern with using the product name is that it's not a 'derive storage location path' api but just a string and its value might change. So, while it is _VS Code Alpha_ today it is not impossible that it becomes _Visual Studio Code Alpha_ in the future.   I would recommend that you generate a storage file name, using the `appName`, but then store that filename using the `ExtensionContext` and retrieve it from there. That gives you speaking filenames but isn't prune to breaking like path-math is.   Unsure where exactly you store those files, but we could talk about exposing the directory path in which VS Code store global-global settings, like `/Users/jrieken/Library/Application Support/Code - Alpha/User/settings.json`
19299|closing as dupe of #5008
19300|@joaloez so does it work if you try to open \fileapp\Share\wwwDev02\www\tmk in vscode and not \fileapp\Share\wwwDev02\www?
