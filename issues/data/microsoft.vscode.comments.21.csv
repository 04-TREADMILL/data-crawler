2001|I've pushed the following change to the defaults in c96af39 (tried on ubuntu and lubuntu): - move lines: from `ctrl+down/up` to `alt+down/up` (aligns with default on windows) - add cursor: from `ctrl+win+down/up` to `shift+alt+down/up` and also `ctrl+shift+down/up`  This frees up `ctrl+up/down` also on linux (it is already free on windows) for a future scroll viewport commands.
2002|**@krizzdewizz**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
2003|@thegiantbeast we cannot really offer such an option because when auto save is enabled, the save can kick in anytime (currently 1 second after making a change) and you would not be able to type whitespace after the end of a line and continue typing.
2004|Just sent my first PR ever. Hope everything is fine.
2005|@bpasero can you show exactly what the line contains and what you type. I could not reproduce
2006|That doesn't sound complex, as long as you differentiate a save from auto save (where the white spaces are not trimmed) and when the user actually saves a file, no?  It's because it's really annoying that I have to remember to delete the spaces in the line that I'm in.
2007|:+1:
2008|Yes, but how does that cause an endless loop? Can you capture the stack trace of the functions involved in there?
2009|Cannot reproduce anymore!
2010|@alexandrudima fyi
2011|throw an uncaughtException.  vs/workbench/node/pluginHostProcess.ts ![image](https://cloud.githubusercontent.com/assets/7069719/11441064/46f96f2c-9543-11e5-93b1-885202268e06.png)  invoke unexpectedErrorHandler  vs/base/common/errors.ts ![1](https://cloud.githubusercontent.com/assets/7069719/11441046/2afd6bb6-9543-11e5-86e7-88e32ab4aceb.png)  throw an uncaughtException.  Here will cause an endless loop.  Toggle Develop Tools ,  console show the stack trace   Did I make myself clear enough?
2012|It seems like OmniSharp is unable to read from globally installed runtimes. Out of the box dnvm package installation installs the runtimes in the global location.  ``` ᐅ dnvm list -detailed  Active              Version Runtime Architecture OperatingSystem Alias Location ------              ------- ------- ------------ --------------- ----- --------             1.0.0-rc1-final coreclr          x64          darwin default /usr/local/lib/dnx/runtimes             1.0.0-rc1-final    mono                    linux/osx       /usr/local/lib/dnx/runtimes ```  Instead of symlink you can uninstall the ones in the global location, and reinstall them in the user location.  ``` ᐅ dnvm uninstall 1.0.0-rc1-final -r coreclr ᐅ dnvm uninstall 1.0.0-rc1-final -r mono ```  and then install them to the user location. flag -g installs them globally btw.  ``` ᐅ dnvm install latest -r coreclr ᐅ dnvm install latest -r mono ```  That will give you   ``` ᐅ dnvm list -detailed  Active              Version Runtime Architecture OperatingSystem Alias Location ------              ------- ------- ------------ --------------- ----- --------      *      1.0.0-rc1-final coreclr          x64          darwin default ~/.dnx/runtimes             1.0.0-rc1-final    mono                    linux/osx       ~/.dnx/runtimes ```  and everything will work as intended.
2013|It already does. The signature is `<T extends QuickPickItem>` (https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L2799) allowing you pass in any object extending quick pick item
2014|+1 I would like to have emmet also for JavaScript React (in *.jsx files)
2015|@isidorn we have a flag to control this right?
2016|This requires a lot more than just -w, especially when code is already running.
2017|Tough to know unless we have the stack of what actually is being sent. Alex any ideas what to do about this error?
2018|you are right, my bad. Thanks Jo!
2019|there is `externalConsole: true` More details https://code.visualstudio.com/docs/editor/debugging
2020|no worries, Happy Coding
2021|Ah thank you, i didn't have this flag in my launch.json
2022|Awesome, I'll take a look as soon as possible! Thanks!
2023|Above comment of @danlofquist did the trick! :+1:
2024|"Can you use `e.keyIdentifier` instead of  `e.keyCode`? I test Shift-2(=@) with us-keyboard and @ with jis-keyboard, both values are same ""U+0040"".  `keyIdentifer` seems well in Electron. I think almost users using only alphabet-key-binding, so mark-key-binding will be simple like `String.fromCharCode(parseInt(e.keyIdentifier.substring(2),16))`."
2025|Likely https://github.com/atom/atom/issues/9584 which is fixed in 0.34.5 which I plan to consume next week.
2026|Fix delivered
2027|duplicate of #160
2028|@bpasero :+1:  I like the idea: an explicit `ctrl+s` should trim everything, a background auto-save should keep doing what its doing now.
2029|@SofianHn can you help us figure out what code sits at `/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/pluginHostProcess.js:11:17461`
2030|How :)? With that kind of typo?  ᐅ dmvm uninstall 1.0.0-rc1-final -r coreclr ᐅ dmvm uninstall 1.0.0-rc1-final -r mono  However, even with corrected version it doesn't do it for me, because the re-install put it back go global location  PS: Now everything is messed up again...
2031|Note this might be related to a similar bug in full Visual Studio 2015: https://connect.microsoft.com/VisualStudio/Feedback/Details/2002769
2032|Actually, not true. When running in the extension host the handling of those errors in defined by this: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/api/browser/pluginHost.api.impl.ts#L136  The use of `onUnexpectedError` might be questionable but being aware of uncaught exception is something we want. Because of that I disagree with the change you propose (remove of the handler).
2033|Fix delivered
2034|duplicate of #133
2035|Fix delivered
2036|I can reproduce on Mac OS X 10.11.1 El Capitan.  Cheers, Trevor Sullivan Microsoft MVP: PowerShell
2037|There's now even a second extension: https://marketplace.visualstudio.com/items/DotJoshJohnson.xml
2038|duplicate of #23
2039|I can reproduce. The save is true for the opposite - after save it's still dirty.
2040|@aeschli Impressive, thank you.  Cheers, Trevor Sullivan
2041|@bpasero A snippet like below seems to be ignored wrt to FILE_SAVED & FILE_DIRTY events:  ``` workspace.openTextDocument(Uri.parse('untitled:///Users/jrieken/Desktop/file.txt')).then(doc => {         console.log(doc.uri);         console.log(doc.isDirty);          setTimeout(function() {             console.log('SAVING')             doc.save().then(value => {                  console.log(value);                 console.log(doc.isDirty);                 console.log(doc.uri);             });         }, 2000)     }); ```
2042|![screen shot 2015-11-27 at 17 02 06](https://cloud.githubusercontent.com/assets/1794099/11444961/9d622860-9528-11e5-8afe-a32dd8b3b3fa.png)
2043|Oh, and the first `true` from isDirty I got after such a change - which I believe isn't proper:  ![screen shot 2015-11-27 at 17 02 46](https://cloud.githubusercontent.com/assets/1794099/11444979/c0d3b3e0-9528-11e5-9dcd-cecc05dc7866.png)
2044|duplicate of #71. Just FYI, there are two extensions that provide XML formatting
2045|Did you try Cmd+1, Cmd+2, and Cmd+3?
2046|Check `~/.vscode/extensions/`
2047|Thanks @bae-unidev !
2048|"@jrieken yes, this is what I was referring to when I said ""by specific index"". I'm interested in something more like cycling through opened editors, so if there are 2 editors and I'm in editor 1, triggering this would move to editor 2, triggering it again would move me back to editor 1. If there are three, I'd hop from 1 -> 2 -> 3 -> 1 -> ... and so on. I work on multiple platforms, so most keys that use Cmd I typically don't use. But Cmd+1/Cmd+2 are certainly handy."
2049|"@jrieken as soon as I said ""cycle"" I realized what the search for! ""workbench.action.cycleEditor"""
2050|Must not break the API - probe on arguments length
2051|It is a .js file that is part of an ExtJS 4 project.   I cannot provide the entire file as-is.  I will try and produce a redacted version that I can share.
2052|I verified that we are using the latest version from https://github.com/Microsoft/TypeScript-TmLanguage. Installing that same grammar file also in Sublime shows there is the same bug:  VS Code on the left - Sublime 3 on the right: ![image](https://cloud.githubusercontent.com/assets/6461412/11445329/8e780c40-952b-11e5-9231-6eab8a5b668f.png)
2053|This issue was moved to Microsoft/TypeScript-TmLanguage#17
2054|Hi @MakwaWes, could you file this issue here:  https://github.com/PowerShell/PowerShellEditorServices/issues  If you have other bugs to file against the PowerShell extension for VS Code, you can file them here:  https://github.com/PowerShell/vscode-powershell/issues  Thanks!
2055|"Source file:  [MyJS.js.txt](https://github.com/Microsoft/vscode/files/45954/MyJS.js.txt)  In this specific file, I observe the issue inside the ""doStuffToAnObjectArray"" function, upon typing a comma   ![image](https://cloud.githubusercontent.com/assets/9296597/11445712/2d53b7ca-94f4-11e5-9372-2cb20fc22b80.png)  Inside the ""doWidgetStuff"" function, the parser is behaving normaly  ![image](https://cloud.githubusercontent.com/assets/9296597/11445757/8538ff9a-94f4-11e5-9bb4-17676f801a7f.png)"
2056|+1 I have seen this behavior as well. The user shouldn't be prompted to save the file if the instruction was to delete it.  Cheers, Trevor Sullivan
2057|:+1:
2058|I mean :+1: for having such an option, but :-1: for any tool that needs BOMs :)
2059|Wont fix. Since deleting the file means data loss (the changes you made in the document) we can not avoid asking you to make the decision to save or not.  Btw Sublime seems to behave the same way.
2060|@74th `keyIdentifier` is completely broken on windows & linux. I tested it today a lot (under windows) and thought I'm mis-interpreting your comment, but looks like it is a known bug in chromium.  Here is what I could find -- https://code.google.com/p/chromium/issues/detail?id=428018
2061|Thanks!  Thanks -Blake Niemyjski  On Thu, Nov 26, 2015 at 7:02 AM, Johannes Rieken notifications@github.com wrote:  > It's a duplicate of OmniSharp/omnisharp-roslyn#345 > https://github.com/OmniSharp/omnisharp-roslyn/issues/345 >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/247#issuecomment-159907196.
2062|Hi **@resir014**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
2063|**@resir014**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
2064|is this important? Do I need to fix that issue to properly use PHP on Code? I'm just using it with XAMPP and it seems to work.
2065|You will not get any red squiggly lines if you have errors in your code if you do not have the php executable set. You will still get syntax highlight and autocomplete information but if you are missing say a semicolon the editor will not tell you so; You will only notice the error when you actually run the code.  I haven't used XAMPP in quite a while but if I remember correctly XAMPP has the php binary included, probably in C:\xampp\php\php.exe (if you have it installed there). Might also be C:\xampp\bin\php\php.exe or C:\xampp\bin\php\php-5.x.x\php.exe  I'm sure you'll be able to find it and it is highly recommended that you do set the value, it will make your life a lot easier if you get syntax errors highlighted when editing your files.
2066|Thanks. Just done it.
2067|There are different events to track untitled files in the workbench: `WorkbenchEventType.UNTITLED_FILE_DIRTY` to track when a untitled file is dirty and `UNTITLED_FILE_DELETED` when an untitled file has been saved or reverted because then it turned into a normal file and the resource is disposed.  An untitled file is never dirty when created in the workbench via Cmd+N until you make changes because it should be possible to quit the workbench without prompt in that case. However, if the untitled file is created with a real path (as in this example) the untitled file is marked as dirty because it is the intent of the user to save the file at the path provided. This can be seen when you run code from the command line with a path argument that does not exist. In that case it would be weird to not show the dirty indicator.
2068|please reopen when you have more information.
2069|Hi **@isidorn**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Isidor Nikolic). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
2070|I cannot reproduce on Windows 8 so far.
2071|@neilyoung  Try this uninstall, I've the same problem when first trying @danlofquist solution. I've added `-y` option:  ``` ᐅ dnvm uninstall 1.0.0-rc1-final -r coreclr -y ᐅ dnvm uninstall 1.0.0-rc1-final -r mono -y ```  Then verify there is no dnvm runtimes:  ``` dnvm list No runtimes installed. You can run `dnvm install latest` or `dnvm upgrade` to install a runtime. ```  Then install:  ``` dnvm install latest -r coreclr Determining latest version Latest version is 1.0.0-rc1-final  Downloading dnx-coreclr-darwin-x64.1.0.0-rc1-final from https://www.nuget.org/api/v2 Download: https://www.nuget.org/api/v2/package/dnx-coreclr-darwin-x64/1.0.0-rc1-final ######################################################################## 100.0% Installing to /Users/piotrblazejewicz/.dnx/runtimes/dnx-coreclr-darwin-x64.1.0.0-rc1-final Adding /Users/piotrblazejewicz/.dnx/runtimes/dnx-coreclr-darwin-x64.1.0.0-rc1-final/bin to process PATH ```  ``` dnvm install latest -r mono Determining latest version Latest version is 1.0.0-rc1-final  Downloading dnx-mono.1.0.0-rc1-final from https://www.nuget.org/api/v2 Download: https://www.nuget.org/api/v2/package/dnx-mono/1.0.0-rc1-final ######################################################################## 100.0% Installing to /Users/piotrblazejewicz/.dnx/runtimes/dnx-mono.1.0.0-rc1-final runtime=mono Adding /Users/piotrblazejewicz/.dnx/runtimes/dnx-mono.1.0.0-rc1-final/bin to process PATH ```  **IMPORTANT** Then make sure the `default` runtime is set with `-p` option:  ``` dnvm use -r mono -p 1.0.0-rc1-final Adding /Users/piotrblazejewicz/.dnx/runtimes/dnx-mono.1.0.0-rc1-final/bin to process PATH Setting alias 'default' to 'dnx-mono.1.0.0-rc1-final' ```  Only after that I've got VSCode output:  ``` [INFO] Starting OmniSharp at '/Users/piotrblazejewicz/development/WebApplicationBasic'... [INFO] Started OmniSharp from '/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/csharp-o/bin/omnisharp' with process id 50235... [INFORMATION:OmniSharp.Startup] Omnisharp server running using stdio at location '/Users/piotrblazejewicz/development/WebApplicationBasic' on host 50227. [INFORMATION:OmniSharp.Dnx.DnxPaths] Using runtime '/Users/piotrblazejewicz/.dnx/runtimes/dnx-mono.1.0.0-rc1-final'. [INFORMATION:OmniSharp.Dnx.DnxProjectSystem] Scanning '/Users/piotrblazejewicz/development/WebApplicationBasic' for DNX projects [INFORMATION:OmniSharp.Dnx.DnxProjectSystem] Found project '/Users/piotrblazejewicz/development/WebApplicationBasic/project.json'. Process ID 50243 Listening on port 55205 [INFORMATION:OmniSharp.Dnx.DesignTimeHostManager] Running DesignTimeHost on port 55205, with PID 50243 Client accepted 127.0.0.1:55205 Client accepted 127.0.0.1:55205 [INFORMATION:OmniSharp.Dnx.DnxProjectSystem] Connected [INFORMATION:OmniSharp.MSBuild.MSBuildProjectSystem] No solution files found in '/Users/piotrblazejewicz/development/WebApplicationBasic' [INFORMATION:OmniSharp.ScriptCs.ScriptCsProjectSystem] Detecting CSX files in '/Users/piotrblazejewicz/development/WebApplicationBasic'. [INFORMATION:OmniSharp.ScriptCs.ScriptCsProjectSystem] Could not find any CSX files [INFORMATION:OmniSharp.Startup] Solution has finished loading ```  thanks!
2072|@peterblazejewicz: Thanks. Indeed, this does the job. But -y is completely unrelated, isn't it?
2073|@neilyoung  No idea. It _magically_ worked for me. For reference about the option:  ``` -y                          Assume Yes to all queries and do not prompt ```
2074|@jrieken @dbaeumer @alexandrudima What changed?
2075|"~31 MB On Nov 27, 2015 2:50 AM, ""Benjamin Pasero"" notifications@github.com wrote:  > @bzuillsmith https://github.com/bzuillsmith how large is the file on > disk? >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/724#issuecomment-160111677."
2076|Built from source (commit 9c4c52b0d38c23b62708441f564db128f7923183) minutes ago, no Omnisharp.  Since the released binary for linux does not provide Omnisharp and I can't make it work when building on my own, I think this issue should be reopened.
2077|Did you try running `scripts/npm.sh install`
2078|I test JIS-keyboard in Ubuntu and Windows. `keyIdentifier` is breken in Ubuntu and Windows like you said. I found that `;` and `:` are appeared same `keyCode` and `keyIdentifier` in Ubuntu and JIS-keyboard. There are no way to completely support JIS-keyboard in Ubuntu. In Windows and JIS-keyboard, all keys are appeared different `keyCode`. But in MacOS and JIS-keyboard, `Shift+2` and `Shift+6` are same `keyCode`. So I need mapping using `keyIdentifier` in MacOS. I’d like to request to - (1)in macos, map using `keyIdentifier` for key-binding in first. In second, using `keyCode`. - (2)add `isdarwin`, `iswindows` and `islinux` expressions for Keyboard Rules option `when`.  I’ll try to code (1).
2079|Thank you @peterblazejewicz, that worked for me as well.  I've been pulling my hair out all day trying to get this working!
2080|I'm experiencing a similar issue on OSX with `ElectronHelper`.
2081|@bzuillsmith Can you upload it as zip somewhere and send the link?
2082|Hi **@74th**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
2083|Upon revisiting this I decided to check again and this time I was able to notice that the reason why the selection seems not rounded is because it gets highlighted twice (once for the selection and the other for the feature where the same text if found anywhere in the file is also highlighted) and then it feels like it's by design. The wrong one.... ![screenshot 42](https://cloud.githubusercontent.com/assets/10473142/11450581/58198b2e-95cb-11e5-9059-491810796732.png) The one where it gets fixed after I extend my selection.... ![screenshot 43](https://cloud.githubusercontent.com/assets/10473142/11450582/5e449390-95cb-11e5-85e1-e0a97b9ed477.png)
2084|I'm using Windows 10 Home November Update. No custom font, no display scaling and the font size is also set to default.
2085|**@74th**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
2086|"I think -p is the key. I used that ""use"" command before, but never with -p. And OmniSharp complained about having not seen a ""default"" entry. So the alias ""default"" was never set. Instead an asterisk was shown in the first column of ""dnvm list"", which let me assume to have set the default runtime properly."
2087|Indeed. This is a requirement for people like me, switching from laptop to desktop very often: entire workflow is on an external ssd drive, not relying on local machine storage. As with other portable apps, basically all data pertaining to the app (code, config, any extension)should reside in a single folder, and use relative folders so that that folder can be moved around and app starts up and operate the same. Thks.
2088|Many editors all do like this, such as **Komodo Edit**.
2089|Not fully supported yet, sorry.
2090|:+1: I would really like this feature.
2091|Does vscode support this feature? or I made some mistake?
2092|VS Code currently does not support this feature and I've labeled it with the 'feature request label'.  Am 28.11.2015 um 15:59 schrieb NeoXiong <notifications@github.com<mailto:notifications@github.com>>:  Does vscode support this feature? or I made some mistake?  ##   Reply to this email directly or view it on GitHubhttps://github.com/Microsoft/vscode/issues/767#issuecomment-160307227.
2093|Same here Code 0.10.2 and osx 10.11.1 (El Capitan)
2094|$class->sayHello();
2095|Same issue here. Glad to see it's none of my local settings.
2096|@bpasero Sent it to you a private email because the file is not owned by me.
2097|"I also need to [override arrow-key navigation, backspace and delete key bindings](https://github.com/jedmao/vscode-tabsanity/blob/69a1d35d2350d23c6077a5a77661e476ffc8e615/package.json#L16-L52) for my plugin, [`TabSanity`](https://github.com/jedmao/vscode-tabsanity/tree/69a1d35d2350d23c6077a5a77661e476ffc8e615), which is a port of [`TabSanity`](https://visualstudiogallery.msdn.microsoft.com/ac4d4d6b-b017-4a42-8f72-55f0ffe850d7) from the full-blown Visual Studio.  Additionally, it would be ideal if we could ""override"" core commands, but still have the ability to execute the original commands manually for fallback cases."
2098|What is missing for php 7 support? You can configure the linter you want to use. I assume php 7 provides the -l option?  Is it coloring?
2099|+1 Gitter's very easy to set up too
2100|Another example is `executeDocumentSymbolProvider` which returns an object similar to a `SymbolInformation`.
