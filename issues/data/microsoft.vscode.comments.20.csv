1901|Here is the documentation for how to do integrate a debugger into VS Code:  - https://code.visualstudio.com/docs/extensions/example-debuggers - https://code.visualstudio.com/docs/extensionAPI/api-debugging  XDebug would be one option: http://xdebug.org/
1902|"When i press ""record"" button in console, it freezes editor. Cant edit file or open command input; Can hover on top bad or stop recording, but that wont fix it + unable to close editor normal way, have to kill it in processes.  If you want i can record whole problem and put it as private video on YT"
1903|Thanks I think we got it and will release soon.
1904|ok, let me know when you release it :+1:
1905|@jrieken Yes i Thought this feature should be available for newbies like me
1906|The TypeScript Sublime plugin renders this correctly.  Should we update the textmate bundle with the one from Microsoft/TypeScript-TmLanguage.
1907|@bpasero The reject works as expected but there is an known issue with unhandled promise rejection. Our handler sits here: https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/node/pluginHostProcess.ts#L33 but there is a well known issue with that. Since project rejection and handling can happen async (on different event loop ticks) a promise might be handled some time in the future. Since the node events seem to lack the actual promise causing this we can't have better logging.
1908|@sashaburchuk which version of TS are you using. You can point VSCode to use the latest TS server by using the typescript.tsdk setting. See https://code.visualstudio.com/updates/v0_8_0 for details regarding the setting
1909|+1 Same problem, had to disable builtin js validation.
1910|Ah. Reading the bug you linked, I wonder if VSCode could maybe require `original-fs` in the workspace tree code instead of `fs` so that `.asar` files aren't treated special? Obviously I have no experience with the actual code so it might not be manageable, but just putting it out there...
1911|ok. understood. moving to OmniSharp cos they drive the C# features
1912|This issue was moved to OmniSharp/omnisharp-roslyn#346
1913|_From @serkanyersen on November 23, 2015 22:23_  Same here.
1914|This is unrelated to vscode-tslint. Moving to vscode.
1915|a lot of people want it see https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7752606-php-intellisense
1916|Maybe, but it's ugly to force everyone to remember to not use fs module.
1917|"I can actually work around this issue by defining the following key binding.  ``` json [     { ""key"": ""shift+cmd+/"", ""command"": ""editor.action.commentLine"",                                ""when"": ""editorTextFocus""} ] ```"
1918|Thanks for looking into this Isidor!  Next time I'll check the docs to make sure I didn't do things wrong :)
1919|That would be really cool, but it sort of implies that extensions need to be able to provide custom UI :)
1920|@daviwil I guess that providing UI is not possibile at the moment?
1921|As far as I know it isn't possible yet
1922|Excellent!  That's one important piece of the puzzle.
1923|Bonus points if the Markdown previewer is invoked automatically if the README has a .md extension :)
1924|As a first step towards a better experience, I have pushed a widget that can help quite a lot when defining keybindings on non US standard keyboard layouts.  The widget activates when editing the `keybindings.json` file and translates what is typed into the `key` representation that VSCode understands.  ![image](https://cloud.githubusercontent.com/assets/5047891/11427563/0d1e4fd2-9464-11e5-8f68-6b7d885c5198.png)  ![image](https://cloud.githubusercontent.com/assets/5047891/11427565/10ebb9b0-9464-11e5-87a6-5f71227e410c.png)
1925|@jpoon We cannot add colon as a valid keybinding for now. Please see #713 where the problem is explained. I also suggest #713 as the tracking issue instead of having an issue for each individual desired keybinding character.
1926|@Machtan Please see #713 where the problem is explained. The UI renders `Cmd+[` when in fact the keybinding for decrease indent is `Cmd+VK_OEM_4`. I am not sure where exactly `VK_OEM_4` sits in Danish keyboard, nor what its label is (you can probably find it by trying all the non apha numeric keys), but this is currently a limitation in the platform we're building on (electron / chromium). I'd also like to invite you, if you figure it out, to let us know what would be good default keybindings for the Danish keyboard layout and we can work from there to improve the experience for others (creating an extension...).
1927|@74th I didn't get yet to try out the keyboard combos you mention with the JIS keyboard on MacOSX (need help from some colleagues to do that), but please check out #713 in the meantime for an explanation of what's going on.
1928|"@cebor @mafredri   On my Swiss German keyboard (laptop), the `/` appears on top of `7` so I use:  ``` json {  ""key"": ""ctrl+7"", ""command"": ""editor.action.commentLine"", ""when"": ""editorTextFocus""   } ```  Please see #713 for a detailed explanation and I'd like to invite you to help us figure out together good defaults for non-US standard keyboard layouts... possibly in the form of a VSCode extension."
1929|@guillermooo @jpoon Just pushed to master a widget that activates when editing `keybinding.json` files that would be great for debugging.  See #713 also for an explanation of why VSCode can't dispatch on `<` at this time (It just sees the key codes when dispatching is happening and cannot get the underlying OS keyboard layout).
1930|Thanks @alexandrudima. I will take a look asap.
1931|I'm gonna _merge_ this into #68.
1932|Then we gotta fix the paths.
1933|"To people hitting this issue: We might not be able to release a new version until next week. **But there is a workaround**:   If you can start Code eventually: - select File | Open Recent | Clear Items - restart and things should be fast again  If you cannot start Code: - close Code - locate storage.json (see https://code.visualstudio.com/Docs/supporting/FAQ#_how-do-i-opt-out-of-vs-code-autoupdates for how to find it) - delete the file or rename it - start Code  Sorry for the trouble :heart:"
1934|"To people hitting this issue: We might not be able to release a new version until next week. **But there is a workaround**:   If you can start Code eventually: - select File | Open Recent | Clear Items - restart and things should be fast again  If you cannot start Code: - close Code - locate storage.json (see https://code.visualstudio.com/Docs/supporting/FAQ#_how-do-i-opt-out-of-vs-code-autoupdates for how to find it) - delete the file or rename it - start Code  Sorry for the trouble :heart:"
1935|"To people hitting this issue: We might not be able to release a new version until next week. **But there is a workaround**:   If you can start Code eventually: - select File | Open Recent | Clear Items - restart and things should be fast again  If you cannot start Code: - close Code - locate storage.json (see https://code.visualstudio.com/Docs/supporting/FAQ#_how-do-i-opt-out-of-vs-code-autoupdates for how to find it) - delete the file or rename it - start Code  Sorry for the trouble :heart:"
1936|"To people hitting this issue: We might not be able to release a new version until next week. **But there is a workaround**:   If you can start Code eventually: - select File | Open Recent | Clear Items - restart and things should be fast again  If you cannot start Code: - close Code - locate storage.json (see https://code.visualstudio.com/Docs/supporting/FAQ#_how-do-i-opt-out-of-vs-code-autoupdates for how to find it) - delete the file or rename it - start Code  Sorry for the trouble :heart:"
1937|Hi **@joaomoreno**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Joao Moreno). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
1938|@jrieken in the example code I gave, we have a valid use of our API and the console ends up to report unknown errors:  ![image](https://cloud.githubusercontent.com/assets/900690/11428784/ba32da52-946f-11e5-8917-9eec0261d925.png)  I would think this can happen from any promise that carries an error from the main side to the PH side. If we know this can happen and cannot fix it, we should filter these messages.
1939|Closing as duplicate of #160.
1940|Hi **@joaomoreno**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Joao Moreno). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
1941|Dropping this.
1942|Hi **@joaomoreno**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Joao Moreno). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
1943|I see - that makes sense.    It would be nice to add documentation of the rejected promise behaviour across the various providers since there are differences in how to (or whether it is even allowed to) report errors back to users.
1944|Same problem. It sucks  INFORMATION:OmniSharp.Dnx.DnxProjectSystem] No default runtime found The specified runtime path 'default' does not exist. Searched locations /Users/decades/.dnx/runtimes/dnx-mono.1.0.0-rc1-final /Users/decades/.dnx/runtimes/dnx-mono.1.0.0-rc1-final /Users/decades/.dnx/packages/dnx-mono.1.0.0-rc1-final /Users/decades/.k/runtimes/dnx-mono.default /Users/decades/.k/runtimes/kre-mono.default /Users/decades/.k/packages/KRE-Mono.default /Users/decades/.kre/runtimes/dnx-mono.default /Users/decades/.kre/runtimes/kre-mono.default /Users/decades/.kre/packages/KRE-Mono.default. Visit https://github.com/aspnet/Home for an installation guide.
1945|Check cwensley's solution - no need to be blocked when there is a simple workaround until this is fixed properly.  Basically had to delete the runtimes directory in .dnx then   ln -s /usr/local/lib/dnx/runtimes ~/.dnx/  or something pretty close to that.
1946|Related https://github.com/Microsoft/vscode/issues/670
1947|@bpasero @egamma I think we can close this now. I created such an extension and published its 0.0.2 version a few hours ago. Syntax highlighting and code snippets have been supported. @Firehawke you can try it out.
1948|@donmurta: Exactly, found it out right a minute ago.
1949|+1
1950|:clap: thank you
1951|closing, this is indeed a tslint issue, reopening the original issue filed against vscode-tslint and closing this one.
1952|What I've been doing as a temp fix is symlinking a file from my `~/.dnx/runtimes/dnx-whatever-1.0.0-final` to the `/usr/local/lib/dnx/runtimes/dnx-whatever-1.0.0-final` file. This is a temporary workaround but it works. It probably makes more sense to symlink the entire runtime directory, not just a specific version... I'm not deep enough yet to have realized that though :)  My osx `echo $DNX_HOME` gives me: `/Users/phillijw/.dnx:/usr/local/lib/dnx`  It is common to add multiple paths to a single environment variable via `export PATH=$PATH:/path/to/my/stuff`  When looking at the following code, you can see that this might cause a problem because it's looking for a path, not a path array: https://github.com/OmniSharp/omnisharp-roslyn/blob/d3d8fa360cd70c7806ae52e0f318f5e76791abd0/src/OmniSharp.Dnx/DnxPaths.cs#L133  That gets called from here: https://github.com/OmniSharp/omnisharp-roslyn/blob/d3d8fa360cd70c7806ae52e0f318f5e76791abd0/src/OmniSharp.Dnx/DnxPaths.cs#L51  That calls this: https://github.com/OmniSharp/omnisharp-roslyn/blob/d3d8fa360cd70c7806ae52e0f318f5e76791abd0/src/OmniSharp.Dnx/DnxPaths.cs#L51  etc... nowhere in there is it tokenizing the $DNX_HOME value which may be part of the problem in my case. I've seen that others don't even have the /usr/local/lib/dnx folder in their $DNX_HOME at all. I honestly don't remember if I added mine by hand or if something put it there for me.
1953|"When I use the mono c# REPL by running the `csharp` command:  ``` csharp> Environment.GetEnvironmentVariable(""DNX_HOME"") null csharp> ```"
1954|Thank you, by the way. Work blocked me from replying until now, but this is definitely a good start and it looks like it'll be better than using Notepad++. Now I just need to work out a way to quick compile this through Sphinx+RTD, but that's a subject for a different thread.
1955|I have the same problem having 99% cpu editing an js file. Electron Helper on top of consuming process on my MacOS Yosemite. Anyway to avoid that? Any kind of useful info that I could provide here?  BTW, VSCode never crashes here.
1956|"I think windows explorer open code with  ``` code ""C:\"" ```  which can produce bug but  ``` code ""C:\\"" ```  is not."
1957|Hi **@f111fei**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
1958|Hi **@Tyriar**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
1959|good idea！
1960|@Firehawke tracked in https://github.com/lextm/vscode-restructuredtext/issues/3
1961|Hi **@bae-unidev**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
1962|**Describe it again:** When I want to type `<?php`, auto completion dosen't suggest `php` but other words of `php_` prefix, e.g. `php_ini_loaded_file`, so I had to press `Esc` key to keep going.
1963|If the debug console cannot be docked horizontally, is it possible to hide it / keep it minimized?
1964|FYI : I'm become a big fan of this after computer suddenly hangup/lost power/cats hit shutdown button/etc and everything get restore after reopen.  That's why I'm not uninstall Sublime yet tho.
1965|Same problem here. Provided solution above also worked for me.
1966|I have encountered the same problem. vscode will crash when open compressed js. vscode trying code Highlight of large compressed js?  Version 0.10.2 for Mac （OSX EI Capitan）  javascript file：https://raw.githubusercontent.com/DmitryBaranovskiy/raphael/master/raphael-min.js  My English is not good.
1967|duplicate of #139, which is fixed by now
1968|Not at the moment, will be possible in the future.
1969|@Firehawke regarding 'Now I just need to work out a way to quick compile this through Sphinx+RTD'. I suggest that you look into the VS Code Task support https://code.visualstudio.com/docs/editor/tasks
1970|Thank you
1971|It's not possible with the version of nodejs we are using today. Please read the comment and the links I have pointed to.
1972|And since this only happens when the event loop is released between rejection and handling of it I think its the better compromise to see some potential false positive here and there then not seeing any unhandled rejection.
1973|Alright, managed to figure it out. The `typings` property in my `package.json` was not correct. Now everything is working!
1974|I agree
1975|Currently not possible, since we do not expose token information in the extension host (something we have lost when transitioning to textmate grammars). `excludeTokens` is no longer supported.
1976|additional: The image is HTTP link not HTTPS.
1977|Not yet. The idea is to add scopes to `DocumentSelector`s such that you can express _I can provide suggestions in go files  when the caret is not in a comment_   ``` {    language: 'go',    scope: '!comment! } ```  Still, this requires us to expose scopes first ;-)
1978|Will investigate
1979|I will make a different PR for this
1980|Good idea. Need to explore whether we can just take over the tab key in .tsx files as we do in the other file types.  See also: http://wesbos.com/emmet-react-jsx-sublime/
1981|Yes, not possible at the moment. Please see this doc https://code.visualstudio.com/docs/extensions/our-approach it describes our extensibility approach.
1982|This issue was moved to Microsoft/vscode-tslint#11
1983|+1  This is driving me mental! Completely random too.
1984|Hi **@jrieken**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Johannes Rieken). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
1985|@f111fei I was able to reproduce the behaviour you are describing and trying to fix. Can you please add more steps that allow me to reproduce the endless loop?
1986|I can reproduce with a simple sample but after a short while (2-3 seconds) it recovers. I guess you guys are dealing with large projects?
1987|"@jrieken  Anyway, Let plugin host process throw an uncaughtException.  For example Modify  vs/workbench/services/thread/electron-browser/threadService.ts  line 146 let initPayload = ""{}""; so plugin host process will initialize failed and throw an uncaughtException."
1988|This has been mentioned in https://github.com/Microsoft/vscode/issues/375, would be great to see it happen in .svg and .html files.
1989|@seixasfelipe Will try to raise awareness and possibly contribute a PR to atom/node-oniguruma. The problem occurs on mac or linux when there is a long line with multi-byte UTF8 characters.
1990|@isidorn I cannot reproduce on windows
1991|"The editor at http://www.typescriptlang.org/Playground works good in Chrome (Version 46.0.2490.86 (64-bit)) on the 25"" monitor.  I get good performance in VSCode in a smaller window on the 24"" monitor, even with 3 editors side-by-side. Interestingly enough, on the 24"" monitor, I get bad performance in a maximized window, but good performance in full-screen (even with 3 editors side-by-side)."
1992|Yes I see it on the mac all the time. I am in the office from Monday so I can show you I am also on el capitan
1993|Duplicate of #637.
1994|Merging with #637.
1995|"You mean 15"" right? It's a shot in the dark, but it sounds like bug/performance problem in Unity. If your window is maximized, then Unity doesn't have to render window borders etc."
1996|@bzuillsmith how large is the file on disk?
1997|"Nope, I mean 24"" :)  I think it's an issue with (large) maximized windows. If I resize a non-maximized window to be almost as large as a maximized one, the editor's performance is still good."
1998|Fix delivered
1999|@bpasero so shouldn't the editor have one more option to define that?
2000|Hi **@krizzdewizz**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
