15401|Thanks. I tried finding a related issue before opening this one but I missed that one I guess.
15402|This issue was moved to Microsoft/TypeScript-TmLanguage#138
15403|You can add an extension to a colorizer by following these instructions: https://code.visualstudio.com/docs/customization/colorizer#_common-questions
15404|Reproduces in latest  ![image](https://cloud.githubusercontent.com/assets/2193314/14063768/f1b787be-f394-11e5-9e7a-37042f327781.png)
15405|No problems, I do the same sometimes :smiley:
15406|Thx, works perfect in 0.10.11!
15407|@Daynil thanks added this to the [release notes](https://github.com/Microsoft/vscode-docs/blob/vnext/release-notes/latest.md#languages---javascript) about javascript:
15408|@mholt glad this helps // CC @jrieken
15409|After posting this feature request, I discovered [the UserVoice for the project](https://visualstudio.uservoice.com/forums/293070-visual-studio-code). (It's not linked in the [guidelines for contributing](https://github.com/Microsoft/vscode/blob/master/CONTRIBUTING.md) so I didn't know about it.)  I realised that feature requests shouldn't go here - sorry, all. I also realised that [jump-lists are supposedly already implemented](https://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/8844778-recent-jump-list-for-files-and-folder) and the UserVoice request for them is marked complete so what I am seeing is clearly a bug.
15410|Please fix this! Incidentally, overtype-mode is an open issue in Atom, too: https://github.com/atom/atom/issues/3023  Reproduced in:  ``` VSCode Version: 0.10.11 OS Version: Microsoft Windows 10 ```
15411|Hi **@mquandalle**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
15412|**@mquandalle**, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR. <br />Thanks, MSBOT;
15413|So, it took me a while, but I've gone with the extension approach for now.  I've made some progress - and can access the current configuration, as well as the contents of both the settings and default settings file. I can also access an object representation of current in-use settings here using `workspace.getConfiguration()`.  I'm hoping someone can advise the best way to access the following (if possible) from the extension: - Validator / Schema for configuration (to know what format each is expected in). - Separate objects for default settings, user settings, workspace settings (I can work this out from the files if need be). - Settings URIs or some other way to know if the JSON file I have open is a settings file (I can assume this based on URI, but wondered if there was a better way).
15414|@felixfbecker I forgot to reply to your comment about the GUI not only applying to settings - I agree, but I think I'll start with settings for now. We can then see if it would make sense to expand capabilities, or to fork to another project for more _generalised_ JSON GUI.
15415|@mrmckeb You can tell whether it's the setting file by validating it against its schema, don't you? I mean this seems like the most reliable way to do it.
15416|I would check if the path ends with `.vscode/settings.json` or wherever user settings are
15417|@eyalsk, that definitely makes sense - but how do I access the schema from within the extension (without anything hacky)? I didn't see a way when I was reading the docs.  @felixfbecker Thanks, that's what I was thinking too. I was hoping there was a way that doesn't mean coupling to a URI. I'll see if any other ideas come back before progressing.
15418|I can't Install C#...with ext install C# . nothing happened.
15419|@mrmckeb Well, I don't _really_ know but I guess that they actually access the schema when they display the intellisense although I'm not sure whether it's available to extensions.  I guess that the easiest way (and _maybe_ more practical) to go for now is to follow the advice that @felixfbecker gave you, just use the URI.
15420|This is an extremely important feature which shall be implemented as soon as possible.  I'd be careful about security concerns, though: On the first launch of a specific project, VS Code should ask if the user wants to enable automatic watching, and warn for potential security issues.
15421|It began happening while I was working on the C# extension. I backed out all my changes, git clean'd, reinstalled VS Code, and restarted my computer and I am still seeing it. When I pause in the debugger I see it stop here:  ![image](https://cloud.githubusercontent.com/assets/6598594/14083306/c0304966-f4c9-11e5-9936-5d1370e0bca3.png)
15422|Examples to test: (note that they all render correctly on GitHub)  _italics_**bold**  **bold**_italics_**bold**_italics_  **bold**_italics_  ***_bold**_*
15423|I downloaded the insiders build and am not seeing the same issue from there. I think somehow my install of the public VS Code has been put in a bad state.
15424|"Another one that seems related (strings in function calls):  ``` c++ void main(O obj) {     LOG_INFO(""not hilighted as string"");     LOG_INFO(obj << "", even worse; "" << obj.x << "" check this out."");     // everything from this point on is interpeted as a string literal...     O x;     std::unique_ptr<O> o(new O);     // sadness. } ```  Shown as:  ![image](https://cloud.githubusercontent.com/assets/554424/14084492/f6a8db4c-f4e8-11e5-837b-b97dbf939e7c.png)"
15425|![image](https://cloud.githubusercontent.com/assets/2193314/14084502/ddeef726-f4cf-11e5-897d-104baa080a3b.png)
15426|Using _ for italics works fine: _italics_**bold** **bold**_italics_**bold**_italics_ **bold**_italics_ **_bold_**
15427|@yankun007 I believe it's quite large so it sometimes takes 30-60 seconds to download. Are you sure you waited long enough?
15428|@bpasero is there a simple way to increase the timeout on your side?
15429|I don't think it's a matter of the timeout. Something is hung.
15430|It looks like the specific issue is that the current markdown parser does not consider adjacent `*` styles. See how the breakage first occurs  in `***` styles, treating `**bold***...` as ``**bold**\*...`  The last one is the exception to this, it would seem as though `**` takes precedence over `***` for some reason.
15431|@chuckries does the launch config have a 'preLaunchTask'? If yes, could you try whether disabling it makes a difference?
15432|Thanks
15433|Well we open any Nth window (for N > 1) in the default size, what would you expect otherwise?
15434|@nojvek you can always edit on the right hand side when comparing outgoing changes in git!
15435|(this feature request is about being able to edit either the left hand or the right hand side when comparing 2 files)
15436|Translates to: Lookup functions are only valid for JS  This is not specific enough to identify the issue, if you or someone else could description the issue in English that would be best.
15437|Closing for https://github.com/Microsoft/vscode/issues/3062
15438|@tomi can you attach screenshots how this behaves? does it behave like that in other apps too? you seem to use the native file dialog of Mac OS X and not something VS Code specific?
15439|Isn't this invalid JS as `new` is not a constructor?
15440|This appears to be fixed in master :fireworks:   ![image](https://cloud.githubusercontent.com/assets/2193314/14084942/00cf2b7e-f4d2-11e5-9fe0-d742f6313f2c.png)
15441|"I can reproduce, to clarify ""cursor"" is talking about the text cursor, not mouse cursor."
15442|@JonathanMEdwards :+1: thanks!  Hope this makes its way in to vscode, have you submitted a PR?
15443|If the first argument of `Proxy` is a constructor, it returns a constructor.  Try to run this code in Edge/Chrome/Firefox, they will log `fn`:  ``` js new new Proxy(function fn() {     console.log(this.constructor.name); }, {}); ```
15444|well, i more expect size i want, cause i have to resize the tiny window every time i open it. just save the last size and use it always until any window get resized.
15445|Does not repro in 0.10.12-alpha, looks like it's fixed.
15446|"Looks like a command is available to do this: `workbench.action.tasks.terminate` (F1 -> type ""term""). It's not very discoverable though, being one of the keybindings with no default binding.  Let's track a UI button to terminate the task in this issue, and a default keybinding in https://github.com/Microsoft/vscode/issues/214"
15447|"The command `workbench.action.tasks.terminate` (F1 -> type ""term"") exists for this already. Not sure whether a discussion has been has on whether it should be a default keybinding or not."
15448|Related: https://github.com/Microsoft/vscode/issues/396
15449|@bpasero not sure who the owner for this should be, reassign if necessary.
15450|I'm reading this as: if the file is currently open with an custom language mode active, the git changes view should use the custom language mode.  /cc @aeschli
15451|This is a nicer way of doing it and is coming in the March release https://github.com/Microsoft/vscode/issues/3612  You can see this in action in the insiders build http://code.visualstudio.com/Download
15452|That's exactly what I meant, @Tyriar. Currently the new version in the changes view is colorized according to the custom language, but the old version is not.
15453|Cool, thanks. Looking forward to it.
15454|Duplicate of https://github.com/Microsoft/vscode/issues/3612  More convenient persisting of language modes are coming in the March release, available currently in the insiders build code.visualstudio.com/Download  As for the indentation, I think this is as designed. Open a new issue if you want to look in to that. I recommend the [editorconfig extension on the marketplace](https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig) for handling indentation settings across file types for you.
15455|@eladts by old version do you mean an older version of vscode? So the latest version is working as expected/desired?
15456|This issue was moved to Microsoft/TypeScript-TmLanguage#139
15457|This issue was moved to hellopao/view-in-browser#1
15458|@Tyriar, by old version I mean the checked in version of the file when looking at the changes view. This view is colorized according to the default language for the file, ignoring the custom mode. The current file is colorized correctly. I attached below a screenshot showing the issue. This issue does not exist when comparing two different files both are colorized according to the selected languages, if any. I only tested it in 0.10.11, I haven't used any other version of VS Code.  ![image](https://cloud.githubusercontent.com/assets/6475871/14088871/dd50017c-f4ff-11e5-89d4-6b283201512c.png)
15459|This issue was moved to Microsoft/TypeScript-TmLanguage#140
15460|@eladts got it, updated the labels to reflect it's a bug. They definitely shouldn't be opening with different colorizers. Thanks for the report!
15461|This issue was moved to Microsoft/vscode-node-debug#58
15462|@stephenmartindale looks like the uservoice request was closed in error.
15463|"Duplicate of https://github.com/Microsoft/vscode/issues/4696  You can go back to the English version by switching to `en-us` via the command palette's ""Configure locale""."
15464|@mysticatea ran into this issue too:  ![c4e20786-f480-11e5-852c-4a46e97ff853](https://cloud.githubusercontent.com/assets/2193314/14088414/46e01dd2-f4e4-11e5-9b2e-1192b3748db3.gif)
15465|This issue was moved to Microsoft/vscode-docs#249
15466|Duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/11
15467|FYI @aeschli
15468|Code is using the schemas from scheamstore.org and http://json.schemastore.org/package defines repository to be an object.
15469|To rephrase: The dialog is not modal on Ubuntu like on Windows. Reproduced.
15470|I cannot reproduce this in Ubuntu 15.10
15471|According to https://en.wikipedia.org/wiki/List_of_Linux_Mint_releases, Linux Mint 17 is based on Ubuntu 14.04 LTS. Not sure if that makes a differences (or if the issue is specific to Mint)  Also, I should mention I am using the MATE edition in VirtualBox.
15472|I wouldn't think it's to do with the OS. Is it 100% reproducible?
15473|Does it happen after restarting and/or reinstalling vscode?
15474|"Sorry for my delayed responses.  @felixfbecker  - You bring up excellent points.  I chose `<h1>` size headings at first, because it was top level information.  However, `<h2>`  would probably be more appropriate since these settings are actually one level into a a JSON tree (also before the JSON begins, there is a comment, and that one should be an `<h1>`). - The checkbox may be simpler, but it could be difficult to make this agnostic to all settings.  The idea is I want to make this completely sustainable as settings evolve.  We will definitely keep this in mind. - The reason why I left the editor side-by-side is to help users see what the setting actually looks like.  It serves as a learning experience for those who may want to transition to JSON settings, which also affords users the ability to share their settings ""recipes"" with other users or commit it as part of a repo. - We would probably remove the setting if they changed back to the default, otherwise it could turn into a junk drawer very fast.  @pflannery Thank you for the feedback!  Search is definitely something we would have if we implement this.  At a minimum we would have the standard <kbd>Ctrl</kbd> + <kbd>F</kbd> find used in editors that searches text.  Would that be sufficient to you, even if it didn't filter out other settings?"
15475|Restarting VS Code and restarting the machine don't seem to fix it. Downloading a new copy and running that instance does not repro. I'm not sure the steps to reproduce since I've been using that instance for a while.
15476|@vsccarl looks like the older default theme folder is still in the extensions folder.  Have a look for `{App-Install-Path}/resources/app/extensions/theme-colorful-defaults`.  If it is in there then move the `theme-colorful-defaults` folder out and check to see if the duplicates are gone.
15477|Upstream issue: - https://github.com/atom/electron/issues/2566 - https://code.google.com/p/chromium/issues/detail?id=286441
15478|this translation is almost right. I guess “查找函数”  means “go to definition”？Could you give more details ，such as operation steps or shortcuts @chwentao？
15479|If it's about Go to Definition (<kbd>f12</kbd>) not working in another language, which language(s) in particular would be good.
15480|![qq 20160329093605](https://cloud.githubusercontent.com/assets/13378254/14095325/aec8b9e2-f591-11e5-9c19-1a4a06338a66.png)  go to symbol and f12  function, only work in js language.
15481|"I may be wrong, but I think this is actually a bug with [TypeScript](https://github.com/Microsoft/TypeScript/). I saved your example into both a `.js` and a `.ts` file and ran the following:  ![Output](http://i.imgur.com/WjHaT4t.png)  As you can see both `node` and `tsc (typescript)` generate expected errors, but when typescript is parsing it as javascript it ignores the error. The output of `tsc` is as follows:  ``` var a = ""abc"".replace(new RegExp(""abc"", ""g"")); ```  Since VSCode's diagnostics for JS are based on the TypeScript Server I feel that the EcmaScript5 mode of TypeScript doesn't see this as a problem because it just compiles the trailing parameter away.  There's an open Issue in the typescript project for TS to support trailing parameter lists [Microsoft/TypeScript#7279](https://github.com/Microsoft/TypeScript/issues/7279)"
15482|"@bpasero Correct me if I'm wrong, but isn't this already covered by the markdown styles setting?  **Styles.css**  ``` body {     /* Default Font, should inherit all the way down */     font-family: ""Ume P Mincho"";      /* Other Styles: */     background-color: #efefff; } ```  **settings.json**  ``` {     ""markdown.styles"": [         ""Styles.css""     ] } ```  Result:  ![Resulting Markdown Preview](http://i.imgur.com/0omOU3w.png)  Do we really need a setting to inject a default font?"
15483|@Reanmachine good point, however enabling this setting for markdown (markdown.styles) disables any other style being used for markdown preview.   @zcyzcy88 fyi this is a workaround for the problem, you could actually create a CSS file that contains the font style.
15484|@regs01 so you would expect the second window to open with the size of the window that is already open?
15485|#241
15486|@mquandalle I would just suggest to make the side bar size to its minimal width. Since we never show horizontal scrollbars, every size is good enough to show the contents within. Minimal width is defined in https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/browser/layout.ts#L20
15487|@weinand we do this already on other platforms: to distinguish opened files from opened folders. The motivation for the change came from https://github.com/Microsoft/vscode/issues/4167  One issue I do see is that you now have duplicates in the list, so I have to take care of the fact that previously we had files and folders in the list below the separator and now files below and folders above.   See for example how it looks for me now:  ![image](https://cloud.githubusercontent.com/assets/900690/14098786/a10c4f56-f57f-11e5-9aff-270b89553087.png)
15488|Hi **@Reanmachine**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
15489|Well if we support overriding the default styles piecemeal like suggested wouldn't we end up with settings for many things? Here's a list I can think of off the top of my head: - font-family - font-size - line-spacing - background-color - ... etc  This non-exhaustive list would just start cluttering the configuration, perhaps the default stylesheet should be exposed so minimal tweaking can occur? Perhaps this could be solved with a command / extension to dump the default stylesheet into `.vscode/markdown.css` and add it to the styles? Then anyone can make their minimal tweaks without losing all the default styling?
15490|In the latest  [insiders build](https://code.visualstudio.com/download?insiders=true) you can associate file extensions to languages and the association is persisted, pls see: https://code.visualstudio.com/download?insiders=true
15491|@egamma added a PR to `schemastore` in order to fix this https://github.com/SchemaStore/schemastore/pull/129
15492|@aeschli until the PR is accepted, could we use your schema override mechanism to fix this?
15493|In the latest  [insiders build](https://code.visualstudio.com/download?insiders=true) you can associate file extensions to languages and the association is persisted, pls see: https://code.visualstudio.com/download?insiders=true.   Could you try to associate the file types above with the `html` or `php` language to get emmet support?
15494|This issue was moved to OmniSharp/omnisharp-vscode#133
15495|This issue was moved to OmniSharp/omnisharp-vscode#134
15496|quick verification only, the feature was on the test plan.
15497|"I just tried this with my Win10 machine having a second screen connected and changing it to ""Second screen only"". Starting VS Code shows up on the second screen just fine. Is there any chance that maybe you had VS Code running already and then connected the second screen or changed the projection?"
15498|verified - but I would have expected that the scripts are also detected as tasks targets.  I've filed enhancement request #4732 and marked this issue as verified.
15499|I'd reckon that the word def has an issue
15500|You can only edit a `TextDocument` with an editor and its `edit`-method. Today there is no `onWillSaveTextDocument` event, so you could use the [`visibleTextEditors`](https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L2908) or `onDidChangeActiveTextEditor`
