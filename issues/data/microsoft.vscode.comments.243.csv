24201|True. @isidorn you can see how this used to work in https://github.com/Microsoft/vscode/blob/1.2.0/src/vs/workbench/parts/files/browser/views/workingFilesViewer.ts#L349
24202|No there is always just one main process. I think the real issue here is that you are not able to start an instance as admin and not as admin. I wonder if we should just allow to open 2 instances if one is admin and one is not and they just run at the same time side by side. This would however require 2 distinct data directories and extension directories to not cause trouble.
24203|See also: https://github.com/Microsoft/vscode/issues/6560
24204|@isidorn I pushed a change to include more details from the model change event: - group: is always present - editor: is optional and only present if the change is about an editor - structural: indicates if the change is structural or not  You can have non-structural events for only groups (e.g. rename of a group, set active) and you can have non-structural events for editors (e.g. set active).  Btw I am now also emitting a model change event when the input gets dirty (I was not doing so before), so I believe you should be OK even for dirty state.  Let me know how it goes 👍
24205|Awesomeeeeee
24206|@basarat have you considered using something like https://github.com/lerna/lerna to help manage the mono-repo approach (single repo, multiple npm packages) ? Do you think there will be other goodies in VSCode that make sense to extract as separate npm packages?
24207|#3192
24208|there is the editorconfig extension that should do that: https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig
24209|@bpasero I think on ENTER is also broken just similar to double click, hope you gonna fix this too. I would wait until your fix. Thanks.
24210|@bpasero if I manage to reproduce I'll ping this.
24211|@bpasero As discussed, supporting now `{label: string; description: string; }`. I wonder if we should also (or even only) support just a title string?
24212|That is very interesting... It seems to crash already when loading the extension. Do you see `C#` in the little language indicator at the bottom (that makes sure the static part of the extension gets loaded)? Also can you check if there a the `Restart OmniSharp` command in the F1 palette, iff so restart without having a file open and just run the command.
24213|"Thanks @weinand, I have verified as you stated.  It does show ""inlined content from source map"" in the header.  I was able to locate the source map and verified that the ""app.js.map"" was specified in the node source on the last line.  ```  john@HomeOffice /media/john/ssd_storage/dev/meteor/collections $ meteor debug [[[[[ /media/john/ssd_storage/dev/meteor/collections ]]]]]  => Started proxy.                              => Started MongoDB.                               Starting your app                         / Your application is now paused and ready for debugging!  To debug the server process using a graphical debugging interface,  visit this URL in your web browser: http://localhost:8080/debug?port=5858  I20160602-23:38:20.154(-7)? Kadira: completed instrumenting the app Paused at /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app/app.js:1926 ```  Last line of `/media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app/app.js` `//# sourceMappingURL=app.js.map`  Verifying the source map is recreated:  1) `ls` of the app & source map while paused:  ``` john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $ ls -lt * -r--r--r-- 1 john john 6221439 Jun  2 23:37 app.js -r--r--r-- 1 john john 3064206 Jun  2 23:37 app.js.map ```  2) `ls` after updating source, meteor detected changes and rebuilt the application and restarted itself.   ``` john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $ ls -lt * -r--r--r-- 1 john john 6221566 Jun  2 23:41 app.js -r--r--r-- 1 john john 3064230 Jun  2 23:41 app.js.map john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $  ```  I stopped the debugger, and re-attached, it paused at the new debugger line, however as reported, it's showing the source prior to the change.  I can make several changes and stop/restarts of the meteor application and VSCode debugger will only show the original source from when the debugger was initially attached.    Also, just to mention for completeness, if I completely stop the meteor process (break out of ""meteor debug"" which runs ""node debug"") and change source, then restart it via ""meteor debug"" (vs just changing and saving the source in which meteor (if running) catches the source change and rebuilds automatically as shown above).  It actually deletes the ""app"" directory, then recreates is and generates the new app.js & app.js.map files.   The behaviour with VSCode is the same either way, but wanted to mention just in case there might be something to it.   1) `ls` while paused at a debugger line.  ``` john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $ ls -lt * -r--r--r-- 1 john john 6221439 Jun  2 23:31 app.js -r--r--r-- 1 john john 3064206 Jun  2 23:31 app.js.map ```  2) I broke out of meteor, added a line to change the source, then restarted via `meteor debug`.  I stayed in path at did `ls` after it restarted and nothing shows.  probably a file system thing since the path I was in is now deleted, but since re-created:   ``` john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $ ls -lt * ls: cannot access *: No such file or directory ```  3) I `cd` back into the same path and I can list the updated files.  ``` john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $ cd /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app john@HomeOffice /media/john/ssd_storage/dev/meteor/collections/.meteor/local/build/programs/server/app $ ls -lt * -r--r--r-- 1 john john 6221439 Jun  2 23:37 app.js -r--r--r-- 1 john john 3064206 Jun  2 23:37 app.js.map  ```  Also, just a quick side question, should the F9 break statement work when attaching and debugging a node app?  I've found when attaching they don't work, but debugger statements.  If there's anything else I can help with please let me know, thanks for your help!"
24214|@isidorn also I think you can drop your code that kicks off the tree refresh from file/untitled dirty events because I now also send a model change event when input gets dirty or saved (it is a non-structural change event with the input within).
24215|@sandy081 yeah all fixed on master!
24216|@bpasero yes I just killed it, code looks much cleaner now! Thanks for improving the events All looks good - just tested it!
24217|@jrieken can you explain how `title` would be different from `label` or `description`?
24218|We could just have buttons in the about dialog that fill the clipboard with the data.
24219|@isidorn nice
24220|This is a known (Windows 10) issue.
24221|https://github.com/Microsoft/vscode/issues/5415
24222|Ok, figured it out, thanks a lot @lucnoc!  You seem to have a variable named with forward slashes, somehow, and that breaks our [parsing code](https://github.com/Microsoft/vscode/blob/master/src/vs/base/node/env.ts#L42). Parsing `env` is proving to be a real challenge... we might try to go another route and try spawning `node -p 'JSON.stringify(process.env)'` to get an unequivocal environment.
24223|This should work nicer now - notice that I have removed the timeout, so the double click behavior is broken again - looking into if I should fix that again with a timeout or with something else. Ideas are welcome :)
24224|@isidorn timeout worked OK for me for the doubleclick case in the explorer
24225|My suggestion would be to, instead of always showing a counter, [show a message in the InputBox](https://github.com/Microsoft/vscode/blob/master/src/vs/base/browser/ui/inputbox/inputBox.ts#L242) when the first line's length has surpassed 50 characters.  I'd gladly take this as a contribution PR! Wanna give it a try?
24226|Also before we could aggregate events because they would all cause the same thing (the tree to fully refreshed). Now I am respecting each event and doing a minimal refresh needed for that event. Which makes sense I believe
24227|Do you have any sample workspace with steps that shows the behavior. I opened two TS workspace and they both behave fine. One questions so: how is your FS configured: case sensitive or case insensitive but case preserving. We do have problem under the Mac with case sensitive FS.
24228|#637
24229|The shared process already [kills itself](https://github.com/Microsoft/vscode/blob/master/src/vs/code/node/sharedProcessMain.ts#L31) when orphan, and so does the [extension host](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/node/extensionHostProcess.ts#L79).  You should figure out what's the full argument list of that process, to really figure out which process it is. Use `htop` for that.  Unassigned the issue to keep it in the inbox, but I'm subscribed to it.
24230|That's nice. That's what I'm talking about. Probably quicker to implement it than write all those excuses above.  /Thank you/.  ![image](https://cloud.githubusercontent.com/assets/512816/15772198/b0eff686-2967-11e6-8cf3-04d24a8dc54a.png)
24231|You need to have both eslint and babel eslint installed either globally or locally. Mixing it will not work. See https://github.com/Microsoft/vscode-eslint/issues/2.  If this is not the case for you can you please share your workspace. I tried it locally and I can run eslint with babel-eslint installed.
24232|This issue was moved to Microsoft/vscode-eslint#82
24233|@isidorn it might still make sense to call refresh from a timeout of 0 because e.g. closing all editors at once will cause a lot of model change events.
24234|"looking forward the support for C/C++ “go to definition"""
24235|Fixed recently.
24236|Fixed in latest. Maybe you are still using this?  ![image](https://cloud.githubusercontent.com/assets/900690/15772525/d9666f00-2971-11e6-8064-6ef5a2aab44e.png)
24237|But my events can now be mutualy disjoint, so I would need to inspect events and sum them up to figure out which refresh is needed to satisfy all the events.  That is, if we do a minimal refresh per event we must respect every event and do not do a timeout
24238|"Not really. I have actually no idea what is causing these file events. Since both gulp and the tsserver are using node it could even be a node problem on your configuration. Lets try the following: VSCode ships under Windows with a file watcher implemented in C#. Coud you start the watcher in a separate cmd shell to see if it recognies file events as well. Please do:  ``` ""C:\Program Files (x86)\Microsoft VS Code\resources\app\out\vs\workbench\services\files\node\watcher\win32\CodeHelper.exe"" ${full path to the workspace} ```  where ${full path to the workspace} is the full path to the workspace. E.g.: C:\projects\myWorkspace.  Now start VSCode and the gulp watch on that workspace and provide me with the output of the CodeHelper. Curious how that will look like."
24239|@stevencl fyi
24240|Cos the extension host binds on port `5870` and cos subsequent starts of the extension host cannot bind to that port (see message about using `5871`) I have high confidence that this is the extension host being orphan.
24241|"It's just a string and would only be the `label` not allowing you to define the description. That's cos it might look weird having it all configurable:  <img width=""268"" alt=""screen shot 2016-06-03 at 10 22 09"" src=""https://cloud.githubusercontent.com/assets/1794099/15773043/0f6694b0-2975-11e6-8688-ca60dcf620f8.png"">"
24242|Attached you can find the output of CodeHelper.  [CodeHelperOutput.zip](https://github.com/Microsoft/vscode/files/297212/CodeHelperOutput.zip)
24243|@isidorn well not sure how fine grained you now react to events, but could you not throw all structural events into the delayed tree refresh and handle the non structural ones without delay?
24244|@jrieken right, maybe we should think about the property names in the API and not just copy what we have in the workbench side. I like the idea of exposing a title for an editor and use that as label in the input. I still think it could be useful to also show the description if someone wants to but it might be less obvious what the description of an editor is and how it shows up. So we could also start small and just have `title` in the API that translates to `label` in the workbench.
24245|@xuxiaotun are you using node.js 5 or 6 with their latest npm v3.x?
24246|Done like that. You can set the title and that's it for now.
24247|duplicates #7133
24248|duplicates #7147
24249|The log states  ``` npm ERR! node v6.2.1 npm ERR! npm v3.9.3 ```  I have had this problem on windows recently, fsevents is a OSX only module and npm has been having bugs determining OS compatibility/dependency of modules. This was solved but there seems to have been a regression in 3.8/9. I solved it by rolling back to 3.7.5 `npm install -g npm@3.7.5` It should build fine with this  If this bug gets fixed again in 3.10/4.0 you will have to remember to remove the version lock on the npm module as it will not automatically update.
24250|node.js : v6.2.1 npm:v3.9.3
24251|By analyzing the blame information on this pull request, we identified @egamma and @bpasero to be potential reviewers
24252|Hi **@featherJ**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
24253|Yes, I do have the Restart OmniSharp command. When I executed it I got these messages:  ``` Error from the extension host: channel closed Extension host terminated unexpectedly. Please reload the window to recover. Error from the extension host: write EPIPE ```  I don't see `C#` in the language indicator at the bottom, but I do notice that the status bar says `Downloading and configuring .NET Core Debugger` and that seems to be what gets stuck.
24254|@bpasero Please check this again if you don't mind. I took the shortcut to figure out first if a path is normal  - which in case of `gulp watch` all paths are. The [implementation](https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/paths.ts#L167) doesn't use a regex anymore, is more correct than before, esp wrt double slashes. The sad part is that using `charCodeAt` isn't much faster than a regex...
24255|"Ok - hold on. RegEx for the win! Using `/\/\.\.?\/|\/\.\.?$|^\.\.?\/|\/\/+|\\/` for checking posix paths is magnitudes after (23ms vs 120ms)"
24256|"Actually, I'm not so sure the problem is the `User-Agent` header...  Your machine cannot figure out to which IP address belongs `marketplace.visualstudio.com`, which should be resolved by DNS, which has nothing to do with HTTP and headers.  Check in your work environment if you need to whitelist some domains. Namely these:  ``` ""extensionsGallery"": {     ""serviceUrl"": ""https://marketplace.visualstudio.com/_apis/public/gallery"",     ""cacheUrl"": ""https://vscode.blob.core.windows.net/gallery/index"",     ""itemUrl"": ""https://marketplace.visualstudio.com/items"" } ```"
24257|Duplicate of #5816
24258|Looks very strange. The watcher reports change events on almost all files in the workspace. Did you only start VSCode on that workspace or did you do more (e.g. start gulp) ?  if you only started VSCode can you try the following: - close all file in VS Code - start it on the workspace - no editor should be open  Check if the file watcher reported ny kind of files - open  TS file  Check if this triggers output in the file watcher.  And do you have a tsconfig.json. If so can you provide me with the content.
24259|In the trace I see you do have a tsconfig.json. Could you add an exclude property to exclude node_modules folder and repeat the same scenario that produces the events.
24260|@bpasero turned out to be a bit more complex but I think it is now behaving fine. Check it out and let me know what you think.  Overall, strucutral tree updates are doen with a 250ms, non structural immediatly. Structural changes are fine grained, but we summerize them up so they are still done with a delay. If the tree is rendered for the first time (viewlet opened) - it is done immediatly
24261|@bpasero as a workaround for the bug I can refresh the elements on done drag n drop - but not sure if we want to go down that path - especially since I think the bug is not severe
24262|+1
24263|Yeah - works much nicer with the new model
24264|Hi, My fs is case sensitive. I've recorded a [screencast](https://github.com/Microsoft/vscode/files/297361/screencast.tar.gz) showing my problem. I also attach a sample project that does not work for me.  [typescript.tar.gz](https://github.com/Microsoft/vscode/files/297285/typescript.tar.gz) [screencast.tar.gz](https://github.com/Microsoft/vscode/files/297361/screencast.tar.gz)
24265|You can use branch aeschli/css-decorators-test to see the API in use by css test extension
24266|@DustinCampbell Is there a way to start omnisharp without it downloading the debugger etc?
24267|Bug in npm then.
24268|Nah its ok.
24269|@featherJ can you first tell what the problem is you are trying to solve? we should not wait with any UI until the extension host is up and loaded because that can be slow.
24270|Might be me given that the explorer is also showing the dirty counter.
24271|fyi @alexandrudima
24272|https://github.com/Microsoft/vscode/issues/6519
24273|@bpasero Thanks for fixing.   I have changes now with the expected behavior. But as an impact, highlighting has to be supported in problems view, otherwise it is very hard to see the selected problem in the file on single click.   I am thinking it will add more mess to the editor, in the sense, when in Search view and problems panel is opened, editor will have many highlights specific to search and error.
24274|True, search adds a stronger decoration over the currently selected search result.
24275|Actually there is another bug that the editor does not show the current active line if it does not have focus. I think once that bug is fixed, maybe we do not need to do anything special?
24276|Right, that will give better experience
24277|The tsconfig.json contains already the excluded property for node_modules. I've re-executed all steps as you suggested, output see attached file.  When starting vscode and there is no File opend, codeHelper doesn't show any output. Only when opening a ts file in editor, codeHelper begins to produce output.  From line 498 on in CodeHelperOtput2.txt I have selected onother ts file in vscode.  [CodeHelperOutput2.zip](https://github.com/Microsoft/vscode/files/297547/CodeHelperOutput2.zip)
24278|The original problem is a symptom of a specific v8/node v6 issue  (https://github.com/nodejs/node/pull/6928) which has been fixed in node 6.2.1. The other problems occur in any version and are unrelated to this issue (even if they show the same symptoms).  @sandy081 please verify that node 6.2.1 fixes your problem.
24279|Not that I know of. However, note that the Go extension is reported as crashing as well. Perhaps that will be easier to investigate?
24280|This problem no longer occurs in node v6.2.1.
24281|@weinand can I get a link to the Issue(s) that have to do with these same symptoms?
24282|@jnystrom https://github.com/Microsoft/vscode/issues/6164 or https://github.com/Microsoft/vscode/issues/5422
24283|@joaomoreno we are now showing an explanation why the callstack is empty:  ![2016-06-03 15-19-37](https://cloud.githubusercontent.com/assets/1898161/15779803/ce8f7720-299e-11e6-8e3d-54ef70b5c62a.png)  BTW, if you set the interval value to 1 (instead of 1000), you will actually get a call stack more frequently.
24284|related issues: - make source maps async: https://github.com/Microsoft/vscode/issues/8162 - update breakpoints after save: https://github.com/Microsoft/vscode/issues/8077 - meteor: https://github.com/Microsoft/vscode/issues/7117 - SystemJS: https://github.com/Microsoft/vscode/issues/4492 - babel-register: https://github.com/Microsoft/vscode/issues/5728
24285|@sandy081 I added support in search to Ctrl+click to open to the side. Cmd+click is taken by the OS to show the context menu so we cannot use it on Mac, but on Windows it should be fine.  I have not heard complains to have a keybinding to keep focus in the tree, so I did not add it.
24286|Also you are free to do anything you want if you implement a TreeController. If you feel for problems you need a keybinding to keep focus, it is up to you to do so.
24287|I can reproduce already in our last release so it seems to be broken since we added the `webview` component. I can also reproduce on Windows and Mac so it does not seem Mac-Menu specific.
24288|"@jrieken I think the issue is that we call `document.executeCommand(""copy"")` (or any of the other edit operations) and that usually just works in all cases even in `iframes`. Since the `webview` is out of process it just does not participate.   I think the only way out is to install keybinding listeners within the `webview` and run `document.executeCommand()` within (or the `webview` copy method: https://github.com/electron/electron/blob/master/docs/api/web-view-tag.md#webviewcopy) because I cannot even find out if a `webview` currently has focus (that is, `document.activeElement` does not return me a `webview` if focus is within)."
24289|I am still not understanding why the OS produces change events on all these files. One additional question: are you using VSCode out of the box or do you have a typescript.tsdk defined (e.g. point to a different version of the TS language service). I know that we had eventing problems with older versions. May be they manifest differently on a bitlocker encrypted drive.
24290|@jrieken yeap, back to good, thanks!
24291|This already is amazing!!!! Thanks!!! :smile_cat:
24292|@bpasero Closing files when they get deleted will close that split view - it becomes quite annoying to constantly resplit the view when working with temporary files.
24293|>  sometime i want to pause one extension at some project  what do you mean by pausing? pausing the download/install?
24294|yeah, there must be something wrong when spawning processes, tho not on all. @joaomoreno you mentioned something today during the standup
24295|@johnf76 thanks for this excellent and detailed investigation. That made things clearer and sparked my interest to install meteor and play with it. I could easily reproduce the problem and it is not a caching problem of node-debug, but seems to be a bug in VSCode. The correct inlined source contents is fetched, but the old content is shown. Fix will appear in Alpha next week.  Breakpoints: in theory it should be possible to use breakpoints instead of debugger statements. But after analysing the generated sourcemaps and meteor's bootstrap code, I realized that this whole setup is highly adapted to the Chrome Dev tools. Making it work in VSCode requires quite some work.  Could you get breakpoints to work in node-inspector? I couldn't either.
24296|@yomed we plan to add a setting to allow for empty groups and then this should not be an issue anymore.
24297|@jrieken I'm trying to reproduce this font-weight issue on my Mac, but I don't seem to be experiencing the same problem.  (I'm on the recent alpha build Ben put up on the builds site, commit 7067520fc9db97d37e7c7f9416bb50f5539319e9) ![screen shot 2016-06-03 at 9 33 44 am](https://cloud.githubusercontent.com/assets/11839736/15785846/4e130fe2-296e-11e6-81a2-f8ecfcdd3297.png)  @bpasero did you fix this recently?  I'm also not seeing the pixel shift on my end. ![pixel-shift-text-open-editors](https://cloud.githubusercontent.com/assets/11839736/15786565/2d4746ee-2972-11e6-8ffb-e248edb6e7ef.gif)  **Possible explanation:** maybe you guys have an older version of Segoe UI on your systems (could you confirm by reinstalling it)?
24298|Moved filter box to the title bar which fixed the mentioned issues in the description.
24299|Removed the error toggle icon completely and one can use filter textbox to filter errors/warnings/infos
24300|This looks like an issue in panel title/toolbar. Since, it is also true in other panels
