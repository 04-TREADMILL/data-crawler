15001|@aeschli I've already submitted pull requests for C# 6 there which have been merged (see the links above). I guess I'll just wait until April for so this one can be too... :smile:
15002|I think it might be related to a folder name. Try this on a workspace on a folder: /Users/workspaces/tests/myNewApp% $$ @! Tabs app/testsblah/ (This is a valid folder on my Mac)
15003|They can actually, but we can't make it update as you (un)install extension.
15004|When you say _i can download as regular_, what do you mean by as regular?
15005|I am really not sure. It doesn't look proxy related but rather a problem with your system's configuration.  Seems like the guys at [nodejs/node](https://github.com/nodejs/node) would be able to help you out. Just describe what you described here.
15006|looks good, modulo #4589
15007|This problem is so frustrating I hacked the source to fix it. See https://github.com/JonathanMEdwards/vscode  But I don't know how to package up a proper installation. I can run the dev version with the command: $HOME/Projects/vscode/.build/electron/Electron.app/Contents/MacOS/Electron /$HOME/Projects/vscode  Also note extension management seems to be disabled in this build - perhaps that is intentional in the dev build?
15008|Thanks for the PR!
15009|I think it should, the main use case is probably testing now that the setting was added. If `--locale` wins it also allows multiple locales to launch at once.
15010|Ported to loc These 'scopes' enum values seem syntax keyword, are they supposed to be localized?
15011|Ported this issue to loc. Once the string change gets into loc file, translation will be updated accordingly.
15012|Ported to loc for fix
15013|Ported to loc for answer
15014|Related information from [npm](https://github.com/npm/): - https://docs.npmjs.com/cli/run-script - https://github.com/npm/npm/issues/3494 - https://github.com/npm/npm/issues/9627
15015|:+1:
15016|@joaomoreno any way i can verify this now?
15017|"Thank you. I am using xampp, it works by overwrite the default setting of php.validate.executablePath with ""D:/xampp/php/php.exe""."
15018|I just went through all debuggers available on marketplace, and make a brief summary of their debugging type: - [Go](https://marketplace.visualstudio.com/items?itemName=lukehoban.Go): go - [PowerShell](https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell): PowerShell - [Python](https://marketplace.visualstudio.com/items?itemName=donjayamanne.python): python - [Chrome](https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome): chrome - [PHP](https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug): php - [Cordova](https://marketplace.visualstudio.com/items?itemName=vsmobile.cordova-tools): cordova - [ReactNative](https://marketplace.visualstudio.com/items?itemName=vsmobile.vscode-react-native): reactnative - [Unity](https://marketplace.visualstudio.com/items?itemName=Unity.unity-debug): unity - [Debug](https://marketplace.visualstudio.com/items?itemName=webfreak.debug): gdb - [Ruby](https://marketplace.visualstudio.com/items?itemName=rebornix.Ruby): Ruby - [Mono](https://marketplace.visualstudio.com/items?itemName=ms-vscode.mono-debug): mono - [NativeScript](https://marketplace.visualstudio.com/items?itemName=Telerik.nativescript): nativescript - [jsirdebugger](https://marketplace.visualstudio.com/items?itemName=muji.jsirdebugger): jsir  Others are not real debuggers actually. Existing debuggers won't have conflicts if we make the change. (lowercase is adopted by most of debugger writers however)
15019|:+1:
15020|Fixed for March.
15021|You can try the fix in http://code.visualstudio.com/insiders
15022|Fixed for March. You can try the fix in http://code.visualstudio.com/insiders
15023|This is: https://github.com/paulmillr/chokidar/issues/300
15024|@HawkenKing we restore the last used scroll position when you reopen a file. Could it be you left the file at the position before?
15025|We had a bug like this and decided that this scenario cannot be and is not supported.
15026|"@v-pavanp so does it reproduce when you run ""code --disable-extensions""?"
15027|Yeah. Open `package.json` of your installed Code and bump the version up to `1.0.0`. Launch Code, you should see it.
15028|Hi **@squarerootfury**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
15029|"A crap, overread the note ""do not edit this file"". Where can I contribute this translation fixes?"
15030|"I'm using VS Code only for some ""basic"" development for my php files, so I'm should be fine with this. I will test it and then I will provide feedback!"
15031|+1 - VSCode Version: 0.10.10 - OS Version: Windows 7 & OS X El Capitan  ![capture](https://cloud.githubusercontent.com/assets/717457/13977917/9858af52-f0d5-11e5-902f-527ac43e18d4.PNG)
15032|Sounds good.
15033|Not reproducible according to @v-pavanp
15034|Not reproducible according to @v-pavanp
15035|The linters generate markers and these markers survive when a linter is uninstalled.  A linter should remove the diagnostics it generated in the extensions deactivate call.  Not critical for March.
15036|"The issue is still present, the developer console still shows  2 ""Changed"" followed by 2 ""Deleted"" events   When I want to exclude everything within gvfs, would be the following pattern be suitable? It does not look like regular regex, which is a little bit confusing  ```  ""files.watcherExclude"": {         ""**/.git/objects/**"": true,         ""**/node_modules/**"": true,         ""/run/user/1000/gvfs/**"":true     }, ```"
15037|What is meant by that statement is that all debug actions can be accessed by the keyboard, not that all have a keybinding associated with them. Right now you can use tab to move focus around, evantually jumping into the call stack pane and using the keyboard up and down to navigate the call stack.  Due to this, it is not an issue with accessibility but you just want a global action to navigate up and down the call stack. If I understood properly?
15038|We no longer automatically close the debu console
15039|@squarerootfury how does you exclude setting look like?
15040|Closing until user provides more details
15041|@bpasero see above.
15042|Closing until we get reproducable steps
15043|Right now vscode will never automatically hide the debug console. We are looking into adding an configuration for debug console behavior which is captured in another issue
15044|@squarerootfury did you restart after making the change?
15045|PRs are always welcome! If not, I can also look into it for our April release.
15046|@dbaeumer will know
15047|Adding the same variable multiple times makes sense, if it is a complex variable and you want to have different expension setup at the same time. Other debuggers also allow this (e.g chrome tools)  Closing as degined
15048|@Tyriar This extension (need manual building on Linux) should print the heap usage onto the output channel: https://github.com/jrieken/vscode-extheap
15049|Yes, configurationDone should always be sent. I will investigate
15050|Currently our error reporting infrastructure is just designed in that way, the error is in the users face and he has to explicitly do something about it. Error messages do not get automatically hidden anywhere else in vscode - and doing what you are suggesting - hidding all error messages once a user start debugging might hide some errors which are not related to debugging.  Closing this as designed and forwarding to @bpasero to verify and maybe check if he has some smart ideas.
15051|This will work with the March release (insiders build already available).  ![screen shot 2016-03-23 at 09 18 29](https://cloud.githubusercontent.com/assets/1794099/13979363/37cdc5fc-f0d8-11e5-8325-f80dd19da987.png)
15052|:+1: BTW, though it's labeled with `mac`, it's happening on Windows as well.
15053|Yes, but I saw that the debug information changed. Now, the message comes from `workbench.main.js:29` instead of `service.cp.ts:140`.
15054|Sorry, I am not good in explaining this. The character which caused a suggest or signature help request is optional. That is because both can be triggered while typing and seeing certain character or explicitly, like Cmd+Space. Hence the `triggerCharacter` is optional, but iff provided must be a `string`. Today the constraints-utils we use cannot express that notion. Therefore this PR introduces test failures (https://travis-ci.org/Microsoft/vscode/jobs/116317476#L878) because it adds the `String` constraint. Therefore it cannot be merged.
15055|To verify, install our insiders build: http://code.visualstudio.com/insiders
15056|@isidorn ok, I'm probably getting the wrong idea here. I'm look forward to the next release! thanks
15057|Sorry, out of ideas here. Excluding a path should stop file events. And it seems gfvs is doing something weird. Maybe the path that our watcher receives from this setup is different. You can disable all file events with **/**: true but that will cause quite a bad experience.
15058|:+1:
15059|yeah, `triggerCharacter` is optional. Please close the PR.  I`m sorry, Thanks!
15060|Well, then I have to find a new way for mounting the servers, but good to know this isn't a problem with VS Code but rather one of gvfs.  Regardless that the issue is still present, thank your very much for your help and your time!   Update: At least the issue seems to happen less times
15061|@v-pavanp Is this the tslint extension or the typescript tools that are bundled with vs code? please attach the reading of the diagnostics message
15062|"Only know of  ``` js {   ""typescript.tsdk"": ""node_modules/typescript/lib"" } ```  So I guess it's sdk?"
15063|@bpasero Thanks, seems to be fixed.
15064|@pflannery this was just a tryout idea which we reverted in the end.
15065|It is TS: Under app.ts.  ![image](https://cloud.githubusercontent.com/assets/17735796/13979863/792c7380-f098-11e5-9845-e0cde0df44d3.png)  ![image](https://cloud.githubusercontent.com/assets/17735796/13979967/0ed5a7da-f099-11e5-9fdb-5dfff6e04e98.png)  Also tslint is showing message like below under: express.d.ts  ![image](https://cloud.githubusercontent.com/assets/17735796/13979911/bcd93302-f098-11e5-8b32-991364c0366a.png)
15066|@Tyriar I reverted this change because master is not open for post-GA work yet. Please cherry pick this change post GA.
15067|Merged.
15068|Yes, please report to TypeScript team: https://github.com/Microsoft/typescript
15069|Reviewed and merged.
15070|Ar, no. This does not only occurs to `typescript`. It occurs to to other modules also, e.g. `npm i -D lodash`.  It is clearly vscode issue. Didn't have this in 0.10.10.
15071|Unless you mean `ts language service` locking those files.
15072|"@unional does it reproduce when you start ""code --disable-extensions""?"
15073|@v-pavanp Please not that `tslint` and `ts` are different projects and that it would be helpful if you file your bugs accordingly (https://github.com/Microsoft/vscode-tslint,https://github.com/Microsoft/vscode)
15074|Will check tomorrow. Sleeping zz.zz...zz :smirk:
15075|@gep13 you can edit a publisher now and add multiple users into the same publisher. On the publisher page click on the edit publisher options from the drop down.   ![image](https://cloud.githubusercontent.com/assets/13758921/13981737/ebd2dbd6-f10b-11e5-9447-1c985c7ea40a.png) ![image](https://cloud.githubusercontent.com/assets/13758921/13981839/83393966-f10c-11e5-9d5c-9619d20e6e71.png)  You can then add multiple users under different roles. The roles are:  • Reader – can see the publisher in the publisher drop-down and view all of its extensions • Creator – can see the publisher and can upload new extensions (but cannot delete other extensions) • Contributor – everything a reader can do, plus the ability to upload new and delete existing extensions • Owner – everything a contribution can do, plus the ability to manage roles  Do let me know if this helps.
15076|:+1:
15077|Since the locale documentation is on the vnext branch I've updated the forward link to point to this location: https://github.com/Microsoft/vscode-docs/blob/vnext/docs/customization/locales.md
15078|It happens with any file, even if you scroll to the top of the file, change files then view again, it'll jump down 10 lines. Tested on 3 different macs; Mavericks, Yosemite & El Capitan. using with Unity & C# plugins.
15079|@johnliu2016 only the 'catch' scope refers to the syntactic element 'catch' of the JavaScript language. The other scopes are descriptive. Should I exclude 'scope.catch' from translation?
15080|Can confirm last used scroll position works. This is for un-viewed (1st time) files and files that have been scrolled to line 1 then re-viewed.
15081|@alexandrudima any idea?
15082|maybe with a command?
15083|Moving to the TS team to consider. I personally would not colorize require as a keyword. We also don't highlight other library functions like keywords.
15084|This issue was moved to Microsoft/TypeScript-TmLanguage#135
15085|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/96
15086|duplicate of https://github.com/Microsoft/vscode/issues/1758
15087|Nice!
15088|@asthana86 fyi the C++ extension has been added to the recommendations. It will be recommended as soon as it gets added to the market place.
15089|How about just removing the `constraint: String` thingie? That will make tests pass and be a valuable contribution.
15090|Yes, please try executing the command `workbench.action.debug.start` [This call](https://github.com/Microsoft/vscode/blob/master/src/vs/vscode.d.ts#L2879) should do the trick
15091|@dbaeumer looks good to me
15092|Nice!
15093|@weinand Please lock the 'catch' scope enum value in corresponding lci commenting, loc will catch that and act accordingly.
15094|@dbaeumer agreed. I'm assigning to you for verification. I don't trust my mixed locale setup on my machine.
15095|@johnliu2016 how do I 'lock' the 'catch' scope enum value in corresponding lci commenting?
15096|i mean i just can download from different sites IE edge and chrome the browsers i use are fine but the vscode link is not working
15097|The source line in the call stack pane in debug viewlet? Screenshot?
15098|Good idea. Test Pass https://github.com/Microsoft/vscode/pull/4290/commits/aeb7beb1e690f1290d112f66e2835e7a8bfd9370
15099|To verify, open a folder on Windows with permission denied error and verify that those with permission errors simply do not show up but do not cause other things to show in the explorer.
15100|@bpasero you review. Can you please verify.
