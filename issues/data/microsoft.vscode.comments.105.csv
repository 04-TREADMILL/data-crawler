10401|Hi @vprasanth, If you use a version manager that doesn't support default version such as Windows nvm, as you said, you must call nvm in a terminal before you start VS Code. But if you use a version manager that supports default version, as @joaomoreno said, you can set default version to start VS Code without calling nvm. And I think that you use that on OSX.
10402|Not critical for February, moving to the rightful owner.
10403|Duplicate of #3133
10404|Duplicate of #3133
10405|Moved to vscode-website repo
10406|@hhelongl what OS / Browser are you using? What page are you downloading from? This works on the variations we are testing.
10407|This has been moved to vscode-website repo. Top of the backlog :)
10408|:+1:
10409|:+1:
10410|:+1:
10411|Yes exactly, sorry for the confusion.
10412|Do the same for Omnisharp pls
10413|@pcgeek86 the release notes are here https://code.visualstudio.com/Updates :smile:  and whenever you get an auto update there is message box with a button to open the release notes.   ![image](https://cloud.githubusercontent.com/assets/172399/13297977/47dac26e-db35-11e5-800a-7b55b465b67d.png)  The fact that you never noticed them makes me thinking...
10414|@hashhar we aren't able to reproduce this. Can you point out the specific page you are seeing this on and what your OS / browser configuration is?
10415|Ah nevermind I found it - http://code.visualstudio.com/insiders
10416|Pushing to March due to lack of @SofianHn, we need more of him
10417|@Tyriar, yes.  This is to differentiate it further from non-collapsed icons.  It also helps it stand out as a visual landmark and it matches how VS does it.
10418|Since you see tags I would expect to see branches too :+1:  In the dropdown, I only see tag, no branch.
10419|Nothing happened in February for this. Ping @SofianHn
10420|A first version of this feature will be on the February release.
10421|@joaomoreno Thanks for 6979086 :+1:
10422|@bpasero: I am still experiencing the issue on the Insiders build with Salsa enabled.  OS X El Capitan Version 10.11.1 (15B42)
10423|639a3cbcb3ac118dfaba7443e2ee3b502ff34d21
10424|We do feature detection for hit testing, in the following order: `document.caretRangeFromPoint`, `document.caretPositionFromPoint` and finally `document.body.createTextRange`.  It looks like Edge decided to implement `document.caretRangeFromPoint`, which it didn't support before, but it implemented it in a broken way.
10425|:+1:
10426|:+1: Thanks for suggesting it!
10427|We do show local branches though, just not remote ones. If you create more branches locally (`git branch foo`), don't they show up there?
10428|We were wondering if this should really be 2 settings, or just one.  @chrisdias Chris, with Sofian being out, please make a call if this needs a fix for February.
10429|Yes, you are right, when I create a local branch I can switch between my branches... Good! What I found wired is to see remote tags but not remote branches. In my mind, we see both or none... but not like this.  What I would like to avoid is to use the command line to checkout a remote branch.  Anyway, VSCode is a great tool!
10430|"Needs ""tasks"" tag?"
10431|This actually is an issue. Code is no longer showing in the launcher because it's pointing at the launcher script not the `Code` binary. This broke when the build became quality dependent.
10432|I believe there are two unique settings - enableTelemetry and enableCrashReporter, they are distinct and have different end points.  Having them together in the same section of the settings file would be ideal, but not a requirement for Feb, assuming it can be fixed at a later time.
10433|@ghost  added the label, thanks
10434|@alexandrudima i'll add this to the feb plan, so that we do not forget to release note the feature
10435|Makes sense.
10436|This is something that can wait until language-awareness comes about. The `def` ends on the last non-whitespace line that is of the same indent level (or lower):  ``` python def a:   something     something_else # a ends here   def b: # since there was a deintent here ```  ``` python def a:   something     def b:     something_else # a ends here   def b: # since there was a deintent here ```  For both these cases I would expect:  ``` python def a: [...]   def b: # since there was a deintent here ```
10437|@joaomoreno @anseki sweet thanks! I didn't even know I could do that. I was using `nvm use xxxx` within my `bash_profile`. Thanks!
10438|"It's focusing body:  ``` html <body class=""monaco-shell vs-dark vscode-theme-colorful-defaults-themes-dark_plus-tmTheme""> ```  Immediately after the `textarea`."
10439|This comes from emmet which we enabled for React.  ``` html <fun></fun> ```  @aeschli Suggest to also register the javascript.json snippets for javascriptreact.  Suggest to get this in for Feb since we will say that we improve the .jsx support.
10440|Use the clipboard node module, plss see https://www.npmjs.com/package/clipboard
10441|"The error message comes from `eslint` and the corresponding `vscode-eslint` extension. Uninstalling the extension makes the error goes away.   @waderyan can you check your eslint configuration and whether you enabled ecmaVersion 6, see below? With the following setting the error goes away for me.   ``` json {     ""parserOptions"": {         ""ecmaVersion"": 6,          ""sourceType"": ""module""     } } ```  @dbaeumer has the change to prefix lint errors by the `source` been delivered to `vscode-eslint`."
10442|"I agree that there's a discoverability issue with the setting, but that's a really wider a issue that affects other settings too. If you were to add another ""zoom persistance"" setting, it would have exactly the same discoverability issue!  If you think the `window.zoomLevel` description could be better, you could always create a PR [on the file where it lives](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-browser/main.contribution.ts), and possibly after that on [the vscode-docs repo](https://github.com/Microsoft/vscode-docs/blob/master/docs/customization/userandworkspace.md)  Btw, the setting can take any fractional value (something that makes it more powerful than zooming with the keys) and the range seems to be -8 to +9 (which are both ridiculously smaller or bigger than anyone would ever want)."
10443|After testing the eval based hover for node-debug, I've disabled this feature for the February release.
10444|Hi, @Tyriar , `ctrl+h` by default is the command for `deleteLeft` when `editorTextFocus` (I am using Mac), I don't think this is the command as you suggested
10445|"Testing #2701   Message: ""C# support is now an extension, would you like to install it?""  With the following options: - **Yes**: Install the extension, do not write any prompt flag. If I uninstall the extension I will get prompted later to install it again (which is good).  - **No**: Do not install the extension and write a flag to not prompt me again. - **Later**: Do not install the extension and prompt me the next time I open a workspace that has C# artifacts  Also, if I press CMD+Q to exit Code without answering the question, I should get prompted then next time I open a workspace with C# artifacts. In other words, only write the flag to not prompt when I choose ""No""."
10446|Hi, @alexandrudima , `ctrl+d` by default is the command for `deleteRight`. Did you customize this shortcut?
10447|By the way, the feature that I am asking is the `super+ctrl+g` in sublime text: https://gist.github.com/nuxlli/1207014
10448|The OmniSharp extension is being slimmed down to remove the runtime, such that the runtime will be installed on first activation.  That means the extension should install quickly and then there will be UI to install the rest. @DustinCampbell is working on the install experience now.
10449|"From my testing: The prompt is useful but it is easy to miss it and it never comes up again. Maybe I donâ€™t want to install it right now, because I opened the tool on the wrong folder, etc.  If I bring up the tool, get the prompt, and press Cmd+Q to exit Code I'll never get the prompt again.   I put a suggested experience in #2748, which is effectively to have a yes/no/later prompt and to only write the ""do not prompt again"" flag if the user presses ""no""."
10450|@isidorn I like Chris' suggestion on the behaviour of the OmniSharp extension message. Since we had a similar discussion about the Mono-Debug extension today, I think it would make a  lot of sense to change the behaviour of Joh's mechanism. Then we could both profit from this and would not need different implementations for OmniSharp and Mono-Debug. What do you think?
10451|@egamma I did not have the options for eslint set, however it does not fix the issue.
10452|> A first version of this feature will be on the February release.  :+1:
10453|@waderyan but with the eslintrc config the error for the `import` goes away? This worked for me.  The error message for the `export` looks like it is from TS/Salsa. Can you include the snippet and the jsconfig.json pls.
10454|@goddyZhao I think it's <kbd>cmd</kbd>+<kbd>d</kbd>/<kbd>h</kbd> for Mac instead of <kbd>ctrl</kbd>.
10455|After reinstalling I see it shows up fine in the launcher:  ![image](https://cloud.githubusercontent.com/assets/2193314/13301829/bde5a4f4-dafb-11e5-967b-72fa1c41ce4b.png)  On the specific issue reported, this is expected for Ubuntu programs; the software center advises the associated `bin/` command and installs a `.desktop` file in `/usr/share/applications` which makes it show up in the launcher as shown in the screenshot.
10456|Looks really good with latest changes.
10457|"Creating .eslintrc fixed it. We also have eslint.options in preferences. I assumed they performed the same function, but they don't in this case.   Snippet:  ``` import React, {Component} from 'react'; import Navigation from '../Navigation'; import styles from './App.scss'; import Viewport from '../Viewport';  class App extends Component {      render() {         return (             <div className={styles.app}>                 <Navigation />                 <Viewport />             </div>         );     } }  export default App; ```  jsconfig.json  ``` {     ""compilerOptions"": {         ""target"": ""ES6"",         ""module"": ""commonjs""     } } ```"
10458|Here is a new issue. I'm getting unused var issues. This makes sense for React, but Navigation and Viewport are being used in the JSX syntax.   ![image](https://cloud.githubusercontent.com/assets/2449568/13302571/c5254e3e-db07-11e5-824c-b836181d999b.png)
10459|Is there any compatibilities using [typings](https://github.com/typings/typings) instead of _TSD_ with VSCode?
10460|As of now, 0.10.8-insider build run as an administrator lets you save to D:<filename>  As far as I can see, @bpasero this is truly closed.
10461|Any particular reason?
10462|@chrisdias what is my role in this? I assume that Dustin publishes the extension under the new name and updates the description and readme.md, right?
10463|Duplicate https://github.com/Microsoft/vscode/issues/1692
10464|@weinand don't we need to change the identity in our sources?    in extensionAssistant.ts and extensionTips.json we refer to `ms-vscode.omnisharp` and it needs to be changed to `ms-vscode.csharp`.    Sorry if I have this wrong.  I assigned to you because I assigned the other OmniSharp message to you :)
10465|@chrisdias from your first message I was assuming that Dustin fixes those as part of his extension rename. Sorry if I misunderstood. Please let us know (via this issue) that the final `ms-vscode.csharp` extension has been published and we will then change the two places you've mentioned.
10466|@isidorn assigning to you, because you are already familiar with Joh's code.
10467|@joaomoreno It appears that this dialog's only purpose is to show help (which shouldn't belong in a hidden hotkey) and to turn on screen reader support. Screen readers aren't working on Linux due to an upstream issue, correct?
10468|My thinking is that we'd probably want to stay away from this as users can open the file in the OS's file explorer or terminal which both support this.
10469|This is  understandable, I wanted to win 1 click :smile: .  Maybe the tooltip idea is not bad though.
10470|"This is what I did: 1. Went to my account's home page, then to My Profile. 2. Under Security, I created a new Personal Access Token. 3. Used ""vsce"" as the description, set the expiration to 1 year, selected ""All accessible accounts"" from the Accounts dropdown, kept Authorized Scopes to ""All scopes"", then clicked ""Create Token"". 4. Used `vsce create-publisher rid9`:  > ``` > Publisher human-friendly name: (rid9) rid9 > Personal Access Token: **************************************************** >  > Successfully created publisher 'rid9'. > ``` 1. Used `vsce login rid9`:  > ``` > Personal Access Token for publisher 'rid9': **************************************************** >  > Authentication successful. Found publisher 'rid9'. > ``` 1. Used `vsce publish`:  > ``` > Executing prepublish script 'node ./node_modules/vscode/bin/compile'... > Publishing rid9.datetime@1.0.0... > Error: Failed Request: Bad Request(400) - TF400898: An Internal Error Occurred. Activity Id: 50ad89d2-fd2c-48a2-840c-cda0e56cc832. > ```  ---  These are the requests that `vsce publish` made: 1. An `OPTIONS` request to https://marketplace.visualstudio.com/_apis/gallery which returned a 200 response containing JSON data. 2. A `GET` request to https://marketplace.visualstudio.com/_apis/gallery/publishers/rid9/extensions/datetime?flags=1 which returned a 404 response containing the following JSON data:  > ``` json > { >   ""$id"": ""1"", >   ""innerException"": null, >   ""message"": ""The requested extension doesn't exist."", >   ""typeName"": ""Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDoesNotExistException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"", >   ""typeKey"": ""ExtensionDoesNotExistException"", >   ""errorCode"": 0, >   ""eventId"": 3000 > } > ``` 1. A `POST` request to https://marketplace.visualstudio.com/_apis/gallery/extensions, with a `Content-Length` of `828509` and a JSON body containing `{ ""extensionManifest"": ""(base64 encoded string)"" }`, which returned a 400 response containing the following JSON data:  > ``` json > { >   ""$id"": ""1"", >   ""innerException"": null, >   ""message"": ""TF400898: An Internal Error Occurred. Activity Id: 50ad89d2-fd2c-48a2-840c-cda0e56cc832."", >   ""typeName"": ""System.InvalidOperationException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"", >   ""typeKey"": ""InvalidOperationException"", >   ""errorCode"": 0, >   ""eventId"": 0 > } > ```"
10471|Ember looks ok, i was able to get some IntelliSense with ember.d.ts, no crashes.
10472|@TurkeyMan If you need to run more rare commands, I've just released an extension which allows you to run commands from vscode. See https://marketplace.visualstudio.com/items?itemName=bbenoist.shell for more info
10473|Not 100% related but interested people can take a look at the new [Shell extension](https://marketplace.visualstudio.com/items?itemName=bbenoist.shell) I made. It's able to run shell commands directly from the editor :rocket:
10474|Ignore this
10475|@joaomoreno can you take a look at this?
10476|"I just spent a bunch of time trying to figure out why my app from vscode-samples wouldn't run.  The updated error message in https://github.com/Microsoft/vscode-node-debug/commit/ce36f927da0f9417d5c93cb8c239bf042ba2a92b will certainly help.    Can we include a ""More Information"" link in that message and point to the release notes, where I assume this will be covered in greater detail. I am guessing that many, many people who have an existing launch.json will be broken with this change.  Also, why did we remove all of the comments from the launch.json?"
10477|With the debug console now horizontal I find that i'm doing even more document/window management after i press Stop in the debugger.    I have to open the Explorer and i have to close the debug panel so that i can use the full height of the editor.  This is especially painful on my laptop where the screen is not very tall.
10478|"We should be consistent when referring to the ""preLaunch"" task because it helps people find the problem, they will look for the term ""preLaunch"".  So, I suggest the error message is ""Could not find **preLaunch** task '_taskname_'.  I am not sure we need the second sentence ""Make sure the task exists and it has a unique name"".  Also, in this case I only have a ""Close"" option. We should be consistent and use the the same prompts as when there are other errors. I suggest ""Continue"" and ""Stop"" in #3438."
10479|@isidorn @joaomoreno I feel like I was a little sloppy opening new bugs vs. reopening existing bugs for this test case, not very consistent. Sorry about that.
10480|@dustincampbell let me know asap when this is ready.
10481|related to #3417?
10482|Why don't we watch for changes to tsconfig or jsconfig and just reload it automatically?  When would you not want this to happen?
10483|I agree with @luisrudge that this should be the default behavior, but perhaps there is an intermediate solution we can go for first:  Results from tracked files should come first. Results from git-ignored files should come last.  This is a lower-risk change that, IMO, can be implemented immediately and yield a notable user experience benefit for search.  Currently, results from git-ignored files are mixed in with results from tracked files. This is super noisy, for example, if you're developing in Python and have a virtual environment or build folder within your project folder with all kinds of code that matches almost anything you might search for.  If you're searching for a string across your project, I wager in 100% of cases you want results from your tracked files first, perhaps followed by results from untracked but not ignored files.  Would it make sense to implement this behavior first? Basically, just tweaking the order in which in the results are displayed. I don't think we would even need a new setting for that.
10484|If anything I would rename it `VB`. We also use this for VB Script, so having the name be more generic gives us flexibility. When OmniSharp supports VB fully in VS Code then we can get specific on the name.
10485|"You can add these keybindings to get that sort of behavior to close the current working file (<kbd>ctrl</kbd>+<kbd>w</kbd>) and close all working files (<kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>w</kbd>).  ``` json { ""key"": ""ctrl+shift+w"",        ""command"": ""workbench.files.action.closeAllFiles"" }, { ""key"": ""ctrl+w"",              ""command"": ""workbench.files.action.closeFile"" }, ```"
10486|version 0.10.8 on win7 64bit
10487|Also, document the LICENSE field
10488|We removed all the comments from the launch.json 5 sprints ago because we felt they were not bringing additional value since all of that can be seen by either hovering or reading our documentation. No user complained so I think it was a good change.
10489|"Well close is actually close this message, so I think that is good since we use that in all other messages. Stop makes no sense since debugging is already stopped due to a preLaunchTask failure. Continue debugging vs debug anyway was discussed by @weinand and me and we decided to use ""debug anyway"" which I prefer. I will change prelaunch to preLaunch, and will change errors pluralirity"
10490|@aeschli This is a great idea :+1:   I can push it tomorrow before end of day my time, if that's not too late.  Let me know.  Otherwise, we'll definitely get it by March.
10491|This issue was moved to Microsoft/vscode-vsce#68
10492|@waderyan  `Internal Error Occurred` means it's a service problem, we should inform them.  Moving to `vsce`. Created bug in Microsoft/vso-node-api#36 to see if we can get their attention.
10493|@rid9 Can you publish any other extensions?
10494|Duplicate of #66. Fix will come next release.
10495|@tacho87 Are you using OS X? Seems to be a duplicate of #3071. Related to #2829.
10496|@joaomoreno Awesome, thank you!
10497|I'm afraid there isn't. Sorry!
10498|@david-mitchell Might it be because you have invalid settings in your `settings.json` file? Do you have any coloured underlines in there?
10499|You had me worried I was going to have to do some real work for a second there.
10500|+1
