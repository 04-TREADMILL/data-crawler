11701|PowerShell here-string breaks folding logic.  Here-string end marker must be placed on first column of new line. ![untitled](https://cloud.githubusercontent.com/assets/10071039/13541690/1a847988-e25e-11e5-9ced-cbbd47171680.png) As you can see, the function isn't folded correctly anymore although folding was done on the function keyword. Code after the here-string stays visible as well.
11702|Yeah, I think for VSCode to give the best experience for code-folding they're definitely going to need help from the various language extensions/services.
11703|I'm seeing the same behavior, Electron helper process constantly allocating more and more memory and then crushes at some point and start over. CPU consumptions is 350% around that time.  OS X Yosemite.
11704|@jokeyrhyme :wink:
11705|I too found this super confusing. Command-E is core to text editing on the Mac I feel.  Maybe this should be added as documentation? I think on the Mac, quite a lot of people would want to make the above keybindings change.
11706|+1
11707|@mjbvz I thought about this when I first opened the issue but neglected to mention it because I'm indifferent. However, I do agree consistency within VS Code is likely more beneficial than with the OS.  Visual Studio seems to use `$(PATH)` syntax. I think that would make the implementation easier because, ya know, having an end delimiter tells you exactly what to look up instead of having to filter down `Object.keys(process.env)` one character at a time.  I guess my vote goes toward `$(PATH)` syntax for consistency within Microsoft IDEs. :+1:
11708|Either that or we're going to have to tweak the PowerShell syntax definition to jive with their folding model a little better.  May need some pointers from Martin about what we can do to improve folding if the tmLanguage definition is a factor.
11709|"@bgashler1 I've heard in a literal sense, in my office. I don't have a discussion to point you to sorry. I'd argue that whilst the tweet @egamma has shared is a valid reason to keep the JSON settings in place, it doesn't mean we can't have both - perhaps upon first opening settings, you are given an option as to which way you'd rather proceed?  As the extension/plugin library grows, I'm sure more of the creators of those plugins would also like a settings GUI to tap into (again, Atom has done a great job of this).  I also understand the complexities that are concerning a few people, that maybe the JSON is too complex to auto-generate settings from. The other way to go about this is to specifically create a GUI that's tailored for core settings, and refer users to the JSON for advanced settings - but I really would rather create something smarter and all-encompassing where possible.  If there are concerns about changing the structure of the JSON (which I assume there would be), we could also look at something JSDoc-like for declaring (in comments) what the 'GUI-friendly' name of each setting is, and how it should be displayed in the GUI. Example below.  ``` /**  * Controls the font family.  * @name ""Font family""  * @type text  */ ""editor.fontFamily"": """", ```"
11710|I also find autocompletion of call expression to be strange when handling of overloads. It seems like it choose the wrong ones for me all the times. Maybe overloads should only be autocompleted with the least arguments?
11711|It would be also awesome if it could autocomplete the arguments. If it finds assignable variables in scope and there exists only one assignable variable it should autocomplete it as an argument in a call expression.  ``` ts function f(a: string) { }  let b: string; f(b) // autocompleted with b as an argument. ```
11712|Is it possible to trigger on a string, or sequence of characters? So instead of triggering on '>' we would trigger on '->' for C++?
11713|"Putting in ""*"" will just download vscode.d.ts from our master branch. Adding a GITHUB_TOKEN is really easy though, why would you not do that?"
11714|This will become available for GA: https://github.com/Microsoft/vscode/issues/751
11715|oops, duplicate
11716|@Tyriar  Ubuntu 12.04, and `/opt/VSCode-linux-ia32/Code --version` doesnâ€™t tell me anything but I just downloaded it from http://code.visualstudio.com/Docs/?dv=linux32.
11717|+1
11718|@mrmckeb You do not need JSDoc, every setting is specified in JSON schema, which allows to specify descriptions, default values and types. An extension can already provide more settings with a schema.
11719|Same here, would love tabs.
11720|what theme are you using @vladimir-kotikov ?
11721|@stevencl That's actually a nice workaround. At least for languages with -> as member operators.
11722|This particular theme is `Monokai` from VS Code insiders. But it is displayed this way with a couple of other themes (incl. `Dark+`, `Red` and `Solarized light`)
11723|There is no such problem with `Dark (Visual Studio)` theme.
11724|"As others has mentioned I think VS Code should allow the same behavior as VS does it (if that means supporting virtual space that is even better). ""Insert Cursor Below"" as it works today is only half-way there. To me this is very important."
11725|ping @alexandrudima ... don't forget to check this in for Feb!!! :)
11726|:+1:
11727|FYI, we found (https://github.com/jcward/vscode-haxe/issues/3#issuecomment-192681931) on Linux that dispose wasn't being called in VSCode 0.10.1, and it's working fine in 0.10.8.
11728|"I'm also seeing this in 0.10.8. I think this issue should be re-opened...  In my launch.json:  ``` {     ""version"": ""0.2.0"",     ""configurations"": [         {             ""name"": ""Launch"",             ""type"": ""node"",             ""request"": ""launch"",             //""program"": ""${env.USERPROFILE}/AppData/Roaming/npm/node_modules/grunt-cli/bin/grunt"", <- Doesn't work             //""program"": ""C:/Users/Jason/AppData/Roaming/npm/node_modules/grunt-cli/bin/grunt"", <- Doesn't work             ""program"": ""c:/Users/Jason/AppData/Roaming/npm/node_modules/grunt-cli/bin/grunt"", // <- Does work ```  I started VSCode by right-clicking the folder in Windows Explorer and selected ""Open in Code"". Launching via command-line or via the Start menu produces the same results.  I'm on Windows 10."
11729|@jt000 in VS Code 0.10.10 this check has been relaxed by ignoring the character case of the drive letter (and it is no longer an error but just a warning on the console). BTW, the check was introduced in VS Code 0.10.8 and was reported for 0.10.8 and 0.10.9.
11730|:+1: Thanks
11731|I tried to run the profiler yesterday when it was getting particularly slow and when I was taking a heap snapshot, the computer maxed out of available RAM, and I could hardly do anything at all, not even force close Code, so I had to restart the computer.  I'll try to run it sooner than I had before to avoid that happening again.  This is a little off-topic, but you posted the link for the insiders build, which I visited.  I wanted to download the windows version (as I use that at home), and whenever I try to get to that link, it redirects first to the usual download page, but then promptly redirects me to the main page without initiating a download.  In fact, it overwrites the history for the download page I was on, so I can't even go back in history to get to it.  Is there any other way I could get the insiders build?
11732|Duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/96
11733|I just ran into this problem (because I use the new [string literal types](https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#string-literal-types) in TypeScript 1.8) .  I wonder why Code is not using the typescript compiler in`$PATH` or at least have an option to use the version in `$PATH`?  Is there a way to find out which version is actually used?
11734|@egamma , thanks for clarifying that the explorer will always show everything regardless of configuration. It's not a bug, then.  However, this issue shouldn't be closed yet. Neither of your suggestions to fix intellisense worked for me. I tried removing the files entry altogether, and I tried adding every single typings path I could think of. In both cases I restarted VSCode. And in both cases, I still had no intellisense in app.js.  My example project has 2 new commits that you can peruse: https://github.com/manad777/vscodetest/commits/master
11735|I've just switched over to VSCode from Atom and noticed how amazingly organized and clean it feels after working with it for a while. The reason? No over-population of tabs! The actual lack of tabs is what makes this experience so smooth. My primary file navigation is the command-P menu that allows me to quick jump to any file.
11736|This link redirects to the stable build: http://code.visualstudio.com/Docs/?dv=win&build=insiders  I'm not able to get the installer for the insiders build.
11737|After various changes and a reboot things are looking much better all of the sudden. I'm also working on a separate group of tests so I'm unsure what may have jolted it into place. If I can narrow it down more I'll provide more details.
11738|:+1:
11739|Same than @Lambdac0re . Therefore, my file is automatically closed.
11740|"It turns out that I misconfigured `typescript.tsdk`. The description of this feature says:  > Specifies the folder path containing the tsserver and lib*.d.ts files to use.  I accidentally installed [`tsc`](https://www.npmjs.com/package/tsc) which is deprecated. But it contains everything the needed (both `tsserver` and `lib*.d.ts`):  ``` $ ls -l ./node_modules/tsc/bin total 22448 -rw-r--r--  1 scharf  staff    51201 Jun 19  2015 lib.core.d.ts -rw-r--r--  1 scharf  staff   215410 Jun 19  2015 lib.core.es6.d.ts -rw-r--r--  1 scharf  staff   707911 Jun 19  2015 lib.d.ts -rw-r--r--  1 scharf  staff   649085 Jun 19  2015 lib.dom.d.ts -rw-r--r--  1 scharf  staff   761325 Jun 19  2015 lib.es6.d.ts -rw-r--r--  1 scharf  staff     9176 Jun 19  2015 lib.scriptHost.d.ts -rw-r--r--  1 scharf  staff   148005 Jun 19  2015 lib.webworker.d.ts -rwxr-xr-x  1 scharf  staff       40 Jun 19  2015 tsc -rw-r--r--  1 scharf  staff  1375827 Jun 19  2015 tsc.js -rwxr-xr-x  1 scharf  staff       45 Jun 19  2015 tsserver -rw-r--r--  1 scharf  staff  1982082 Jun 19  2015 tsserver.js -rw-r--r--  1 scharf  staff   242783 Jun 19  2015 typescript.d.ts -rw-r--r--  1 scharf  staff  2539283 Jun 19  2015 typescript.js -rw-r--r--  1 scharf  staff   242510 Jun 19  2015 typescriptServices.d.ts -rw-r--r--  1 scharf  staff  2539283 Jun 19  2015 typescriptServices.js ```  So I used  `""typescript.tsdk"": ""./node_modules/tsc/bin""` and vscode does not complain.  I also installed `typescript` but no folder seems to contain both `tsserver` and `lib*.d.ts`:  ```  ls -l node_modules/typescript/lib/ total 28048 -rw-r--r--  1 scharf  staff      270 Feb 22 23:31 README.md -rw-r--r--  1 scharf  staff   179761 Mar  2 02:25 lib.core.d.ts -rw-r--r--  1 scharf  staff   229767 Mar  2 02:25 lib.core.es6.d.ts -rw-r--r--  1 scharf  staff   233538 Mar  2 02:25 lib.core.es7.d.ts -rw-r--r--  1 scharf  staff   730725 Mar  2 02:25 lib.d.ts -rw-r--r--  1 scharf  staff   543339 Mar  2 02:25 lib.dom.d.ts -rw-r--r--  1 scharf  staff   780987 Mar  2 02:25 lib.es6.d.ts -rw-r--r--  1 scharf  staff   784758 Mar  2 02:25 lib.es7.d.ts -rw-r--r--  1 scharf  staff     9176 Mar  2 02:25 lib.scriptHost.d.ts -rw-r--r--  1 scharf  staff    42106 Mar  2 02:25 lib.webworker.d.ts -rw-r--r--  1 scharf  staff  1784817 Mar  2 02:25 tsc.js -rw-r--r--  1 scharf  staff  2469004 Mar  2 02:25 tsserver.js -rw-r--r--  1 scharf  staff    90361 Mar  2 02:25 typescript.d.ts -rw-r--r--  1 scharf  staff  3174675 Mar  2 02:25 typescript.js -rw-r--r--  1 scharf  staff    90347 Mar  2 02:25 typescriptServices.d.ts -rw-r--r--  1 scharf  staff  3174675 Mar  2 02:25 typescriptServices.js    $ ls -l node_modules/typescript/bin total 16 -rwxr-xr-x  1 scharf  staff  45 Feb 22 23:27 tsc -rwxr-xr-x  1 scharf  staff  50 Feb 22 23:27 tsserver ```  However, if I specify ""./node_modules/tsc/lib""`, which contains the`lib.*.d.ts` files, VSCode complains (which is actually good)."
11741|Changed title of issue form  > Support TypeScript 1.8 string literal types  to  > typescript.tsdk has confusing documentation and missing validly checks
11742|Thanks @felixfbecker, good point - I didn't realise JSON schema was in use here. That's a far better solution.
11743|"I am getting the same error when trying to install ""Cordova tools"". Steps: - Installed VSCode Version 0.10.9 (0.10.9) - installed cordova extension from extensions gallery - selected Cordova from debug configuration - clicked 'Run Android on emulator'   Got the error as above.  I tried to set `sourceMaps` as false and `""outDir"": ""${workspaceRoot}""` , but still getting same error.  I dont know which sourcemaps I have to specify as mentioned in the workaround. I am using Mac 10.10.5"
11744|Hi **@nwin**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.     </span>  TTYL, MSBOT;
11745|@luisrudge this is just the finish list for the build conference end of March. We will update the roadmap soon.
11746|"I've changed the `jsconfig.json` as follows:  ``` json {     ""compilerOptions"": {         ""target"": ""ES6"",         ""module"": ""commonjs""     },     ""exclude"": [         ""node_modules""     ] } ```  Now it works for me ![image](https://cloud.githubusercontent.com/assets/172399/13553359/168ee62c-e387-11e5-8df8-937d1581b70d.png)"
11747|https://github.com/Microsoft/vscode/issues/2265#issuecomment-176601823  I think `exclude` does work. But not for `files`.
11748|@unioal thanks and agreed, the `exclude` setting has no impact on the behaviour. I can remove it from the jsconfig.json and I still get Intellisense.
11749|https://github.com/Microsoft/vscode/issues/3612 for March
11750|https://github.com/Microsoft/vscode/issues/3612 for March
11751|"The following jsconfig.json works for me in VS Code 0.10.10 available on the insider channel.  `jsconfig.json`  ``` json {     ""compilerOptions"": {         ""target"": ""ES6"",         ""module"": ""commonjs""     },     ""files"": [         ""app.js"",         ""typings/lodash/lodash.d.ts""     ] } ```  ![image](https://cloud.githubusercontent.com/assets/172399/13553414/d92d2d28-e388-11e5-80bc-f95382c3e50a.png)"
11752|Thanks.  @egamma . I just reconfirming that it is working too. :beer:
11753|@scharf   > Is there a way to find out which version is actually used?  You can hover over the version number in the bottom right corner: ![image](https://cloud.githubusercontent.com/assets/172399/13553426/411adeda-e389-11e5-8c57-66a33247ccbd.png)
11754|@scharf   > I wonder why Code is not using the typescript compiler in $PATH  or at least have an option to use the version in  $PATH ?  Code ships with a version of TS that we test that it works. The version on the $PATH can be a different one and therefore you have to enable it using the `tsdk` setting.
11755|@cwadrupldijjit   > This is a little off-topic, but you posted the link for the insiders build, which I visited. I wanted to download the windows version (as I use that at home), and whenever I try to get to that link, it redirects first to the usual download page, but then promptly redirects me to the main page without initiating a download.  Sorry about this, but some users reported some strange issue on the insiders build and we temporarily took it down until we understand this issue.
11756|@saravmajestic please report your problem against the Cordova tools.
11757|+1
11758|"<img width=""1440"" alt=""screen shot 2016-03-06 at 5 46 28 pm"" src=""https://cloud.githubusercontent.com/assets/1147025/13554046/88eb3df6-e3c3-11e5-8a56-55f1487ba433.png"">  @weinand attached the screenshot. I will report the same in Cordova tools as well. Thanks a lot!"
11759|@egamma   It does not show the version number for me:  ![status](https://cloud.githubusercontent.com/assets/3731059/13554069/76268fb0-e39e-11e5-99c3-3e6fa7bc4ce4.jpg)  > you have to enable it using the tsdk setting  that's fine (see also #3748). Often projects are set up in a way that all required tools paths are in `$PATH` . Specifying the absolute (system dependent) path of a tool is not a good idea in a shared workspace settings file. I think it would be good for consistency that command line tools and the ~~IDE~~ editor use the same version of tools. And one common strategy is `$PATH`.
11760|@saravmajestic thanks! Yes, the error message shows that this is not a VS Code problem but a problem in the Cordova extension.
11761|@egamma I wondered if it might have been inaccessible because of that. I'll keep an eye out for when it works, then.
11762|When the ASP.NET 5 debugging VS Code extension is released I'd like to know right away. Can anyone suggest the best way for me to monitor the situation?
11763|VS tabs are perfect, please bring tabs, undocking tabs to separate window would be great as well! Thanks for vscode :)
11764|I think they may be waiting for RC2, which might be a couple months out at this point -- nothing official yet on the date, just my personal feeling based on what I've heard.
11765|"That makes a ton of sense given the namespace changes and also the CLI commands changing. Glad I've managed to work without it for my OS X demos.  On Sun, Mar 6, 2016 at 11:06 AM -0800, ""Anthony Sneed"" <notifications@github.com<mailto:notifications@github.com>> wrote:  I think they may be waiting for RC2, which might be a couple months out at this point -- nothing official yet on the date, just my personal feeling based on what I've heard.  ##   Reply to this email directly or view it on GitHubhttps://github.com/Microsoft/vscode/issues/275#issuecomment-192963569."
11766|We are hope to release a preview VERY soon. Through it will require also using daily builds of .NET Core as RC2 isn't ready yet. I can update this thread when we post it. You can also watch https://blogs.msdn.microsoft.com/visualstudioalm/tag/debugging/
11767|+1
11768|This looks like an issue for the github PowerShell/vscode-powershell repository. I've tried to move it but it failed, pls move the issue if it is for the powershell extension.
11769|Moved to https://github.com/PowerShell/vscode-powershell/issues/109
11770|+1
11771|As an extension I agree but not integrated in to the editor itself. Ultimately I would like to see a terminal extension that gives multi terminal capabilities like web storm does.  I think the goal should be to get vscode extensible enough that someone can do extensions like this. i.e. able to add\extend panels with tabs\sidebars etc..  I find `ctrl+shift+c` is doing the job ok for now (minus the part that I cant choose which terminal program it launches)
11772|This works for me though.  ![image](https://cloud.githubusercontent.com/assets/970430/13559012/e23ba3c0-e448-11e5-9ce8-aba3c2246aca.png)
11773|Is this still on deck for 1.0 or later?
11774|Oops. I was including doing /<\/value>.*?<\/value>/g My mistake, thank you for looking into this.
11775|> It does not show the version number for me:  sorry, I've overlooked that this is in our development version, but it will be in Stable early this week.
11776|The new order is: full filename match, pattern match, extension match, firstline match.
11777|Folding function must be in March 31st to have it?
11778|"Could reproduce when opening ""Problems and Warnings"" when having markdown preview open."
11779|@hulang See the release dates here https://github.com/Microsoft/vscode/issues/2616
11780|ping @bpasero
11781|Honestly this seems like a weird setting. There is a keyboard shortcut to just hide the explorer (Cmd+B).
11782|@zarrini what exactly do you mean when you say that 'Queue' is not resolving. What is the behaviour you would expect here? What is the behaviour that you get?
11783|ping @alexandrudima
11784|Our javascript validation has changed a lot in the latest version of VSCode, can you please try getting the 0.10.10-insider version. Or wait of the 0.10.10 to be out.  Also might this warning be expected? Are you using those variables `f`, `timeago`, `date`?  If you still see this issue with the latest vscode and if the warning is not expected I can reopen this issue.
11785|Currently not configurable and hardcoded to be 5 lines of moving.
11786|ping @aeschli
11787|@juliusbartolome is Code freezing, the app you are jumping to or the OS in general? Do you have extensions installed? Do you have auto save configured to save on focus lost?
11788|Duplicate of # 275, see also this comment https://github.com/Microsoft/vscode/issues/275#issuecomment-192967125
11789|Yes, this feature will be a part of VSCode 0.10.10 that will be released very soon. Until it is released you can use VSCode 0.10.10 - insiders - which already has code expand / collapse
11790|@kevinolorenzo what is the difference of the TFS project? Does it live on a UNC filesystem? Are they any symbolic links involved? Do the file names contain spaces? When specify the 'outDir' attribute could you try to change the drive letter casing.
11791|0.10.10 or 0.10.11 will be released soon - probably some time this week. On GitHub is a newer version which is currently in development and will be released only after it is tested in the future. Thus the misalignment in the versions
11792|@saravmajestic this is the repository of the Cordova extension https://github.com/Microsoft/vscode-cordova
11793|Hi @bpasero   I tried it now and it seems to be OK for now.  I will keep an eye on it. Code started freezing when I installed the latest update from the 0.10.8.  I am using Microsoft Windows 10 Enterprise (10.0.10240 Build 10240) Extension/s installed: - Angular 1 JavaScript and TypeScript Snippets (0.1.15) by JohnPapa  Code is freezing when I am focusing on and off.  My auto save is configured off.
11794|Closing as a dupe of Microsoft/TypeScript#188
11795|Ok, I see, that seems to be no support for HERE docs
11796|@rkeithhill For the moment there's nothing you can tweek on your side until we allow languages to control code folding.
11797|Ok keep us posted, thanks.
11798|PR delivered, thanks @lukehoban !
11799|"Over the weekend we had what we believe is a false positive alert from Windows Defender on the Insiders Build setup. When something like this happens the first thing to do is pull down the drop. Since it happened over the weekend, the fastest thing I could do was change the FWLink to point back to code.visualstudio.com.   False positives have happened before and today we are no longer seeing Windows Defender (with updated definitions) flag the issue. To be safe we will continue to look at the issue today and we will update the link when we release the Feb 2016 stable release and an updated insiders drop that matches stable.  Sorry for inconvenience. One thing we plan on doing as a result of this is adding some sort of ""service status"" to the website to give people an idea of what is going on in situations like this."
11800|cool, by the way what your release cycle, one build each week?
