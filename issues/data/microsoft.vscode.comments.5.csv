401|@joaomoreno but some people want coding, and just use CLT when deploy app. Maybe you can make a extension like term3, then the native version of VSCode won't run slowly.
402|@jrieken Mine looks a bit different, I only have 1.0.0-rc1-final installed and the default is set to mono.
403|That is an opportunity for an extension: deployment commands!
404|Yes, you're right. By the way, why i can't search in extension market?
405|I have swapped between mono and coreclr and still get the issue  ![screen shot 2015-11-19 at 9 59 24 am](https://cloud.githubusercontent.com/assets/1335253/11275655/506c8a30-8ea4-11e5-8a86-f7b927ad21ff.png)
406|"Thank you for the detailed steps. However this is as designed for now. In the future we plan to render the debug console horizontally which should fix your issue.  In the meantime if you dislike it I would suggest using `""externalConsole"": true` option."
407|@blackwire Are you working on PHP files or are you using another language? So far I can only reproduce this when I edit files that are interpreted as PHP code.
408|@buzinas If you want to give it a try: Use our [yeoman extension generator](https://code.visualstudio.com/docs/tools/yocode) to create an extension contributing a colorizer based on text mate (we are currently moving away from Monarch). Then read on in the documentation how to add intellisense, validation...
409|#52 seems to indicate this problem is with all interpolation strings, even beyond ES6 JS. It's good to have a solid version number when this did work, though. Should help tracking it down.
410|"@blackwire One more thing regarding auto-update: Edit your `%appdata%\code\storage.json` file and change `""updateChannel"": ""stable""` to `""updateChannel"": ""none""`. That will disable automatic updates."
411|:+1:
412|Is everyone else using WinSCP too?
413|The output control in VS code does not support colors at the moment.
414|"This is how I solved it on Windows 7: download php from here: http://windows.php.net/download, unzip to C: drive, set ""php.validate.executablePath"" : ""C:/{folder php unzipped to}/php.exe""  Mind the forward slashes."
415|I fixed this by hiding the one when the other is present. It is not the same as stacking errors but I think we can try with this approach and see how far we get.
416|@matthewjohnston4  I'm not, my files are all saved locally without anything else touching them.
417|@DerTolleEmil I work primarily in PHP and yes, the issue does seem to arise while I'm working in a PHP file. Also, thank you very much for the update trick! This is great. I'll wait for issues to be resolved with the new version. I really like some of the features, but I need it to be stable before I can take it. Sad too because I was excited to see the themes were working properly. I'll be patient. Again, you've saved my bacon. I'll be able to get some things accomplished today.
418|@weinand not sure if that's the reason, but I'm trying to debug mocha tests in VSCode.  My current workaround is to type `debugger;` in the place I would have a breakpoint, and then, add more breakpoints when the debugger gets caught.  I don't think it's a problem with the sourcemaps, because when I use the `debugger;` statement, I can debug the `.ts` files smoothly.  To reproduce the behavior I'm mentioning, you can follow the steps: - Clone my repo (https://github.com/buzinas/tslint-eslint-rules) - Run `npm install` and then `npm test` - You'll see the `launch.json` configuration. You'll be able to debug TypeScript if:   - You place a breakpoint in the equivalent JS file; or   - You put a `debugger;` where you want to break;  If you put a debugger, then you must run `gulp build` (or ctrl+shift+b).
419|Actually this will work as long as the file is under the working files section. Once the file is not, closing it will also make the mode decision lost.
420|The `php.validate.executablePath` does not have to be set if php.exe is located in a directory which is listed in your %PATH% variable. If that's not the case you need to set it manually like mentioned above.
421|"My simplest repro is:  **sample.ts**  ``` ts async function main() {   await Promise.resolve(1); // bp on this line   console.log(""later""); } main(); ```  Compiled with:  ``` tsc sample.ts --sourceMap --target ES6 --module commonjs ```"
422|I removed mono and only have Core CLR installed 1.0.0-rc1-final, and am still having the same issue.  Mac development is pretty much unusable at this point.
423|Please use English in this repository. 在這個repository請你用英文。  He's saying that when he tries to open a document that uses GB 2312 the encoding gets messed up, and to get it to display properly he must first reopen the file then choose GB 2312.
424|"Okay I found out that class, super and extends are interpreted as 'invalid.illegal' - why are those interpreted that way? My jsconfig.json contains compiler options for ES6...  ""compilerOptions"": {     ""target"": ""ES6"", }"
425|"Here is my list  <img width=""522"" alt=""dnvm"" src=""https://cloud.githubusercontent.com/assets/1376080/11277319/1c6d0484-8eb4-11e5-9fa4-e8c98463a4be.png"">"
426|So I fixed the problem.  Installing the Windows 10 November update was the solution.  However, I also tried installing on an existing VM that does not have the November update installed so I'll leave it up to the MS folks to leave this issue open or close it.
427|+1. Also `=>`  needs to be in a separate syntax class from the operators that are keywords, such as `instanceof` because I want to color keywords separately from  `=>`. Also for `import * as 'foo'` `import` and `as` need to be keywords while `*` needs to be either an operator or something else more specific to imports.
428|This has nothing to do with the tree. You set `tooltip=` and let Electron render the tooltip for you. It's just how tooltips look in your Linux distribution.
429|"@buzinas thanks for providing steps that helped me investigating the problem. The problem was the value of ""outDir"": it should be the path to the **generated code** not the source. So after changing it to ""dist"" setting breakpoints in *.ts files worked for me."
430|@rbuckton yes, changing the default from Bias.GREATEST_LOWER_BOUND to Bias.LEAST_UPPER_BOUND seems to solve the problem. I will test this a little more and then push a fix. Thanks.
431|There is no proxy support in the extension installation at all. Being fixed in #69
432|I think you mean :heart:
433|does not work in the title :crying_cat_face:
434|:fireworks:
435|thanks joao @weinand fyi
436|@weinand whoa, what a silly mistake hehe Thanks very much, this will improve my productivity a lot!  A little off topic here, only a question: - WIll there be conditional breakpoints available anytime soon?
437|I think that's the correct behavior, since we can import only a set of features, or even name them (giving alias etc). But you could probably write an extension for making this behavior available automatically.
438|Please make it optional. Middle-click can happen by accident when scrolling.
439|I am probably screwed, since I percieve the VS Code's font blurry even in the `default` state, aren't I? Will this be fixed? **The font is just not sharp enough.** :/
440|@DerTolleEmil, thank you for older version.
441|Which of these files is it related to? https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/workbench/parts/extensions/electron-browser/extensionsWorkbenchExtension.ts OR https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen.ts
442|Ok thanks for the update, will close for now.
443|@smuuf can you compare with 0.9.x release of VS code? I dont see blurriness on my Windows machine in code. Maybe you are still zoomed in?
444|Ironically the code looks perfectly fine here https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/workbench/parts/extensions/electron-browser/extensionsQuickOpen.ts#L173-L182  https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/platform/instantiation/common/instantiation.ts  Might be an isolated occurrence. I'll try reproducing it.
445|@hashhar we currently do not persist any UI state when you dont open a folder. So you should be able to easily reproduce this by opening Code empty, open a file in it, close and reopen and it will be empty again.
446|I was able to reproduce it. And you are right, opening a workspace didn't face this issue. So, is there going to be a fix for this? Because I find this a normal scenario.  I would like to try to and work on it too (but don't expect my work to be merge worthy). So could you guide me about the related files?
447|This repository is only for the _Visual Studio Code_ editor, which has not much in common with the _Visual Studio IDE_, but I've to admit that the name is quite confusing.  PS: If you're stuck with windows, give the [intel c-compiler](https://software.intel.com/en-us/c-compilers) a try.
448|I see. Ok. (And if you've got any connection to the IDE people, feel free to pass the message along...)  On Thu, Nov 19, 2015 at 7:04 PM, Andreas Linz notifications@github.com wrote:  > This repository is only for the _Visual Studio Code_ editor, which has > not much in common with the _Visual Studio IDE_, but I've to admit that > the name is quite confusing. >  > — > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/246#issuecomment-158139340.  ##     אופק בירנהולץ   Ofek Birnholtz   Max Planck Institute for Gravitational Physics (AEI)   LIGO Scientific Collaboration   http://phys.huji.ac.il/~ofek/    התנועה הירוקה- מימד סניף ירושלים   חינוך. סביבה. עתיד   http://www.facebook.com/tymjlm   http://www.yeruka.org.il/
449|"If you open a folder in VS Code, we associate all UI state with the folder you opened (you could call this a ""session""). When you open no folder, but just files, we do not store any UI state at all.   Basically in the no-workspace case we need to come up with meaningful identifiers to associate the UI state to. You can have more than one window opened, each without workspace and each with different set of files opened, so it is not as trivial as just picking one random identifier :)"
450|@kypmmhoff can you share the data you pasted to make this happen, e.g. in a Gist? If it does not contain sensitive data of course!
451|I'm not associated with Microsoft whatsoever. Nevertheless, you can send the feature request to the mailadress of [Microsoft's github account](https://github.com/Microsoft). Try another compiler, because we have C11 and Visual Studio's compiler doesn't even support C99.
452|I think it is related to the extensions! The VSCode always freeze after I have updated to the version 0.10.1 and sometimes it gives me a message that something happened to the extensions and restart the VSCode.
453|I can second this report, I have the same problem. ![screen shot 2015-11-18 at 5 56 49 pm](https://cloud.githubusercontent.com/assets/5067616/11279933/0189c0e4-8eb9-11e5-8e67-45a6472a4777.png)  Using 0.10.1 on mac os, but it started on 0.9
454|Creating `.desktop` file is trivial and is about as hard as creating link on desktop in Windows. Main executable is clearly present, png image to put on said link is clearly present.  No, I feel that it needs to be left for distro maintainers when they package VS Code for their distros, not for VS Code developers.
455|I prefer a notification system that lets you know when updates are available (Atom has this).  So you'd have two options: 1. Automatically check for extension updates. (default: true?) 2. Automatically install extension updates. (default: false)  Plus maybe an option to specify the update check frequency.  You could also do per-extension override settings, but that would be extra work. =)
456|pls see this comment on hacker news: https://news.ycombinator.com/item?id=10589451
457|"This has been fixed in version 0.10.1  <img width=""839"" alt=""screen shot 2015-11-19 at 13 50 18"" src=""https://cloud.githubusercontent.com/assets/550820/11280600/bf6be3f2-8ec4-11e5-9662-4d07850a37ac.png"">  I am also on OS X 10.11.1"
458|@tgienger    +1 also have this issue - nor auto indent neither bracket auto close - it is a real pity because when I switch language from `javascript react` to `typescript react` or just `javascript` it all works
459|Fantastic. Guess we can close this issue
460|I'm also seeing this. I believe it was working correctly in 0.9 but doesn't seem to be working correctly now.
461|"@aeschli thanks for the guidelines, I'll give it a try.  About ""we are currently moving away from Monarch"": are you doing that even with the core TypeScript/Javascript intellisense? It's so powerful (probably the main advantage that Code has against the other editors), why would one move away from that?"
462|Same problem! It's pretty frustrating.
463|Monarch provides for colouring only and text mate bundles replace the colouring. The deeper language support we provide isn't affected by this change.
464|The problem is that the powershell extension uses a different language identifier. I created a pull request: https://github.com/PowerShell/vscode-powershell/pull/17
465|@egamma sorry, I was confusing Monarch with Monaco.
466|Thanks a lot for sending that pull request Martin!  I didn't realize I had registered things wrong, glad it's something that can be fixed on my side.
467|Not is a complex code, after edit an existent file, freezes to write a function name. Note: Before a freezes don't display intellisense  ![error](https://cloud.githubusercontent.com/assets/495616/11281622/fb8113d4-8ec0-11e5-9719-8ce49509301e.jpg)
468|I think we are on the same boat! I've faced this problem hundred times today while coding in PHP.
469|But wouldn't it be cool to have the install script inside your own binary bundle which you send? I have both the .desktop file and the install script ready and it works fine. I'll send in a PR. yes creating a .desktop file is trivial, but it isn't that trivial. I know Linux users who don't know what a .desktop file is, of course they won't be using this tool, but as a provider of a tool aren't you placing yourself as a distributor of a full fledged application rather than give complete app for Mac and Windows and leave Linux to the mercy of the person who'll package the distribution? The basic premise that vscode is now open source states that it should be painless to use in platforms other than Windows, which isn't the case with Linux, you have to add things to the PATH variable and create the .desktop file just to get it running, it is rather annoying to do that, as an end user, _despite being a nerd who is still coding at 1am after working for 12hours_, I'd really love to have a packaged version of vscode, doesn't have to be a `.deb` package, what you provide is awesome, but if we provide a shell script to install it to the system then the user won't have to open the downloaded folder and double click on the Code file every time.  The highlight of the above comment is that VS Code is a text editor and whilst it provides a neat installer for Windows, it can at least provide one damn script along with a .desktop file to users who use linux and want to install it. I'll send in a PR, let's discuss about it.  Also final thoughts about the triviality of creating .desktop files, the thing is when a user downloads a software from outside the package managers in Linux then they except to have an install.sh or a make file to be present because they want to install the application and get it started, otherwise they have to unpack the zip file and keep it in some folder and stuff like that.
470|Syntax highlighting in template strings is not working at all. The template string functionality itself works so far.  Issue seems to be that its not that template strings are not highlighting but that syntax highlighter has no concept of tilda quoted strings(template strings).  Expecting everything except ${expression} to be comment colored.  ![tildaquotes](https://cloud.githubusercontent.com/assets/15118702/11282151/ce0eab68-8ecb-11e5-9d69-2cee67042129.png)
471|Hi **@thewhitetulip**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
472|:+1:
473|> doesn't have to be a .deb package  I definitely disagree. If they package the binary, they should use .deb over a shell script.  IMHO, your approach is wrong and you should ask your distro maintainer to provide a package for Visual Studio.
474|Moved to vscode-docs repo https://github.com/Microsoft/vscode-docs/issues/44 Thanks @cfjedimaster for calling out the confusing text.
475|I have the same problem with a PHP project.  Here is the output from CLI:  ```    { [Error: ENOENT: no such file or directory, open 'c:\Program Files (x86)\Microsoft VS Code\resources\app\out\vs\work bench\parts\sharedProcess\node\sharedProcessMain.js']      errno: -4058,      code: 'ENOENT',      syscall: 'open',      path: 'c:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\out\\vs\\workbench\\parts\\sharedProcess\\node\\ sharedProcessMain.js' } }  <--- Last few GCs --->     10928 ms: Scavenge 686.0 (723.6) -> 686.0 (724.6) MB, 1.3 / 0 ms [allocation failure].    10951 ms: Mark-sweep 686.4 (724.6) -> 686.2 (724.6) MB, 21.0 / 0 ms [allocation failure] [GC in old space requested].     11002 ms: Mark-sweep 686.2 (724.6) -> 686.4 (724.6) MB, 51.0 / 0 ms [allocation failure] [GC in old space requested].     11056 ms: Mark-sweep 686.4 (724.6) -> 686.2 (720.6) MB, 54.3 / 0 ms [last resort gc].    11091 ms: Mark-sweep 686.2 (720.6) -> 686.2 (720.6) MB, 35.1 / 0 ms [last resort gc].   <--- JS stacktrace --->  ==== JS stack trace =========================================  Security context: 2AE6CC59 <JS Object>     1: Join(aka Join) [native array.js:154] [pc=1BF35393] (this=2AE080DD <undefined>,o=2AE8653D <JS Array[2]>,v=2,C=34C2 5E09 <String[1]: ,>,B=2AE6C7FD <JS Function ConvertToString (SharedFunctionInfo 2AE37419)>)     2: InnerArrayJoin(aka InnerArrayJoin) [native array.js:331] [pc=1BF3456B] (this=2AE080DD <undefined>,C=34C25E09 <Str ing[1]: ,>,o=2AE8653D <JS Array[2]>,v=2)     3: join [native array.js:~...  FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory { [Error: read ECONNRESET] code: 'ECONNRESET', errno: 'ECONNRESET', syscall: 'read' } undefined ```  ![2015-11-19](https://cloud.githubusercontent.com/assets/864633/11282666/ce5300d0-8f00-11e5-8d5d-36bf853a8c3f.png)  Maybe it helps
476|Hi **@daviwil**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (David Wilson (WSSC)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
477|It's not optional in any other linux software that I know of?
478|And what about .rpm packages for all Fedora, Centos, Red Hat and openSUSE users? It's already binary blob, I don't want it to try to write itself wherever it wants.  Also, to link PR and discussion, it's #274
479|I looked at said shell script.  It's a disaster. It writes to .bashrc. It doesn't register it`s actions anywhere or provides any way to uninstall. It doesn't check if  there is something in paths already or if $PATH contains vscode path.  Why you want VS Code in your Path, anyway?
480|At this pre-release stage, it’s especially important that we understand how our users are interacting with the product and where they are experiencing problems so we can make it better!  For GA, we intend to provide a settings option for opting out of usage data collection, but in the meantime, you can manually disable usage data collection by following the instructions in our [FAQ](https://code.visualstudio.com/Docs/supporting/FAQ#_how-to-disable-telemetry-reporting).
481|My laptop's specifications are: Intel Core i5 (model 460M, up to 2.53 GHz), 4 GB RAM, SSD, Intel i5's GPU (even though the laptop has a GeForce GT 325M discrete graphics card, it's not used under Ubuntu Linux).  The issue that I reported never occurred to me before, and I've been using Visual Studio Code since the very first public release.
482|kc9eye, DerTolleEmil - Thank you very much, you cool.
483|PHP is also affected. See #161
484|I have the same error.  ![screen shot 2015-11-19 at 10 12 48 pm](https://cloud.githubusercontent.com/assets/4550197/11283398/2ee47238-8f0d-11e5-9e94-e04ac9e1517d.png)  /Users/Arda/.dnx/runtimes/dnx-coreclr-darwin-x64.1.0.0-rc1-final /Users/Arda/.dnx/runtimes/dnx-coreclr-darwin-x64.1.0.0-rc1-final /Users/Arda/.dnx/packages/dnx-coreclr-darwin-x64.1.0.0-rc1-final /Users/Arda/.k/runtimes/dnx-mono.default /Users/Arda/.k/runtimes/kre-mono.default /Users/Arda/.k/packages/KRE-Mono.default /Users/Arda/.kre/runtimes/dnx-mono.default /Users/Arda/.kre/runtimes/kre-mono.default /Users/Arda/.kre/packages/KRE-Mono.default.  dnvm list and other dnx commands works fine, even I can run the application from terminal. But in VSCode, I got this error.
485|+1
486|That has been an issue for me for quite a while. Never really checked again if it's already working because I started to automatically open notepad++ again whenever I needed to replace newlines.
487|This problem could manifest if the lines are being split before searching as opposed to doing a full text search.  Interesting side note; `\n` seems to work in find in files (Ctrl+Shift+F), just not in the find dialog (Ctrl+F).
488|Needs to be added to browserEntry too https://github.com/Microsoft/vscode/blob/497788c0bcd20859f736d585b49c208af8dd518f/src/vs/languages/css/common/services/languageFacts.ts#L329
489|Couldn't even find empty lines with ^$ (in case they were being split without EOL).
490|"This is same for me. For both web and console applications, I got ""There are no entries to pick from"""
491|+1 Having the same issue
492|In my opinion, such installation scripts belong in a distro-dependent package (since not all Unix systems are the same). For instance, there's a [package for VSCode in the AUR](https://aur.archlinux.org/packages/visual-studio-code) that suitably installs the software on Arch Linux systems.
493|same here. nothing worked until I installed the extension. Very confusing.
494|Yes, there is (a bit outdated) [package in Gentoo Portage Overlays](http://gpo.zugaina.org/app-editors/visual-studio-code). People want it [packaged for Ubuntu](https://bugs.launchpad.net/ubuntu/+bug/1517565) and I presume for other major distros. No need for install script.
495|"The instructions on that page look pretty clear to me:  > **JavaScript Linters (ESLint, JSHint)** > VS Code provides support for ESLint and JSHint _via extensions_. If enabled, the JavaScript code is validated as you type and reported problems can be navigated to and fixed inside VS Code. >  > To enable one of the linters, do the following: > - Install the corresponding linter globally or inside the workspace folder that contains the JavaScript code to be validated. For example, using npm install eslint or npm install jshint, respectively. > - _Install the ESLint or JSHint extension_. After restarting the editor, enable ESLint or JSHint via the corresponding settings ""eslint.enable"": true or ""jshint.enable"": true, respectively. > - Optionally disable VS Code's built-in JavaScript validation via the setting ""javascript.validate.enable"": false > - Use the .eslintrc or .jshintrc file to configure the linter.  The linters used to work out of the box before 0.10, you're right. But I honestly prefer the current behaviour."
496|Those instructions are clear but there is no mention of needing an extension to make it actually work. Without the extension nothing at all happens. This is either a bug or major omission.
497|Hi **@mliese**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>         In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.     </span>  TTYL, MSBOT;
498|It does mention that an extension must be installed. Look again. Unless of course, you wished vscode itself to warn you of that.
499|+1
500|ah, I see. There are two places this is documented. I was reading https://code.visualstudio.com/updates/v0_8_0#_languages-javascript-linting-as-you-type and it has no mention of extensions. That is probably where the confusion comes from. Thanks for pointing that out.
