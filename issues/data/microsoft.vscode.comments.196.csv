19501|Because that is just the how we show all variables in the variables view. name: Type The 0.99 is the name but it does not have a type, it is still represented to vscode as a variable, and vscode is not aware of this trick that the debug adapter does (chunking a big map into smaller parts)  Closing as designed
19502|Forwarding to @weinand  IMHO this is not critical
19503|@stevencl @bgashler1 opinions welcome. I like the idea to experiment with this, similar to how we highlight variables in the variables view
19504|@jrieken we have the [showUser flag](https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/common/debugProtocol.d.ts#L535) but it might be in this case not respected. Due to this I have renamed and reopend the bug
19505|Maybe there is a way to prevent any page navigation in the web view? I guess soemone could also navigate via JS
19506|from my understanding that's quite hard to achieve
19507|This is what's happening (animated GIF):  ![untitled](https://cloud.githubusercontent.com/assets/3427344/14825368/fe25ed82-0baf-11e6-9fb3-b40eb1170f53.gif)
19508|Also a smarter time to introduce this action might be when we do our tab changes, then these concepts should be clearer to users.
19509|Also a rename of action to 'Reopen Closed Working File' might reduce the confusion
19510|I would leave it as is and revisit this once we implement tabs and stack. Because then it will work more closely as expected.
19511|https://github.com/electron/electron/blob/master/docs/api/web-view-tag.md#event-will-navigate  Maybe this can be prevented from the event?
19512|I would not expect this feature to be platform specific.
19513|We do spawn many Code.exe as helper processes for other things. Does it also take long when Code is running and you execute the reload window command (F1 > Reload Window)?
19514|I am not able to reproduce on Ubuntu.
19515|read the last sentence of that paragraph...
19516|also return something from `onbeforeunload` isn't helpful...
19517|I guess I will extend my link interception and if someone writes to `window.location` it's though luck
19518|The app never responds to the mouse-up event and resizing only seems to work in one direction, unless you move the mouse to the top of the window. After clicking around a bit the mouse-up event eventually fires, but I haven't been able to produce a consistent action.
19519|Running `sudo code-alpha --user-data-dir ~/root-data-dir ~/perms-test` results in  `It is recommended to start vscode as a normal user. To run as root, you must specify an alternate user data directory with the --user-data-dir argument.`  `sudo code-alpha --user-data-dir=~/root-data-dir ~/perms-test`, however, works.
19520|"Make sure you uncheck the ""use glob pattern"" toggle that you have enabled. This changes the pattern."
19521|Looks like a regression...
19522|Workihng OK for me I have seen that happen when you need to re-authenticate.  Do do that refresh the window...  ![image](https://cloud.githubusercontent.com/assets/1051190/14826604/80165f56-0b93-11e6-8288-a51bea5a7b34.png)
19523|@seanmcbreen Can you check there is data from the recent VS Code version (last insider release, 1.01) and tick this off?
19524|Logged at proper repo: https://github.com/austin-----/code-gnu-global/issues/18 https://github.com/Microsoft/vscode-tslint/issues/48
19525|The rationale for this change was to emphasize the fact that the UI is translated to a certain language. Showing the english labels enables to find and memorize the english commands for faster typing but the UI is otherwise consistently translated. Showing the english label first would draw the wrong impression about the primary language of VS Code.
19526|I could of course fix this by installing Git sudo apt-get install git  Then I needed to each up some additional stuff sudo apt-get -f install  Then I could install Code sudo dpkg -i vscode-amd64.deb  But lots of ugly output...
19527|@bpasero Personally, I don't totally agree to the final decision (Translated first) but anyway I appreciate VS Code team's effort to understand our situation. Thanks so much!
19528|Worked like a charm - my related issue is about an install problem vs the update notification.
19529|@alexandrudima I implemented a `CharacterClassifier` in `src/vs/editor/common/modes/linkComputer.ts`. The enhanced `FORCE_TERMINATION_CHARACTERS` should cover most of non-ASCII cases. Please check it!  Some additional test cases are also added.
19530|On my freshly installed Fedora 23 install I get the following error when invoking 'open in terminal':  `shell.ts:415spawn x-terminal-emulator ENOENT: Error: spawn x-terminal-emulator ENOENT`  I reopen #4478
19531|On my freshly installed Fedora 23 install I get the same error as above. That's with VSCode 1.0.1 (April release). Reopening...
19532|Looks good.   FYI @isidorn the link above gives a 404.
19533|@joaomoreno what you describe is the 'happy path' (non debug) mode of node.js.  Please run your one line snippet from above in debug mode from the command line:  ``` node --debug-brk test.js  ```  and then attach node-inspector and run the program to the end. You will find that the node process does **not** exit.  So @isidorn is right: this has been like this forever.  Your statement from above '_It's especially bad if you are debugging a node server which crashes...._' is unfounded because node server crashes are not affected by node running in debug mode.
19534|@espresso3389 is it that you want the translation below?  Or would you prefer to disable the translation completely and just use English.  If so, we do allow you to turn it off.
19535|@bgashler1 Make it configurable will be better
19536|"My Band-Aid was opening the developer tools every time I open the editor and deleting the parent div (ID: workbench.parts.activitybar ) then just toggle the side-bar on and off to let the UI re-align the div positions. The long term solution would be a bar button similar to the ""Show Desktop button on a Windows taskbar"" on the far left of blue status bar in the editor next to the extensions icon or a workspace settings you can force in the settings.json file (""window.activitybar"" : false)?"
19537|"@bgashler1   > is it that you want the translation below?  Yes, it would be better ""for me"" if I can choose which one comes first. But not so important so far."
19538|+1
19539|That's a good idea.  My only concern is that we're currently already using a light gray background on the line numbers of the Call Stack.  The colors are already pretty similar. ![screen shot 2016-04-26 at 11 23 15 am](https://cloud.githubusercontent.com/assets/11839736/14829659/74e7f29e-0ba1-11e6-858e-79f65c82e2ec.png) Note the darker blue on the second line (which denotes this changed but not recently) is almost impossible to see.  ![screen shot 2016-04-26 at 11 29 07 am](https://cloud.githubusercontent.com/assets/11839736/14829786/24035228-0ba2-11e6-88f3-9166329acadc.png)  So, we would probably need to **1)** change or get rid of the gray background color of the line numbers.  Or **2)** change the blue colors we use for changes.   Some quick experiments (I'm not in love with any of these, just wanted to experiment).  _Light gray line numbers_ ![screen shot 2016-04-26 at 11 32 18 am](https://cloud.githubusercontent.com/assets/11839736/14829906/c1e2f548-0ba2-11e6-98fa-21ca364407b3.png)  _Outlined line numbers_ ![screen shot 2016-04-26 at 11 32 51 am](https://cloud.githubusercontent.com/assets/11839736/14829907/c35a360c-0ba2-11e6-88e3-9f8ed1505732.png)
19540|One other thing to note, now that I think about it, is that we're currently using this blue to represent a changed value.  Whereas here, we would be using it differently to convey the location of something called.
19541|"That's odd.  It should fade using the animation `debugViewletValueChanged`.  ``` @keyframes debugViewletValueChanged {     0% { background-color: rgba(86, 156, 214, 0) }     5% { background-color: rgba(86, 156, 214, .75) }     100% { background-color: rgba(86, 156, 214, .3) } } .debug-viewlet .monaco-tree-row .expression .value.changed {     padding: 2px;     margin: 4px;     border-radius: 4px;     background-color: rgba(86, 156, 214, .5);     animation-name: debugViewletValueChanged;     animation-duration: .75s;     animation-fill-mode: forwards; } ```  However, I noticed that it's not using the correct `animation-name`, it's using ""a"" for that.  Weird.  See below.  This seems to be happening at build time (see blow web inspection of it in VS Code Alpha).  ![screen shot 2016-04-26 at 11 57 57 am](https://cloud.githubusercontent.com/assets/11839736/14830563/2a10cfac-0ba6-11e6-8b0b-0822a62f1b6e.png)"
19542|@isidorn could you take a look at what's going on with this.
19543|"OK. works.   ``` {   ""jshint.enable"": true"" } ```  Doesn't work.   ``` {   ""jshint.exclude"": {        ""./src/data.js"": true,        ""Gruntfile.js"": true   } } ```  ![image](https://cloud.githubusercontent.com/assets/2449568/14832414/0d3a0372-0baf-11e6-95f3-0365df6f02d8.png)  Hovering over the green squiggle will show a jshint issue."
19544|Just did a fresh install of fedora 23 and it works for me.  Did you have a workspace open?  This is the vscode version I tested with   ![image](https://cloud.githubusercontent.com/assets/1727302/14832505/8de8dcbc-0bf2-11e6-9402-8a641cd47024.png)
19545|Just updated to the latest Insiders build on Ubuntu 14.04. Still doesn't work via RDP.
19546|I'm on the latest build from today that we use for testing The dev tools console shows: `shell.ts:415spawn x-terminal-emulator ENOENT: Error: spawn x-terminal-emulator ENOENT`.  ``` [aeschli@localhost workspaces]$ which x-terminal-emulator  /usr/bin/which: no x-terminal-emulator in (/bin:/usr/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/home/aeschli/.local/bin:/home/aeschli/bin) ```  Is there anything I need to install or configure first?
19547|looks nice.
19548|Command works on Linux, but I'm not sure how to pass in arguments. I've looked through the docs, but can't find help. Can someone point out how to do this?   I'm typing the following into the command palette.   ![image](https://cloud.githubusercontent.com/assets/2449568/14833660/42cc602e-0bb5-11e6-8f9c-9cbf3f5b12ce.png)
19549|Thank you also from my side 👍
19550|No new features added to the extension this milestone, just a couple of minor PRs.
19551|@aeschli yes I can see the unfold function is more complicated than I released :fearful: I have added a new fold/unfold recursive function so that the regular functionally is not effected.
19552|@aeschli Looks good.  The only thing I would suggest adding is to **automatically insert a comma** at the end of the snippet if you're inserting a dependency in the middle of the list of dependencies.  Since it's changing my cursor, I would expect it to add the necessary comma (otherwise it requires an extra click).  This might not be worth the trouble this close to release, though.  Just a suggestion for later.
19553|I tested with 5'000'000 items in an array on node v4.4.3 and node v5.9.1. It works beautifully. Even expanding the array in the variables view worked without issues (and nice progress icon).
19554|I think arrays are fine, did you try an object?
19555|"@joewood I tried your test case from #5645. Stopping on a break point is reasonably fast although no data is presented (I'm guessing that is when the timeout is happening.) Using Step Over next fails immediately.   <img width=""1188"" alt=""screen shot 2016-04-26 at 5 57 17 pm"" src=""https://cloud.githubusercontent.com/assets/4674940/14838690/9b2d2f0a-0bd8-11e6-8816-151e5200366a.png"">"
19556|+1 This would be a great feature!
19557|The exclude patterns are currently not relative to the workspace root. It makes sense to change that.
19558|@jrieken We allow users only format the selected codes, and any user can select any code section, with or without the whole line.
19559|I believe this is still an issue with destructuring in ES6  ``` javascript let {   first,   second,   third } = destructVar; let otherVar = 6; ```  The second `let` wont be coloured correctly. I have a large `class` module and the `static` methods defined after a large variable destructuring (multiline) aren't coloured correctly.
19560|@waderyan this command is about writing an extension and executing the command through our command API, not about using the command palette :)
19561|@Cyber1000 anything in the console (help > toggle developer tools)?
19562|Make sure you have C:\Program Files\VSCode\bin on your path.
19563|Please configure your .gitignore.
19564|It is on the path: Path=C:\Program Files\Common Files\Microsoft Shared\Microsoft Online Services;C:\Program Files (x86)\Common Files\Microsoft Shared\Microsoft Online Services;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;;C:\Program Files (x86)\Microsoft VS Code Insiders\bin;C:\Users\gregvanl\AppData\Roaming\npm;C:\Program Files (x86)\Microsoft VS Code Alpha\bin;C:\Program Files (x86)\Microsoft VS Code\bin  This output also occurs even if I run with code --wait in C:\Program Files (x86)\Microsoft VS Code\bin. Note it is only the --wait switch which has this issue.
19565|@isidorn today please do this: - run code from command line with `--debugBrkFileWatcherPort=6868` - this will cause the file watcher to break on first line so you need to attach a debugger to have file events - start an insider build as debugger on vscode workspace - set a breakpoint into https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/files/node/watcher/unix/chokidarWatcherService.ts#L51 - attach to the debug port - make changes in the alpha instance and verify the breakpoint is hit - remove the breakpoint, work as usual until file events stop working  Once file events dont work anymore, please check if the breakpoint is hit after all. If not, can you set breakpoints into the chokidar library, e.g. into `fsevents-handler.js#68` where the raw events from the native fsevents library hit chokidar library?  Btw, the debug port survives when you change the folder within VSCode, so you have to keep in mind to reattach the debuger.  Note: Do not open more than one window in this scenario because the port will be used for the second window and that can only fail.  Note: since signing is broken, use an unsigned Mac build (latest is https://az764295.vo.msecnd.net/alpha/8f18471efdd9ff901890ec287b3dd0c942eda986/VSCode-darwin-alpha-unsigned.zip)
19566|https://github.com/codeinthedark/awesome-power-mode :+1:
19567|Marking important, this makes markdown preview and html preview unusable.
19568|+1 very important to me!
19569|I have configured $ git config --global core.excludesfile ~/.gitignore_global and added them to .gitignore_global it does not work
19570|Also configuring .gitignore in a custom case like this is not the correct solution. Since these are VS created files VS should do the needful.
19571|Understood, still you should consider using that since add support for bytes won't come soon as this is a huge effort across our whole stack
19572|Maybe we should think about making the peek experience more rich. Like allowing to preview an html document inside peek
19573|@bgashler1 sure, I can investigate
19574|I have to disagree, that behaviour just appears to be a bug that no one cares. A bit of searching yielded nodejs/node#1788 which they seem to be picking up soon. It's a bug since 0.12; version 0.10 actually behaves as I and Ben expect it to.  Since this is a bug in Node itself I propose to just close this issue.
19575|"don't work .  same message  I tried this  {   ""strict-ssl"":false,     ""http.proxyStrictSSL"": false,     ""http.proxy"": ""htttps://localhost:7124"",     ""https.proxy"": ""https://localhost:7124"",     ""git.enabled"": true,     ""git.path"": ""c:\Applications\tools\git\bin\git.exe"" } and this {   ""strict-ssl"":false,     ""http.proxyStrictSSL"": false,     ""http.proxy"": ""htttp://localhost:7124"",     ""https.proxy"": ""https://localhost:7124"",     ""git.enabled"": true,     ""git.path"": ""c:\Applications\tools\git\bin\git.exe"" }"
19576|Do you have a proxy?
19577|What terminal do you use? Command Prompt? Powershell?  Does it repro if you run `C:\Program Files (x86)\Microsoft VS Code\bin\code.cmd --wait`?
19578|Your `http.proxy` value has 3 `t` characters: `htttps://`. Make sure it only has 2: `http://`.  Also, the configuration setting `https.proxy` does not exist, so you can remove it; only `http.proxy` exists.
19579|"I already got it , but not still working  last attempts {   ""strict-ssl"":false,     ""http.proxyStrictSSL"": false,     ""http.proxy"": ""http://localhost:7124"",     ""https.proxy"": ""https://localhost:7124"",     ""git.enabled"": true,     ""git.path"": ""c:\Applications\tools\git\bin\git.exe"" } and with {   ""strict-ssl"":false,     ""http.proxyStrictSSL"": false,     ""http.proxy"": ""https://localhost:7124"",     ""https.proxy"": ""https://localhost:7124"",     ""git.enabled"": true,     ""git.path"": ""c:\Applications\tools\git\bin\git.exe"" }"
19580|"Not Working  I tried  {   ""strict-ssl"":false,     ""http.proxyStrictSSL"": false,     ""http.proxy"": ""http://localhost:7124"",     ""git.enabled"": true,     ""git.path"": ""c:\Applications\tools\git\bin\git.exe"" }  and {   ""strict-ssl"":false,     ""http.proxyStrictSSL"": false,     ""http.proxy"": ""https://localhost:7124"",     ""git.enabled"": true,     ""git.path"": ""c:\Applications\tools\git\bin\git.exe"" }  .... Not successful"
19581|@jrieken Thanks.I use [Buffer](https://nodejs.org/dist/latest-v5.x/docs/api/buffer.html) class to decode the text and calculate the byte-offset now.I will replace the codes and use the decode result of VSCode after these APIs are provided.
19582|This is happening due to https://stackoverflow.com/questions/8516235/max-length-of-title-attribute Because in this case we use the native chrome tooltip. And yes, I agree we need to wrap somehow the value in the variables view, but that is a feature request which I believe is already open - #1128  So closing this
19583|Also make sure you restart Code every time you change them.  This is very unfortunate. We're looking into a way to detect your system's proxy settings and using them accordingly.
19584|Good work guys the wire frames look like they would work really well.
19585|Query postponed to May.
19586|Assigning to Alex for verification.
19587|We do seem to have plenty of empty ids in our telemetry data.
19588|@egamma I assigned it to you, as we need to find a new telemetry champion.
19589|"There is 1.01 data Also verified that there is 1.10 error telemetry data here https://ticino-errors.azurewebsites.net/ Found extension errors https://ticino-errors.azurewebsites.net/?bucketIdHash=6e72a421-f70a-f1ba-0ff4-66a45c263b01 Quickly going through telemtry I did not see any PII, though those will come as seperate bugs over time  <img width=""465"" alt=""screen shot 2016-04-27 at 10 38 03"" src=""https://cloud.githubusercontent.com/assets/1926584/14846483/61879e20-0c64-11e6-818c-26dc8210c6eb.png"">"
19590|@vsccarl Please re-test this with latest alpha and let us know if you still see it becaue we have fixed some issues
19591|@ericwooley never done this, sorry. There is an eslint flow plugin that might help https://github.com/zertosh/eslint-plugin-flow-vars
19592|@Someguy123 yes this is consistent with what we are planning to provide, thanks.
19593|I have improved the logic to detect when a links comes into play but I am still open for suggestions how to prevent page navigation, eg. writing to window.location. I tried - the `will-navigate` event which doesn't allow cancellation and also the wrong place cos the actual contents lives inside the an iframe - use `onbeforeunload` which didn't have an effect - fiddle with window.location which is readonly  - fiddle with replacing window with a proxy - use the `sandbox` property
19594|From my experience, interacting with the registry via spawning the command line registry tool is playing with fire. We should invest in a native API wrapper.
19595|@aeschli Is there also a way to warn about properties that aren't defined in the schema? The underlying issue is that `allowJS` vs `allowJs` ([casing](https://github.com/Microsoft/TypeScript/issues/8279#issuecomment-214464529)).
19596|Got it, will do it today. However signing is broken and unsigned is not working due to #5542 @joaomoreno are there some updates with signing?
19597|This error is coming from the c# debug adapter, and you are seeing it due to issue #5828. If you have repro steps you could file it agains the c# debug adapter
19598|That _explicit_ decision was taken based on the _loading stack frames is expensive_ argument. What? The reason not to do lazy loading is because loading is slow? You **are** doing lazy loading, you're just implementing it with a very poor UI concept: an extra clickable list item.  The only thing that you are missing to implement nice paging, like we do with the extensions, is [the **total** number of stack frames](https://github.com/Microsoft/vscode/blob/fb318f0be37fbea7b4ea0a4c82c1fb221d3275c2/src/vs/base/common/paging.ts#L13). And, surprise surprise, [you do have it in the protocol](https://github.com/Microsoft/vscode-debugadapter-node/blob/08117a1286a100d2e30feddde9c8dffb16a76564/protocol/src/debugProtocol.ts#L399) and all adapters [either](https://github.com/Microsoft/vscode-mono-debug/blob/252c9e7aa72ef1d27f34c4651bc1430deb8827a4/src/MonoDebugSession.cs#L508) [could](https://github.com/Microsoft/vscode-chrome-debug/blob/fd61dcdfad2a61d3e0656db317e22adb073a705a/src/chrome/chromeDebugAdapter.ts#L439) or [do implement it](https://github.com/Microsoft/vscode-node-debug/blob/3fb9a7f671d92a7a42390fc6d95a5683acc35eaf/src/node/nodeDebug.ts#L1350).  @weinand I further suggest to make that [`totalFrames`](https://github.com/Microsoft/vscode-debugadapter-node/blob/08117a1286a100d2e30feddde9c8dffb16a76564/protocol/src/debugProtocol.ts#L399) mandatory. I doubt any debug adapter wouldn't be able to fulfil that request. A stack trace's length is always at any debugger's fingertips.
19599|@isidorn First I've heard of it.
19600|Yes I restarted each time. I am not fortunate , you're right.  Anyway to workaround this problem ?  ᐧ  Marc Poggi +33(0)6 84 085 086  ---  _FEELTEST_ _11 Avenue Bataillon Carmagnole Liberté_ _69120 Vaulx en Velin_  ## +33(0)954 909 111  www.feeltest.com  2016-04-27 10:01 GMT+02:00 João Moreno notifications@github.com:  > Also make sure you restart Code every time you change them. >  > This is very unfortunate. We're looking into a way to detect your system's > proxy settings and using them accordingly. >  > — > You are receiving this because you were mentioned. > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/5816#issuecomment-215001408
