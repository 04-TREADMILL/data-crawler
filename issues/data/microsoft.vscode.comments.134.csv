13301|:+1:
13302|@weinand yes I believe you are right, could you verify this during testing? If so we could change our defaults.
13303|That is as designed because for decoding it does not make any difference.
13304|@aeschli I am trying to say what is configured in settings, I can make the wording more explicit.
13305|Surprisingly lots of things actually do work in terms of dirty indication but the one for the actual editor does not because it only checks for the right hand side.
13306|Does restarting vscode help? Do any of the other F actions work, like F1, F10 to step and so on. Might you have reverse F keybindings - that you have to press fn + F to get the real F1 behavior?  Do the F keybindings you use work in other applications?
13307|Examples where imho it does not work:  Comparing a workspace local file to out of workspace  ![image](https://cloud.githubusercontent.com/assets/900690/13754362/f66b4764-ea16-11e5-8077-ea5fbf3cd32e.png)  Comparing root level file to other file  ![image](https://cloud.githubusercontent.com/assets/900690/13754376/0686e8ce-ea17-11e5-8d8d-1621a26d4e2f.png)  @stevencl @bgashler1 maybe you have some ideas
13308|@joaomoreno I also think in your case it makes no sense to show xyz_monkey.txt, I think it would make more sense to allow for the --diff parameter to set a label for the left hand side so that the context from where this file is from becomes clear (e.g. the commit hash or message).
13309|"@dbaeumer thanks for reply! But intellisense doesn't work for files listed  in ""files"" section, that's my problem :("
13310|@dbaeumer it is relatively easy to access our global settings from the main side, e.g. see https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/electron-main/windows.ts#L509 as example  The setting still needs to be contributed from a renderer though.
13311|Turns out this is a TS project.  @dbaeumer have you seen such an issue with 0.10.10
13312|For March we support a new setting files.watcherExclude that can be defined to control this behaviour.
13313|"This is all TS w/ CommonJS.  I wasn't previously using a tsconfig.json, but if I add one with the following contents:  ``` json {    ""compilerOptions"": {        ""module"": ""commonjs""    } } ```  It still doesn't work."
13314|Just a note, this is the VSTS code base and I'm available for debugging over Skype for Business if anyone would like to poke around.
13315|-1 for breaking existing clients.
13316|#3533
13317|As designed you can assign keybindings.
13318|#2809
13319|We might want to release an extension to make VS users happy but that should be an extension and not defined from VS Code itself.
13320|https://github.com/Microsoft/vscode/issues/2686
13321|https://github.com/Microsoft/vscode/issues/465
13322|https://github.com/Microsoft/vscode/issues/444
13323|https://github.com/Microsoft/vscode/issues/444
13324|"If you select ""Show Installed Extensions"" you won't see the update button but if you select ""Install Extension"" and search for an already installed extension that has a newer version available, the update button is visible. Is this part of this bug or is this something else?  Install Extension: ![screen shot 2016-03-14 at 2 34 59 pm](https://cloud.githubusercontent.com/assets/1121098/13755609/706ffa52-e9f2-11e5-91ef-c8fc1df18cda.png)  Show Installed Extensions: ![screen shot 2016-03-14 at 2 35 41 pm](https://cloud.githubusercontent.com/assets/1121098/13755624/7d89d640-e9f2-11e5-9945-a243fa10882e.png)"
13325|I think the real problem is lack of documentation about the format of the json files. In this particular case, I needed to know how to pass filenames containing various funny characters to the target program. This is a problem with ALL target programs and tasks regardless of language, hence, it should be documented primarily by VSCode team. I'll file an issue with vscode-docs.
13326|@waderyan fyi
13327|@dbaeumer am I testing this correctly?   I'm on OSX. I have the latest alpha version - `Version 0.10.12-alpha`  I have tried each of these commands, but have not seen any translations.  ``` code-alpha --locale=de . code-alpha --locale=psuedo . code-alpha --locale=de-DE . code-alpha --locale=es . code-alpha --locale=zh-cn .  ```  Because `psuedo` doesn't work I can't determine what should be externalized. Here are the places I am looking.   Search bar.   ![image](https://cloud.githubusercontent.com/assets/2449568/13756311/95663274-e9dc-11e5-91fb-1c4df2aa6a66.png)  Git.  ![image](https://cloud.githubusercontent.com/assets/2449568/13756325/a64041f2-e9dc-11e5-963f-be237487ee1d.png)  File Menus.
13328|Accessing our settings from main side is easy, I commented on a duplicate of this one.
13329|@bpasero the problem is that the code giving me access to the settings is already loaded and may be nls bundles are resolved with the wrong locale. I would need to re-resolve them which is not supported currently. The locale resolving is currently done in JS even before we initialize our loader since the loader loads the nls bundles.
13330|Dups #4170.
13331|Some comments from #4118   I understand your point but I think for the majority of the users the new behavior is correct. The reasons is: - either your native language in non English and you configured your OS to your native language. Then you prefer the native language over English and VSCode will honor that with the March release - your native language is non English but you configured the OS to English. Then VSCode starts in English.  I don't really see why a German would configure the OS to German and want to have VSCode in English. If his English is good enough for VSCode then I guess he would run the OS in English.  We can discuss tomorrow in the standup. Given that fixing this requires additional work/features I moved it to the backlog given the 'minor' value I see.
13332|@egamma lets discuss that tomorrow. I can't think of an easy way to implement that right now.
13333|"Here's a proposed look of GUI settings. Special thanks to @felixfbecker for your idea that I incorporated in this design. - It works similar to markdown preview. - You can click the ""Preview"" button on the top of the header for the GUI. - You can get to a particular setting or category of settings the same way as you do in JSON, by using <kbd>âŒ˜</kbd> + <kbd>f</kbd> or <kbd>ctrl</kbd> + <kbd>f</kdb>. - As you update settings in the GUI, they are reflected in the JSON (and vice versa).  ![gui-for-settings-01a](https://cloud.githubusercontent.com/assets/11839736/13756417/09ea8f00-e9dd-11e5-8ab4-3703d3dbbc50.gif)"
13334|That should work and @weinand tested this. Not sure why this doesn't work for you. Can you check if you see files like this in your installation:  ![capture](https://cloud.githubusercontent.com/assets/1931590/13757116/44e4df20-ea23-11e5-9263-3d6d6dac3bab.png)  Using the corresponding paths under Mac
13335|@isidorn not sure if you or Andre. In general I think debug/run should only close the debug console if the console got open programmatically beforehand through a launch.
13336|@isidorn nice idea, but not easy to realize. The problem is that when in watching mode you need special regular expression to determine in the output when the task is active and when inactive. Otherwise the spinner will not stop :-).
13337|"This is on purpose. The tasks.json only augments the gulp file with additional information it doesn't wrap all targets. Otherwise you would have stuff in there like  ``` json {     ""taskName"":""another task"" } ```  However when you use the picker to execute the task we still show all tasks from the gulp file (as long as the command in the tasks.json is gulp)."
13338|To add more on this I tried to launch an app by targeting Chinese locale > code-alpha --locale=zh-CN and app didn't launch at all. Also when I tried with >Code-alpha --locale=zh-HK app is launching but it is targeting to English. I also tried with > code-alpha --locale=fr-FR and code-alpha --locale=de-DE and app is launching with targeted locals. So looks like there are some issues with Chinese locale.  I am following below matrix for the localization : i.  English VS on English Windows - Passed ii. Chinese VS on English Windows - Failed iii.    German VS on English Windows - Passed but app is not localized across all the sections refer issue # 4204 iv. English VS on Chinese Windows - NA v.  Chinese VS on Chinese Windows - NA vi. English VS on German Windows - NA
13339|![capture](https://cloud.githubusercontent.com/assets/1931590/13757841/b51905d4-ea26-11e5-9197-8c9649554ce3.png)
13340|@eyalsk   > The issue with what you are proposing where you exchange text with controls is that I'm not sure how great the experience would be and I'm not sure what you gain by doing it.  The benefit is easier discovery of settings. Currently, you have a) the default settings where you can discover what settings are available and b) the actual settings.json. You always have to copy+paste the settings or use IntelliSense. In a UI you can see what settings are available, see what values they have and change them at the same place.  > So without an actual UI I see no point in it.  I don't get this, there _would_ be an actual UI.  @bgashler1 this is near to how I imagined it, a few complaints though: - the headlines need to be smaller - true / false should simply be a checkbox - I find it a bit weird that the UI opens over the default settings and still shows the actual settings side by side. It would make more sense if you toggled the view of the actual settings.json to get the UI, and then maybe automatically close the default settings json window. - What should happen when you set a value back to the default value? Should it get removed from the settings file?
13341|There is little I can do about it since I spawn gulp to determine the task. If I call gulp --tasks-simple on the command line it takes quite some time as well. For example for VSCode between 2 and 3 seconds on my machine.
13342|Agree. But instead of an action we should automatically open the output. Setting to March to investigate. Might move to April since this is not a regression.
13343|Guys there is now a like button on GitHub, lets stop +1ing issues if we dont have anything else to say
13344|@felixfbecker the can't be edited right now because there source is somewhere else. We are investigating how we can make this more friendly. Actually the json files checked into git are generated from another source.
13345|What language is that? Java, C#...?
13346|@dbaeumer So where is this source? I think it would make sense to take these once from the external source, but allow the community improve them via PRs.
13347|@v-pavanp Please note that minor parts of the product are still not translated. We have in total 136 untranslated strings. If a strings shows up in the user interface untranslated and you want to check if the strings is correctly externalized start in locale=pseudo and check if the string is enclosed in [ ] and has doubled vowels.
13348|Regarding Chinese: the support locale strings are zh-cn & zh-tw. But there seems to be a deeper issue here. The problem might be that the locale string must match the casing on disk which can result in problems.
13349|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/96
13350|See https://github.com/Microsoft/vscode/issues/4206
13351|For the problems in https://github.com/Microsoft/vscode/issues/3982#issuecomment-196495606 see https://github.com/Microsoft/vscode/issues/4206.  I will close this issue since we can't switch the locale in a running VSCode instance.
13352|Unfortunately the files can currently not be edited since we receive them from a different source.
13353|For completeness: There is also F8 that shows the next error.  @anseki Is your request to show the error message in the status line when the cursor is at that location?
13354|It's C++.
13355|Done :-)
13356|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/11
13357|"I would like to port over also my comment :)  ### Comment 1:  IMHO, there is a case not covered well enough. e.g.:  having Windows locale in English and wanting to run VSCode in Spanish. or having Windows locale in Spanish and wanting to run VSCode in English. The only way to do this now is to use a command line argument.  But especially in Windows, it is unusual to launch a UI app from the command line with arguments. E.g: taskbar, windows start button, double clicking a file associated with VSCode, right click open with VSCode.  I suggest some alternative means to define the locale besides the command line argument.  ### Comment 2:  I think putting on the backlog is a bit too optimistic, since this is a ""breaking change"".  If I have Windows locale set to German, VS Code always started up in English.  Starting with the March release, VS Code will start in German and it has no way to durably disable this behaviour."
13358|@aeschli why me :-)
13359|@Dongep are you talking about linting ?
13360|Comes out in March
13361|Dups #4196
13362|I picked external command since the command is not generic. I would be Generic Task.json which I ddn't like either. At the end it is launching an external command.
13363|@egamma what is your suggestion with The other repeated text is 'if x is available with auto detection'.
13364|Comes in March
13365|> When Code shuts down the the deactivate method of your extension is called and you should be able to clean up.  This is what I already tried, but the spawned electron process keeps running, even when vscode is already closed. When I debug the extension in vscode, the `deactivate()` function is not called when the extension host is closed. I tried commenting out the code that spawn the process, and even then `deactivate()` is not being called most of the time.  I also tried adding a `disposable` object to `context.subscriptions`, but the `dispose()` function there is not called either. What could cause such a problem ? Am I debugging the extension in a wrong way ?  Might be related to #1298 ?
13366|The missing debugger strings have been fixed. The missing extension strings are 'on purpose'. Currently the market place is not localized so we can't show any localized strings.  The Show Extensions Recommendation as not been translarted yet either.
13367|This should go away if we had auto detection support for npm modules in task land like we do for gulp.
13368|Given I didn't get any other negative feedback on the (new) current behaviour, I suggest to close this issue, since the initial bug is fixed.
13369|This is a duplicate of https://github.com/Microsoft/TypeScript/issues/6802 which is on the roadmap for TS 2.0.
13370|I am also having the same problema with opening files on a virtual machine on my computer through SAMBA... it would be nice to have a fix... maybe find a way to configure Samba not to drop the connection if that's the case...  thanks!
13371|There's no sad face reaction. :disappointed:
13372|Thanks, @isidorn, I just needed to press F Lock on my Microsoft wireless USB keyboard. Sorry, I had hardly ever used the F keys before now (I was wondering why F1 didn't seem to work right either!) Has anyone else fallen into this manhole? @ianwesterfield ? If so, maybe we should find a way to avoid other people having the same problem (for example trap whatever the keyboard was sending for F5 and treat it as F5). If not, I consider this closed.
13373|@felixfbecker I agree and we are working on it.
13374|"@tstringer actually this is by design. When you have no jsconfig.json or tsconfig.json, then each file is treated as an island. The file can have references to other files e.g. using commonjs imports and they will be considered. However, other files in the same folder like the typings folder are not considered since there is no reference to them. You can add a reference to a typings file manually using a /// reference `/// <reference path=""typings/node/node.d.ts"" />`.  VS Code 0.10.8 used a slightly different semantics. When there was no jsconfig.json then all files inside the workspace where considered to belong to the same project. Now that TypeScript supports hybrid projects of JS and TS files, it is no longer an option to have different project semantics and you now always get the TypeScript semantic.  Bottom line you should always add a jsconfig.json to define the project context and its excluded files. This will give you reference searches, Intellisense etc.  For March we have added some hinting UI to guide the user to create a jsconfig.json."
13375|What setup is this, what virtual machine? Parallels?
13376|Looks like they are all there. Am I using the command line correctly? I'll check on some of the other Mac machines here.   ![image](https://cloud.githubusercontent.com/assets/2449568/13759792/0d528e44-e9ed-11e5-998f-bd0a8cd5ef98.png)
13377|@bpasero I will leave the output window up today and see if anything appears. Currently it has been open for an hour or so of normal use and I don't see anything in the tasks or git views. We do not use git, so I wouldn't expect to see anything in that as a general rule.
13378|I used the extension code from this [comment](https://github.com/Microsoft/vscode/issues/3609#issuecomment-193997733). Couldn't reproduce the bug. Looks good :+1:
13379|@JanKok VS Code only prescribes the fact that launch.json is a json file. The structure and semantics of individual launch configs is contributed by individual debugger extensions via a schema and individual interpretations in the debug adapter. So the PowerShell debug adapter could accept forward slashes on Windows (like the node debug adapter).  Not being able to pass a space (blank) character embedded within a single argument is definitely a problem of the PowerShell adapter and not a problem of a lack of documentation of the json format.
13380|My host OS is Windows 10 with a Ubuntu Desktop 12.04 running on a hyper-v box.  On the guest OS (linux) I have my application servers running, and my sorce code. Sorce code is exposed (shared) with host through SAMBA (I work with GitHub on the guest OS and I enter my linux/samba user when I first make the connection from Host).  It all works fine most of the time, except when I leave Visual Studio code alone for a few minutes it breaks with that REOPEN message. From other posts I have read, I'm guessing it may be some problem with losing connection momentarily with SAMBA.
13381|"@waderyan make sure that VS Code is not running before you launch it from the command line with the local flag. Otherwise the locale flag is ignored. And make sure to spell ""pseudo"" correctly ;-)"
13382|"It might also be nice to install an extension once on one machine, and have your other machines either prompt or automatically install the same extension everywhere else.  Atom had an online package browser with ""stars"", and there was a command you could run to install everything you'd starred. Still not automatic, but it was a start.  I know others might object, but I personally have no problem having to log in to VSCode with my Microsoft account once per machine, if it facilitated this level of convenience. Maybe a synchronisation framework or something could be offered, so that provider-specific extensions could implement authentication and cloud-persistence (e.g. one for Microsoft, one for Google Drive, Dropbox, etc)."
13383|@egamma Thanks so much for the information!  Just to clarify, is this no longer considered a bug or accidental-break?  And if that's the case, for JavaScript projects/applications going forward, the correct approach would be to create the `jsconfig.json` file in the project root 100% of the time?  Likewise, if this is the intended behavior, is this documented?  I couldn't find any documentation explaining this prior to my initial comment.  Thanks so much in advance for your time!!  When I get my head wrapped around the intention and future of this, I'll make an addendum to a [blog post](http://tstringer.github.io/vscode/2016/03/10/vscode-intellisense-breaks-0.10.10.html) I released about this.
13384|Ha. That was it (both the running app and the spelling problem). Works on command line now :)
13385|Hmm this bug is older than 4196
13386|@bpasero I've tried both patterns and could not find a difference.
13387|Makes sense
13388|Glad we found the bottom of the issue. None of the other users complained so closing
13389|1. What behavior are you seeing 2. What behavior are you expecting 3. Can you please provide repro steps and screenshots
13390|ok i will try it.
13391|Found an issue with OS detection. logged [here](https://github.com/Microsoft/vscode/issues/4209)
13392|This doesn't sound like it has anything to do with VSCode. It sounds like you're just using Node.js incorrectly. What is the exact error message?   What is in `./scripts/npm.sh`?
13393|@NickHeiner `./scripts.npm.sh` is the wrapper for npm for vscode.  This is nothing to do with Node.js, I have added a package to `package.json`.  I am wondering how I register the package with vscode to be able to call the package in a typescript file.
13394|yes please!
13395|Thanks for the clarification. That's good to know. The fact that both the PowerShell and code-debug (C/C++, gdb) extensions implemented argument passing in non-obvious ways indicates a need for some guidance from the VSCode team. I'll add to my issue at vscode-docs and file issues at vscode-powershell and code-debug, but I bet most of the extension projects need to know about this issue, namely - need for detailed documentation of launch.json and similar files, in particular regarding how args are passed, and - (possibly) a need to modify how args are passed to adapt to the needs of the individual languages (but I'd prefer to see this done in a consistent way across all languages - hence my call for guidance from VSCode team).
13396|CC @Tyriar
13397|![screen](https://cloud.githubusercontent.com/assets/15142474/13762990/c38b848e-ea3a-11e5-88c9-24f75903bdc1.png)
13398|@felixfbecker Cool! But I had to pull of the desktop version of the site to see it. Doesn't work on mobile yet. :-1:
13399|Any followup for this issue? I found 0.10.10 works fine when I switch the tsdk to the version in 0.10.9 (typescript 1.7.5),
13400|When code is already opened, the -w config is not opening another window, it's simply existing. Not sure if this is a separate issue or by design.
