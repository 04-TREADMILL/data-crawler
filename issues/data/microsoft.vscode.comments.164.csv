16301|"Hi @jrieken,  Thanks. I mean, for example here's the content I'm typing (the pipe is the caret):  ``` someFunc|Abc ```  And the auto-completion list offers `someFunction`. Then: - If I press <kbd>Tab</kbd>, it replaces `Abc` with `tion`, so it would become `someFunction`. - If I press <kbd>Enter</kbd>, it inserts `tion` into the caret position, so it would become `someFunctionAbc`.  If there's a white space after the caret, then either <kbd>Tab</kbd> or <kbd>Enter</kbd> will just insert the offered text into current caret position (which is current behavior)."
16302|"Ok so the problem is this keybinding:  ``` json { ""key"": ""ctrl+a"",                ""command"": ""editor.action.selectAll"" }, ```  It doesn't feature `""when"": ""editorTextFocus""` meaning, it's a global shortcut. It definitely feels a little weird to me when the focus is on the explorer, not sure the reason this was done. This also applies to <kbd>ctrl</kbd>+<kbd>c</kbd>/<kbd>x</kbd>/<kbd>v</kbd>  /cc @alexandrudima"
16303|3 and 4am only? No other times? I can't make 3/4 am PST on a Wed.  On Mon, Apr 4, 2016 at 8:14 AM Brad Gashler notifications@github.com wrote:  > Looking forward to hearing your feedback to new designs we're exploring > related to this issue. If you're interested, please sign up via the link on > Steven's comment above! >  > — > You are receiving this because you were mentioned. >  > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/224#issuecomment-205342923
16304|Great description! Thank you!
16305|Same issue tracked in atom https://github.com/atom/atom/issues/4360, here's the upstream electron issue https://github.com/atom/electron/issues/2256
16306|@RussBaz @mariusa I can't reproduce this, can you try reproduce on the [latest insider's build](code.visualstudio.com/insiders) using the deb or rpm packages to install?
16307|"It would be good if you have timing according to PST, many (including me) can participate   {Mobile}  On Mon, Apr 4, 2016 at 8:50 AM -0700, ""Glenn Block"" notifications@github.com wrote:  3 and 4am only? No other times? I can't make 3/4 am PST on a Wed.  On Mon, Apr 4, 2016 at 8:14 AM Brad Gashler notifications@github.com  wrote:  > Looking forward to hearing your feedback to new designs we're exploring >  > related to this issue. If you're interested, please sign up via the link on >  > Steven's comment above! >  > — >  > You are receiving this because you were mentioned. >  > Reply to this email directly or view it on GitHub >  > https://github.com/Microsoft/vscode/issues/224#issuecomment-205342923  — You are receiving this because you commented. Reply to this email directly or view it on GitHub"
16308|@jrieken makes sense, I updated the PR. Once the command is on master I can look into adopting it for the actions that use ipc in their run method. There are many more than just opening folder.
16309|Today, the scopes or token types aren't known to extensions. Because of that we cannot prevent this yet. The same is true other cases, like IntelliSense inside comments. Closing as duplicate of #719
16310|Cool
16311|LGTM
16312|Understood, thanks for clarifying
16313|Agreed - it's a duplicate of #1304. Currently we lack the information to smart enough about this...
16314|Pushed for April, the syntax via command is:  ``` typescript let uri = vscode.Uri.parse('file:///Users/bpasero/Development/Microsoft/monaco'); vscode.commands.executeCommand('vscode.openFolder', uri); ```  Note that opening a folder will replace the current running instance and this means the currently executing extension host will go down and restart.
16315|For our 1.0 release you can assign the new command `workbench.files.action.focusFilesExplorer`  Try it out today from our insiders release: http://code.visualstudio.com/Download#insiders
16316|PR for your convenience:  https://github.com/Microsoft/vscode/pull/4919
16317|Yes please. I def would like to be part of the conversation.
16318|Sorry, I know these times aren't convenient for everyone. In the future we will look into ways we can schedule sessions in different time zones as we plan to hold them on a regular basis.
16319|Why not just schedule an additional one this week at a diff time? This is a hot topic with a lot of interest.  On Mon, Apr 4, 2016 at 9:44 AM Steven Clarke notifications@github.com wrote:  > Sorry, I know these times aren't convenient for everyone. In the future we > will look into ways we can schedule sessions in different time zones as we > plan to hold them on a regular basis. >  > — > You are receiving this because you were mentioned. >  > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/224#issuecomment-205386984
16320|@bpasero I have still not seen any issues. @andersonferrari are you still seeing the problem?
16321|I'm also seeing this after the else statement in a Jade template.  Notably, right after the else statement where no IF statement is also included.  Leaving a blank line seems to reset the syntax, but both after the  if statement and else statement look incorrect compared to syntax highlighting outside the if statement.  Also there seems to be a weird issue with blank lines before comments too  ![screen shot 2016-04-04 at 2 06 44 pm](https://cloud.githubusercontent.com/assets/6043886/14258024/840cc068-fa6e-11e5-840c-18fb70e7ed58.png)  Version 0.10.11 (0.10.11)  That's the monokai theme, but also tested with Dark+, dark, etc looks the same for them all.
16322|Just so you know, the time slots that you see are just the ones that are still available. I had slots open later in the day but those were taken quite quickly.  Like I said, we will try to schedule sessions in different time zones in the future.  Thanks for all the interest.
16323|I see, well I guess they filled up instantly (which is good) On Mon, Apr 4, 2016 at 11:30 AM Steven Clarke notifications@github.com wrote:  > Just so you know, the time slots that you see are just the ones that are > still available. I had slots open later in the day but those were taken > quite quickly. >  > Like I said, we will try to schedule sessions in different time zones in > the future. >  > Thanks for all the interest. >  > — > You are receiving this because you were mentioned. >  > Reply to this email directly or view it on GitHub > https://github.com/Microsoft/vscode/issues/224#issuecomment-205436942
16324|@bpasero That's great news. Thanks.
16325|Since this is being approached differently, I will submit a different pull request with the new code when it's ready, closing this one.
16326|Can you / do you record the sessions?  On Mon, Apr 4, 2016 at 11:32 AM Glenn Block glenn.block@gmail.com wrote:  > I see, well I guess they filled up instantly (which is good) > On Mon, Apr 4, 2016 at 11:30 AM Steven Clarke notifications@github.com > wrote: >  > > Just so you know, the time slots that you see are just the ones that are > > still available. I had slots open later in the day but those were taken > > quite quickly. > >  > > Like I said, we will try to schedule sessions in different time zones in > > the future. > >  > > Thanks for all the interest. > >  > > — > > You are receiving this because you were mentioned. > >  > > Reply to this email directly or view it on GitHub > > https://github.com/Microsoft/vscode/issues/224#issuecomment-205436942
16327|@isidorn If you hover over the long variable: ![debughover](https://cloud.githubusercontent.com/assets/12900364/14259694/e3342a34-fa5c-11e5-8db9-040c927406f4.JPG) I would expect the value to be displayed like this:  ![debughoverpreview](https://cloud.githubusercontent.com/assets/12900364/14259711/ffa36022-fa5c-11e5-9fbb-1e7c78bfa016.JPG)  When there are heavily nested variables, there is no way to see the value dependent on screen size.
16328|"Joao and I chatted about this a little today.  The key things I propose here are: - I like the idea of editor windows vs modal or a pop-up (rationale below) - First class action in nav bar (left side) I think is critical - this should also have indicators like git does e.g. green with 3 == 3 suggestions, red with 4 = 4 issues or updates (ignore my color choices :)) - Includes common metaphors for Installed, Recommended and Marketplace in a single pane of information - we could fit a lot in here but I also have expansions and I imply scroll bars as an option. - Ability to scope and sort marketplace results - remove themes from results as an example. - Ability to act from the list views if you know what you want e.g. install or update - Demotion of license to the details view (I'm not sure it needs to be in list view but may be missing some context).  I do think my mock up is a little 'over designed' we don't need all those controls all over it.  And it's something we could grow into vs. start with.  It's also not nearly flat enough i.e. it would look out of place in VS Code right now.  So think of it as components and a suggested direction.  I'm not too much in favor of a modal experience as I don't perceive any of the UI actions as blocking - so I'd love to leave the interaction mode free.  <img width=""930"" alt=""screen shot 2016-04-04 at 9 18 12 pm"" src=""https://cloud.githubusercontent.com/assets/1051190/14260329/54ec6382-faab-11e5-8175-4e2e5a2c178d.png"">"
16329|@bgashler1 this is happening because git is listed as a dependency. Personally I think the off chance of `git` not being available to `apt-get` before an update if preferable to git integration not working out of the box.  I thought git came pre-installed on Ubuntu 14.04?
16330|Hmm. @alexandrudima, any ideas when this feature is coming to insiders? From reading it seems typescript 2.1 will be coming in 16-18 weeks?
16331|When this was previously reported, basically this is not possible as it requires an upload to Ubuntu's software repositor(ies). The reason we can't do this, apart from the fact it's inconvenient and difficult to automate, is because [our license for official builds](https://code.visualstudio.com/License/) is not compatible with [Ubuntu's license](http://www.ubuntu.com/about/about-ubuntu/licensing).
16332|@bgashler1 it should be happening on all platforms, not just Linux.
16333|"@seanmcbreen I'm not sure if modal was the right word to describe it.  Modal tends to mean, like you said, blocking further interactivity until an action has been taken by a user.  What I see this as is a management view, not a mode.  For instance, you could go back and forth between Editing views (including Explorer, Git and Debug) and the Management view via the action bar on the left and pickup right where you left off on each without losing any of your context or activity in the views.  Utilizing a ""view"" approach would allow us to take up the full real estate of the window, which allows us to give richer experience at discovering and managing extensions.  It also avoids editor management clutter by repurposing editors, as is used in Atom.  @stevencl what would you think of launching this management experience in a new window via <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>N</kbd> to do a side by side experience?  People with two monitors could easily make changes this way.  Or, perhaps this is a good opportunity for us to introduce the ability to tear off windows.  Also, @jrieken, I'm not sure I like replacing buttons in the activity bar, since it might be confusing where they went and it adds another level of interaction to get back to certain parts of the Editing views.  Rather, I would suggest simply adding an additional action button, and making that action button take us to a view that takes the whole window as I've described earlier.  Getting back to previous Editing views would then just be a click away,"
16334|@andy9775 at this point we can only refer you to the TS roadmap https://github.com/Microsoft/TypeScript/wiki/Roadmap.   We usually adopt a new TS version in the same vscode iteration it becomes available and support a setting to use a newer version (`typescript.sdk`).
16335|I think we need to get to the next level of detail on the user scenarios we want to support (i.e., the customer problems we want to solve) and the goals we have for the interaction. We run the risk of debating different UI designs without a shared understanding of the problems we are solving.
16336|"There is no preLaunchTask, I am using the default configuration for ""Launch Extension"":  ``` {     ""version"": ""0.2.0"",     ""configurations"": [         {             ""name"": ""Launch Extension"",             ""type"": ""extensionHost"",             ""request"": ""launch"",             ""runtimeExecutable"": ""${execPath}"",             ""args"": [                 ""--extensionDevelopmentPath=${workspaceRoot}""             ],             ""stopOnEntry"": false,             ""sourceMaps"": true,             ""outDir"": ""${workspaceRoot}/out""         }     ] } ```"
16337|I am able to F5 my extension just fine from the insiders build of Code but not from the public build. Uninstalling has no effect. Is there an AppData folder or something equivalent I can wipe out?
16338|"Having something that says ""Thread {name}"" might work. Another option would be to have an arrow or special highlighting that indicates the current thread. Also, to auto expand the thread that is currently being debugged (e.g. the last one paused)."
16339|I think this is blocked on https://github.com/Microsoft/vscode/issues/2784
16340|Love it, thanks for the contribution!
16341|"Sorry to bother, but I have tried many derivations of the following, and I still can't seem to find the secret sauce.  ""**/Css"": false, ""**/Css/*!(.cssx).css"":true  ""**/Css"": false, ""**/Css/!(*.cssx.css)"":true"
16342|@stevencl I addressed your feedback with the exception that I still allow the 'Load more stack frames' to be selectable since it has to be keyboard accessible like all our other actions. I just now nicely clear the selection and focus upon clicked. Try it out and let me know what you think
16343|Oops I thought I answered a few hours ago but apparently my message wasn’t sent. On your point 1,  > suggest to move `getOptimalWidth()` into the Viewlet base class since it seems to be used only for viewlets  I initially tried to do that but encountered the following bug: https://github.com/Microsoft/vscode/pull/4702#discussion_r57881357 (GitHub may fold the comment). Actually I don’t understand the distinction between Composite and Viewlet components.
16344|I am in favor. I can't think of any down sides. We still have control over the content and can accept help with PRs.
16345|> for me the implementation of `getOptimalWidth()` in working files and explorer view is not working (see my video below on mac)  This was introduced by a late git history cleaning, it’s now fixed.  > the fact that the sash no longer draws a full div for the cursor style seems to cause issues: if you drag the sidebar into the left until it hides and then back you see that the mouse no longer shows the resize cursor (the same is true when you size the panel in and out)  I wasn't able to reproduce this problem on my instance (Ubuntu).
16346|Also note that the current DOM measurement strategy has two important drawbacks: 1. `getOptimalWidth()` doesn’t work if the sidebar is closed, _ie_ you can’t double click on the closed sash to open the sidebar to its optimal width, which is expected; 2. if the explorer list is too long, VS renderer will break the list into multiple “tiles” that won’t be displayed concurrently, thus `getOptimalWidth()` will only consider visible elements and not the entire list.  For comparison both Atom and Sublime handle (2) correctly and don’t have problem (1) as they don’t allow sidebar opening using the mouse.
16347|@skyaddict it hasn't been implemented yet in vscode
16348|Just sneaking by saying that vscode 0.10.11 (on OS X Yosemite) stages all files for deletion while you least expect it. While browsing through todays diffs the counter suddenly stepped up from 22 modfied files to 99.   Checked console and $ git status showed all files staged for deletion. Happened at least 5 times now. Luckily $ git reset HEAD \* solves the problem.  Files are sshfs mounted from a ubuntu linux (webserver). vscode are not used for git actions besides that amazing diff.
16349|"Never mind, I misunderstood and was able to reproduce (I deleted my old, irrelevant comments to declutter).  Yes, @Tyriar you're right, this as global shortcut doesn't make sense to me either.  It's getting the `activeEditor` and selecting text when it doesn't have focus; I can't think of why we would want that.  ## Proposed Solution  I noticed that on click of a file Sublime immediately sets focus on corresponding editor it opens in.  We should do that as well.  Additionally, it would make sense to change the global shortcut to the `""when"":""editorTextFocus"" that @Tyriar proposed."
16350|Moving this to VS Code since it's a general issue. There doesn't appear to be anything an extension can do to override this, but even if there was, it seems to make sense to address generally.
16351|@bgashler1 that would make initiating explorer keyboard navigation impossible with the mouse (click + <kbd>&uarr;</kbd>).
16352|"@bpasero While I do welcome this API addition and **really** appreciate its inclusion, I'm not seeing any changes here on providing an API for opening a **new** window with a `vscode.Uri` provided (see my comment above).  Any chance that could land as well?  P.S. Sorry for resurfacing a ""closed"" issue, I just don't feel all the cases were addressed :smile:"
16353|I agree with @stevencl. Can we discuss the relevant user scenarios?   Extension life cycle - User Stories 1. Discover extensibility - the user is aware that extensions are available and understands why they may want to install an extension.  2. Specific extension discovery - the user can discover a specific extension to aide their workflow.  3. Relevant extension discovery - the user is given a customized recommendation experience to find relevant extensions.  4. Shop for an extension - The user is able to compare and contrast extensions to determine which one to install.  5. Learn how to use an extension - The user is given the necessary education (onboarding) to know how to use an extension effectively.  6. Configure an extension - the user has easy access to change specific settings within an extension.  7. Maintain an extension - The user can maintain an extension, including being made aware when it is causing a performance lag or needs an update. Also, includes a communication channel with extension creators for bug / issue feedback.  8. Uninstall an extension - The user has a positive experience uninstalling an extension.   In my mind each part of the above life cycle is important and should be considered in the design. Do you think these are relevant and should be considered? What would you change? Is there any user scenario you would add?   Many of the UI mockups seem to be addressing these stories and I feel good about the direction we are going.
16354|+1
16355|@Tyriar actually Sublime and Atom both change the focus to the editor immediately (but both are able to use keyboard navigation as well).  In in both competing editors, if you click again on the explorer, focus returns to the explorer and remains.  Then you can use keyboard focus.  I actually think this method works quite well.
16356|hi,@bpasero , ![1](https://cloud.githubusercontent.com/assets/2075006/14268167/85c334ea-fb0a-11e5-83dc-a9e9dcfb6968.png) ANSI , Chinese Simplified(GBK) .
16357|Hi Taylor,Thank you for your interest.I have upgraded to version 0.10.11... after that the error is not happening so often anymore... every 3 or 4 days that I keep VS Code opened I will have a crash, but it is probably some issue with the Samba in the VM (hyper-v) itself.A few days ago I had the issue and I went to the Windows Event Viewer (I am on Win10) but I didn't find anything specific to that error (maybe I was looking in the wrong place).thanks,Anderson  Date: Mon, 4 Apr 2016 10:19:27 -0700 From: notifications@github.com To: vscode@noreply.github.com CC: andersonluizferrari@hotmail.com Subject: Re: [Microsoft/vscode] Crash when samba connection drops (#515)  @bpasero I have still not seen any issues. @andersonferrari are you still seeing the problem?  — You are receiving this because you were mentioned. Reply to this email directly or view it on GitHub
16358|I have the same request !
16359|Hi **@aioutecism**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <span>You've already signed the contribution license agreement. Thanks!</span>         <p>The agreement was validated by Microsoft and real humans are currently evaluating your PR.</p>  TTYL, MSBOT;
16360|"@jrieken yeah, i want to create a new extension, everything is right until i run the new extension by F5. Than i had installed the ""cpptools"" before.   ![qq 20160405101023](https://cloud.githubusercontent.com/assets/2878674/14269404/e265a4ce-fb16-11e5-87d1-bd660740193d.jpg)"
16361|Can someone please tell me if [this](http://stackoverflow.com/questions/36413868/vs-code-intellisense-for-node-type-require) is supposed to work? I've spent the entire day reading just about everything I can - which was a mistake, because I'm pretty sure no one on the planet has the same answer - yes,no,with d.ts,without d.ts, typings, dst, .jsconfig, .tsconfig, user settings, etc - not one straight answer.  Sorry.
16362|Fixed it by deleting the directory that I downloaded it to, re-cloning, and following the instructions again for installing. No idea what went wrong
16363|"I tried by moving tsconfig.json to the workspace folder but still getting the same result. Also I observer that the default tasks.json setting is not able to identify tsconfig.json file and I need to pass files name with args[] explicitly like below:  {     // See http://go.microsoft.com/fwlink/?LinkId=733558     // for the documentation about the tasks.json format     ""version"": ""0.1.0"",     ""command"": ""tsc"",     ""isShellCommand"": true,     ""args"": [""test.ts"",""helloworld.ts""],     ""showOutput"": ""silent"",     ""problemMatcher"": ""$tsc"" } ** The Default setting looks like this.** {     // See http://go.microsoft.com/fwlink/?LinkId=733558     // for the documentation about the tasks.json format     ""version"": ""0.1.0"",     ""command"": ""tsc"",     ""isShellCommand"": true,     ""args"": [""-p"", "".""],     ""showOutput"": ""silent"",     ""problemMatcher"": ""$tsc"" }  ![image](https://cloud.githubusercontent.com/assets/17735796/14270096/7b54694a-fa9f-11e5-88dc-c247ba361efb.png)  ** My Tasks.json file look like below:** {     ""compilerOptions"": {         ""target"": ""es6"",         ""module"": ""commonjs"",         ""sourceMap"": true     },     ""files"": [         ""helloworld.ts"",         ""test.ts""     ]  }"
16364|@isidorn  It seems that the issue only occurs on Ubuntu, caused I've tested it on Win 7 and Mac OS, the error message didn't display. Maybe it caused by some operations related to super user permissions. If I run VS Code by the super user, the error messages went away.   Anyway, thanks for your help.  My learning extension project is [HERE](https://github.com/haoliangwu/vscode-poshi) if you need it for further discovery.  Hope you have a nice day !!
16365|"BTW, there should be a ""UI language"" in the User Settings, instead of only showing in the language which is the running OS' default UI language."
16366|@showerying you can set the locale from the command line or in a `locale.json` file, see here: https://github.com/Microsoft/vscode-docs/blob/vnext/release-notes/latest.md#localization
16367|@bgashler1 it used to not focus the editor in 1.5.x. It looks like that's the default now and no setting in atom/tree-view to configure it.
16368|Sorry, this is miss reporting
16369|Yes please!
16370|I suggest we close this and reopen when it happens again. Note though that there was no actual code change to fix the samba issue, it might still be there.
16371|@xianghongai can you attach it here?
16372|#1105
16373|@isidorn The two channels (latest builds 0.10.14-insider 2016-04-04 and 0.10.12-alpha 2016-04-05) still behave differently for me when I return the initialized event immediately after the initializeRequest response.    Everything appears to work except that if I pause the script and resume it, it finishes but then I get a popup `Error cancelled` window in VSCode.  I also note that we do not get the disconnect message from VSCode alpha (where I see this error).  Details on this are here https://github.com/Powershell/PowershellEditorServices/issues/196
16374|"New DEU string: Die Laufzeit ""{0}"" wurde in PATH nicht gefunden. Linguistic confirmed DEU does not generally use single quotation marks"
16375|Hi @dprice, we just released a new Insiders, let me know if that update works.
16376|"loc team says all instances of ""Shift"" are localized well, after all if we still see unlocalized ""Shift"", this probably implies localizability issue. @vsccarl can you attach a s/s of the untranslated ""Shift"" of the file menu."
16377|I would recommend installing GDebi first and using that as a deb installer. It will grab all dependencies automatically. http://packages.ubuntu.com/wily/gdebi or http://packages.ubuntu.com/wily/gdebi-kde for KDE users .
16378|@Tyriar git is never pre-installed on ubuntu.
16379|"Nice GIF. I wanted to post something like that but, while dev. tools are something I know well, screencasting and recording are things of which I ken naught. Can you recommend a tool for the making of such GIFs for future issue reports?  I see it's fixed for April, too. THIS is why I like VS Code - stuff actually happens! We had to wait ten years for ""collapse all"" in Solution Explorer!"
16380|What happened to the cache issue? I'm still spending much time waiting for the extension list to show...
16381|What version are you on? We've had an extension since March: #2621.
16382|Loc team fixed the translation according to the context.
16383|"All scopes enumeration values are translated except ""catch""."
16384|fixed that yesterday
16385|I see that is solved in last versions
16386|"Per loc team -  _ ""In UI strings there is frequently used following translations: Catch되지 않은 예외 확인할 수 없는 예외 Suggested translations are not used frequently.  If it has be to be fully translated, then I suggest ‘확인할 수 없는 예외’. The translation is changed to '확인할 수 없는 예외'_"
16387|I've created https://github.com/Microsoft/vscode/issues/4861 for the 'Error cancelled' message.
16388|Yes that works, but it seems that `module.exports.generateCanvas` should be `exports.generateCanvas`. This seems to be a bug because they are equivalent. If you add internal documentation, that documentation is also attached to the intellisense.  ![intellisense](https://cloud.githubusercontent.com/assets/1913805/14273412/d25b8f3c-fb0a-11e5-8082-d411b857b7d5.gif)  Some notes to take into account. - This is only the case for VS Code 0.10.11 (fixed in the insiders build and in the next release). When you require `file1.js` in a new file, it does not provide intellisense right away, it has to reload the project first by closing and reopening the project. - `module.exports` does not work for intellisense. Will create an issue for that.
16389|"@weinand source changes reflected to loc, instance of ""node"" in vscode-node-debug are modified to ""Node.js"""
16390|@joaomoreno missing space in ESN build is fixed, while the standard rule in French is a space before a colon.
16391|Issue created https://github.com/Microsoft/vscode/issues/4943
16392|@dbaeumer Double confirmed with loc team. Thanks
16393|0.10.11
16394|How fast can you GET this request? http://vscode.blob.core.windows.net/gallery/index
16395|This issue was moved to Microsoft/TypeScript#7824
16396|I get it quite fast now because my internet speed is back to normal, but I was asking about the cache because sometimes sometimes its slow and it becomes a pain when I want to quickly look for a package and/or install it. When I used sublime package manager it always downloaded a list of packages the first time I do a search. On subsequent searches it opened instantly and I could continue with my work regardless of internet speed.
16397|Fixed in the insider build. You can give it a try from our insiders release today: http://code.visualstudio.com/Download#insiders
16398|Thanks @egamma
16399|![badtooltip](https://cloud.githubusercontent.com/assets/647031/14274205/2d08b950-fb10-11e5-87cc-8b7897defd3d.png)  Here is an example of the problem. There is a tooltip in there and it is _Very_ hard to see it
16400|David mentioned this is a vscode issue only. I need to investigate again.
