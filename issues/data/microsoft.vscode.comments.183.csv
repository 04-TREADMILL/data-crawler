18201|"@isidorn please make sure that the DebugService works the way it is documented in http://code.visualstudio.com/docs/extensionAPI/api-debugging: ""Whenever VS Code receives a stopped or a thread event, VS Code requests all threads that exist at that point in time and displays them if there are more than one. If only one thread is detected, the VS Code UI stays in single thread mode. Thread events are optional but a debug adapter can send them to force VS Code to update the threads UI dynamically even when not in a stopped state."""
18202|@helmbold I am genuinely curious - _how_ do you use them efficiently? I've _tried_ and I just cant figure out how to make sense of the mess that is WF. (Also, somewhere way up in this issue, the team said that working files was really just an afterthought, not a planned feature.)
18203|"@eyalsk:  > the real problem is getting the design right and make sure the experience feels great for everyone, these who love tabs and these who hate it.  Pretty much everyone here has said they hope the tabs will be controlled by a setting for exactly this reason. That being said, while some software during early iterations of tabs years ago wasn't very nice to use, these days it's usually pretty good. Code has Sublime, Atom, and non-editors like browsers to look to for making tabs ""right.""  One feature I'd like to see that I haven't seen in any tabbed software and that I think would alleviate some issues with ""too many tabs"" is a way to select and drag multiple tabs out into a new window.  At the end of the day, human-computer interfaces for managing hundreds of files with long similar-looking names are always going to be lacking - that's not how we are designed to work, it's just how we're forced to work because of the current state of software engineering."
18204|"I created a file ""storage.json"" under  /Users/abhishah/Library/Application Support/Code-Development.  The contents of storage.json are {}.  Now when I run code.sh i get the following:  ‚ûú  vscode git:(master) scripts/code.sh --verbose [16:25:01] Using gulpfile ~/Downloads/vscode/gulpfile.js [16:25:01] Starting 'electron'... [16:25:01] Finished 'electron' after 461 Œºs  However, I still don't get the editor screen."
18205|"Respectfully, I believe this is still an issue that should be looked at, specifically in the portion of code that processes snippets. I checked my settings for ""editor.detectIndentation"", and here's what I found:  if ""editor.detectIndentation"" is set to true, and the document uses tabs for indentation: All ""\t"" characters in a snippet are translated to tab characters in the document. (correct)  if ""editor.detectIndentation"" is set to true, and the document uses spaces for indentation: ""\t"" that precedes other alpha characters in a snippet is translated to spaces (correct) ""\t"" after other alpha characters in a snippet is left as a tab character. (incorrect)  if ""editor.detectIndentation"" is set to false, and ""editor.insertSpaces"" is set to false: All ""\t"" characters in a snippet are translated to tab characters in the document. (correct)  if ""editor.detectIndentation"" is set to false, and ""editor.insertSpaces"" is set to true: ""\t"" that precedes other alpha characters in a snippet is translated to spaces (correct) ""\t"" after other alpha characters in a snippet is left as a tab character. (incorrect)  I'm not sure of the protocol on closed issues (can they be reopened)? If I should open a new one, please let me know."
18206|eventually we will use:  http://go.microsoft.com/fwlink/?LinkId=786907?lang=XX
18207|"Windows 7 Node js : v4.4.3 ![image](https://cloud.githubusercontent.com/assets/13737944/14623666/543dfb88-05a2-11e6-9590-7ccb43f1592a.png)  ![image](https://cloud.githubusercontent.com/assets/13737944/14623550/2fc2db12-05a1-11e6-8fde-056dce959ed7.png)  just curious why the Node version says 4.1.1 on the ""about"" window of VS code"
18208|"@anyong sure! adding options isn't a problem at all, I mean the problem starts when you're asking yourself what options are redundant and what options are actually useful, programs that were designed with tabs in mind from the get go have it really easy for multiple reasons but mainly because tabs isn't an afterthought, also, it's not possible to compare one editor to another or even to another program that has tabs mainly because the navigation story is generally different from program to program, different programs aim to focus on different things.  Just because Sublime/Atom or another program has tabs and it works well there doesn't mean you can take all the things that work there and bake it into your program, that's not how things work, in fact that's how things _can_ fail! it's successful there because the whole package makes it successful.  Now, adding a new kind of user experience to the editor kinda require you to re-evaluate the whole navigation story including existing features like ""working files"", especially when you have existing consumers where each person expects it to work like their editor of choice and you can tell from the posts that many of them have high standards to how it should work. :)"
18209|:+1:
18210|Thanks for the s/s, @GoBijan is this Git panel resizable by user?
18211|Why are you reporting a bug on an alpha release that you said doesn't happen on the stable release?
18212|I think this issue is related to #5386 ?
18213|fox example the picture. ![qq 20160419111710](https://cloud.githubusercontent.com/assets/13378254/14626882/02210f9a-0622-11e6-948d-027168bd9ca4.png)
18214|It dizzied me...but I do not want to give up the vscode... it is a nice application for developers...
18215|Ok, seems unrelated then. Though I wonder why this file could not be created in the first place. Are you running Code with a different user account or permissions?
18216|Hi @chrisdias, I've updated the PR.
18217|Pushed a change that introduces a new keyword property for workbench and editor actions. Command palette filters on either the action label (translated) or these keywords (english) to show results. We do not show the keywords in the UI anywhere. Feedback (in our next insider build) is welcome.
18218|@juol I cannot reproduce. does it not work after a restart even?
18219|> @bpasero I think we need both of localized text and keyword shown on the UI. If only localized one is shown, how do I know the keyword for it?  vote for above. Some times, the localized one is not easy for input because different IME
18220|Ah yeah that is the same issue.
18221|Almost every PHP developer will need this feature in order to pick VSCode as their primary editor.   We need this issue to be fixed in order to target more developers.  Yesterday I tried bumping my head against this problem but unfortunately my lack of TypeScript skills are holding me back to help you on this issue.
18222|@chrisdias @stevencl @bgashler1 what do you suggest? should we show the keywords after each command maybe only for some languages?  ![image](https://cloud.githubusercontent.com/assets/900690/14629604/cc400bbe-05ff-11e6-9ae3-6605e47d500f.png)
18223|Ok, works on opening code from command line in a directory: `code .`  But not from command line when opening file directly:  `code .bash_profile`
18224|Same issue here. In one project it works in another (was a copy of the first) it doesnt. Same content in jsconfig.json. Typings are underlined though.
18225|To everyone  For now, I didn't even know why should we **must** locallize all commands? I think the command should be **accurate english**, so we can know what we should input without changing IME. If we want to add localized description, we can show localized desc after the accurate command. rather than now, the command is localized, and the description is a little fuzzy compare to the real command. I think the result is a little inverse.
18226|I think this also a dup of #747.
18227|"@be5invis,  For `ja`, `""Hiragino Kaku Gothic Pro""` seems better than `""Hiragino Kaku Gothic""`. At least, I cannot find web sites using `""Hiragino Kaku Gothic""`."
18228|Also works for me. Are you sure you are not mixing insiders release with stable release maybe and the setting only applies to the insiders?
18229|It is. I've also added a `title` attribute, so the user will get the full information on hover.
18230|"Using 1.0.0,  `""Vagrantfile"": ""ruby""`  works fine, so the new setting is there.  I don't have a shebang at the top of my `.bash_profile` as it is sourced and not executable. That's why I'm trying to do this. Still not working on my box."
18231|Thx guys! You're doing an awesome job with VSCode :) üëç
18232|@dbaeumer I cannot reproduce though, do you maybe have a broken installation?
18233|This works for me without any problems:  ![capture](https://cloud.githubusercontent.com/assets/1931590/14631152/508c9290-0612-11e6-9305-4b8e480bfadc.png)  Any additional hints. Could you share your example?
18234|"fcb8e57 affects no functionality whatsoever except the UI language name. The change in that commit forces that the language name (the label that shows in the bottom right corner) is always used from the first time a language was contributed.  Here is what gets contributed when installing `MagicPython`: - from our default python extension:  ```     ""contributes"": {         ""languages"": [{             ""id"": ""python"",             ""extensions"": [ "".py"", "".rpy"", "".pyw"", "".cpy"", "".gyp"", "".gypi"" ],             ""aliases"": [ ""Python"", ""py"" ],             ""firstLine"": ""^#!/.*\\bpython[0-9.-]*\\b"",             ""configuration"": ""./python.configuration.json""         }],         ""grammars"": [{             ""language"": ""python"",             ""scopeName"": ""source.python"",             ""path"": ""./syntaxes/Python.tmLanguage""         },{             ""scopeName"": ""source.regexp.python"",             ""path"": ""./syntaxes/Regular Expressions (Python).tmLanguage""         }] ``` - from `MagicPython`:  ``` ""languages"": [             {                 ""id"": ""python"",                 ""aliases"": [                     ""MagicPython"",                     ""python""                 ],                 ""extensions"": [                     "".py"",                     "".py3"",                     "".rpy"",                     "".pyw"",                     "".cpy"",                     "".SConstruct"",                     "".Sconstruct"",                     "".sconstruct"",                     "".SConscript""                 ]             }         ],         ""grammars"": [             {                 ""language"": ""python"",                 ""scopeName"": ""source.python"",                 ""path"": ""./grammars/MagicPython.tmLanguage""             }         ]  ```  VSCode correctly respect the overwriting of the grammar (see below screenshots of coloring before & after), also all the additional file extensions added to python. The only thing that gets ""stuck"" is the language name (the UI label) as `Python`.  At the time of fcb8e57 I thought that to be a good decision (i.e. why would a single programming language have 2 or more different names or why would they be different). I didn't realize extensions use this as a sort of ""branding"" for the grammars.  IMHO this issue is not important (no need for backporting) as there is 0 functionality impact, it is a usage of the `alias` in a way I have not foreseen (as a branding mechanism instead of as an alias to a programming language).  Before installing `MagicPython` in the Quiet Light theme:  ![image](https://cloud.githubusercontent.com/assets/5047891/14631306/8762308c-061b-11e6-848c-7058d6e01b35.png)  After installing `MagicPython` and restarting (also in the Quiet Light theme): ![image](https://cloud.githubusercontent.com/assets/5047891/14631322/9f0921fa-061b-11e6-86d2-9f962cdf1504.png)"
18235|@egamma do you have a rough date on when this might be available?
18236|Issues can always be reopened, no need to create a new one. Thanks for the detailed analysis
18237|@T0toro  Can you try to run VS Code without extensions? From the command line, execute: code --disable-extensions  i try but in not help.
18238|@bpasero good catch. It looks like they use different standard codes simplified and traditional Chinese. Although it depends on how we use it at the end of the day.  Good examples for CSS are found here: https://www.w3.org/International/questions/qa-css-lang
18239|@joaomoreno I checked and the info.plist was in fact from April 13th.(before the install of the new Code)
18240|Another good read is: http://www.w3.org/International/articles/language-tags/
18241|By analyzing the blame information on this pull request, we identified @alexandrudima, @egamma and @isidorn to be potential reviewers
18242|@joaomoreno I would add mention bot config to add Erich to the blacklist otherwise he will always be mentioned since he did the initial commit.
18243|@isidorn I think @egamma is always interested in getting pinged about PRs, so no worries.
18244|And what does the `CFBundleExecutable` value have?
18245|Reading the last document it looks like zh-CN and zh-TW are valid as well but zh-Hans and zh-Hant are preferable. I will change the code to use these for the lang attribute.
18246|Fixed as suggested.
18247|Well, it turns out it only worked on my PC: my colleagues still have the error on their machines. We have the exact same local config, the same global `.npmrc`, the same environnment variables (if any of that helps). The only difference we have if that I use Windows 10 and they're on Windows 7. And I used the insider version before the official release (which wasn't working for me anyway).
18248|Actually VSCode supports that for language that provide symbol index features. To get the symbols for a single document use Ctrl+Shift+O. To get the symbols for a whole workspace use Crl+T and type the symbol name you are searching for.  ![capture](https://cloud.githubusercontent.com/assets/1931590/14632654/33f491b6-061a-11e6-9337-ce24260e9da6.png)  ![capture](https://cloud.githubusercontent.com/assets/1931590/14632692/60cf405a-061a-11e6-9186-6768dd41a747.png)
18249|We don't have multiple window support tight now. But you can open more then one file in the editor. To switch between the files use Ctrl+Tab or the working file list in the explorer.  ![capture](https://cloud.githubusercontent.com/assets/1931590/14632765/b765c7a4-061a-11e6-83c9-01d73b2398b2.png)  @bpasero moving to you for the multi window request.
18250|Lets rename the exception to 'Illegal line number' without mentioning the line.
18251|The API should be fit for it but it's a limitation of our underlying message service.
18252|I hope vscode can open files by multiple windows like sublime text.thanks
18253|@bpasero assigning to you since I remember you looked into a similar issue. Interesting is that @OMGtechy points out Slack (which is an electron app) has similar behavior.
18254|Also: Error: Internal module service.js not found.  /vs/workbench/parts/debug/node/rawDebugSession.ts#79:29   /vs/base/common/winjs.base.raw.js#1470:0 (onError)   /vs/base/common/winjs.base.raw.js#1176:0 (_notify)   /vs/base/common/winjs.base.raw.js#1343:0 (enter)   /vs/base/common/winjs.base.raw.js#1316:0 (_run)   /vs/workbench/parts/debug/node/v8Protocol.ts#79:5 (errorDispatch)   /vs/workbench/parts/debug/node/v8Protocol.ts#147:5 (clb)   /vs/workbench/parts/debug/node/v8Protocol.ts#114:11 (dispatch)   /vs/workbench/parts/debug/node/v8Protocol.ts#69:8 (handleData)
18255|Changes implemented as suggested.
18256|Fixed as suggested.
18257|This is a problem with the ionide fsharp extension.
18258|But it doesn't work in PHP by Ctrl + T and Ctrl + Shift + O.
18259|@dbaeumer
18260|@Tyriar what is via and how to get it?
18261|Dups #5476
18262|@bpasero starting with you since this might come from the quick open controller.
18263|"Strings fixed.  Linguistic answer:  Instead of the original or suggested translation is used ""markdown"" to keep consistency with TS: there is one occurrence of the term ‚Äúmarkdown‚Äù in TermStudio for ko-KR (markdown file, src ID 2355577) and ‚Äúmarkdown‚Äù is kept in English."
18264|This should be fixed on latest alpha, @weinand filled a bug regarding this 2 weeks ago but I can not find it right now
18265|This is coming from the node adapter, forwarding to @weinand
18266|We are highlighting the blank line because the adapter sends the stop event on that line. I believe this is desired behavior, what do you get when you use node-inspector in the same setup?  Forwarding to @weinand so he can decide if this is as designed
18267|Likely #508. I have a change pushed to test something out in insiders.
18268|@sswangifly you need to set the encoding in your settings either globally or per workspace.  #5388 is the duplicate.
18269|@bpasero, @bgashler1 and I have started working on the UX designs for improving document management. We're watching all the feedback on this issue carefully and have spoken to a handful of you already to get more details about your own unique experiences and perspective.  We would now like to share our early designs with you to get your feedback. We will host a Google hangout on Thursday 21st April at 4pm BST. If you want to join us, please click this link at that time: https://hangouts.google.com/call/u3wnrhjja5h47ovt7piatelkxme  This will be our first public design meeting and we're looking forward to it.
18270|@juol actually it seems that any .bash_profile is associated to shell. When you look at the language indicator in the bottom right corner, what language is shown for .bash_profile?  See my video how it shows the language to be shell:  ![untitled](https://cloud.githubusercontent.com/assets/900690/14633979/edea8cfe-0617-11e6-846d-e4f94cfc0320.gif)
18271|Regarding this, as a newcomer to VS Code I found [the official docs](https://code.visualstudio.com/Docs/languages/javascript#_disable-syntax-validation-when-using-non-es6-constructs) very helpful.
18272|For this we need https://github.com/Microsoft/vscode/issues/1161  Marking as duplicate.
18273|@stevencl @bgashler1 this should be one input to our notifications discussion.
18274|duplicate of  #5494
18275|duplicate of #5016
18276|This is scary but not reproducible and seems to indicate a half broken installation.   @joaomoreno fyi if you ever saw this before. happened after the nightly update.
18277|I have filed https://github.com/Microsoft/TypeScript/issues/8168 to clarify the TypeScript part of this
18278|Thanks @lukaschal
18279|@johnliu2016 @lukaschal   Where is these files? How to participate i18n?
18280|@espresso3389 thanks
18281|Got addressed by @isidorn refactoring around output channels.
18282|@bpasero is there anything I need to do. If so please assign back to me and let me know what I can do.
18283|@v-pavanp I tried to reproduce this but failed. Can you point me to the example you used.
18284|Fixed for April.
18285|Closing this. Please reopen @dbaeumer if you still see it
18286|@biij5698 In case you didn't already know, you can open two (or three) files side-by-side in the same window.  For example, if you left-click a file in the file explorer it will open. If you left-click another file while pressing 'ctrl'-key, it will open in a second editor area. This way you can see both files at the same time.  You can load another file in the left-side editor by simple left-click, and another file in the right-side editor by doing left-click while pressing 'ctrl'-key.
18287|Fixed as suggested.
18288|By analyzing the blame information on this pull request, we identified @isidorn, @joaomoreno and @egamma to be potential reviewers
18289|Hi **@rebornix**, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!     <p>         It looks like you're a Microsoft contributor (Peng Lv (PENLV)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.     </p>  TTYL, MSBOT;
18290|@dbaeumer sorry, I only assigned this to you to verify this issue since my intent was to close it.  The general issue of not being able to find commands using english in other languages is fixed. Wether to show keywords within the UI or not translate the commands at all is up for discussion.
18291|"I've run `./scripts/test.sh` and all unit test cases passed. CI is saying `The command ""git submodule update --init --recursive"" failed and exited with 1 during .`, not sure what I can do here to bypass."
18292|@aeschli the locale.json file is living in ~/AppData/Roaming/Code - Alpha/User. Can I register a shema for this location?
18293|When I discussed this with @egamma and @chrisdias we actually thought a menu would be nicer. I opened #5503 to track the menu option
18294|IMO we should disable language feature for the left hand side of a diff viewer? @jrieken what is your take.
18295|@chwentao are you suggesting such a extension should come out of the box with VS Code. VSCode's Extension API allows to implement such an extension.
18296|I trust your screen shot but I have failed to reproduce this. Also the code looks pretty straight forward... @shardulm94 anythings else that would allow me to reproduce this?
18297|@biij5698 can you explain to me in more words what exactly you are missing to do in VS Code?
18298|Our menus might be getting cluttered. I would still prefer to have schema validation as this keeps a consistent story across all our settings.
18299|1.0 crashes almost every night. Windows 10 Ent. Plugins: Spelling and Grammar Checker, ESLint
18300|fyi @bpasero @alexandrudima
