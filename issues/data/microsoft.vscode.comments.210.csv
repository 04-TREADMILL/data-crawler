20901|This issue was moved to Microsoft/TypeScript#8527
20902|This issue was moved to Microsoft/TypeScript#8528
20903|@weinand no, we were both discussing this with Sofian far back. Here's the pr https://github.com/Microsoft/vscode/pull/3054 and I forwarded you a mail thread where we were discussing this with Sofian
20904|@wangyibu can you provide the content of the tsconfig.json file?
20905|The input to the translation team contains extension as well. You can always check if the string got translated by checking the content in the i18n folder. Looks like this one didn't.  @jrieken moving back. Feel free to close and assume that the string will come back in the next translation round if correctly externalized.
20906|As said in the OneNote I only tested it under Windows :-). And the vscode-distro translations are Windows only. Need to check if this makes it fail.
20907|They are however the content is generated on the first time use. If you switch later we don't replace the content. No further action planned.
20908|@taoqf can you share your project. Otherwise it is very hard to understand what might cause this.
20909|This issue was moved to Microsoft/TypeScript#8530
20910|I rely on the tsc watcher here.   @Brakkar which version of tsc are you using (run tsc --version). And do you expierence the same behavior when starting tsc directly in a terminal for this project.
20911|No need to port this change from `release/1.1` to `master` because cb0977bb8d4a592a73654815bf0267f5a139d75f fixed it on master already. I just didn't realize it was a recent regression introduced by the new Electron version update.
20912|Steps to verify: - have a file.ts:  ``` interface comeon { } ``` - hover over comeon - right click on comeon - click somewhere else (not on an action) - hover no longer shows   > This is caused because the contextmenu disables the hover while it is being shown for historic reasons (if the contextmenu is implemented in HTML and not natively)
20913|@warpdesign do you exclude the node_modules folder in the tsconfig.json?  If we want to have such a setting then it needs to go into the tsconfig.json. The symbols shown in the list come from the tsserver and IMO showing the lib.d.ts is correct since these symbols are globally available.
20914|@bpasero We could get it to reproduce only on the insiders build (not from dev, not from built without minification, really, only in the insiders build).  Steps to verify: - install path intellisense extension - reload a lot of times - no exceptions should show, as the activation of extensions is now blocked on the main side confirming it received the extension descriptions. - because the extension descriptions are handled sync (i.e. the configuration extension point handles the new config defaults sync, they should make it across to the extension host before the main side can confirm it received the extension descriptions).
20915|@simonguo @hiyangguo voila the link to the [JavaScript doc](https://code.visualstudio.com/docs/languages/javascript#_disable-syntax-validation-when-using-non-es6-constructs)
20916|Closing this issue since adding support for Object Rest Spread is already tracked in the TypeScript repository.
20917|@joaomoreno don't know either. When I tested it for node I change the system locale. I think you need to do the same for electron.
20918|@aeschli IMO we need to rethink this strategy here. Currently the workbench removes the markers for closed documents which causes issues. However if the service for some reason recomputes them they are added back.  This is something we need to tackle in May to get a better consistent story here.
20919|This issue was moved to Microsoft/vscode-eslint#75
20920|"Emmet is enabled by default in PHP files. You can disable emmet abbreviation expansion on TAB using the following setting:   ``` json     ""emmet.triggerExpansionOnTab"": false ```"
20921|@aeschli do we still have that feature ?
20922|Great to hear.
20923|This issue is not very consistent. One day it works but another day it doesn't. I'll try to get a screenshot when I see it again. So I think the repo itself doesn't have a problem but maybe there are some conflicts with Docker running in the background?
20924|This issue was moved to Microsoft/vscppsamples#41
20925|@srlim it would help if you could share the launch config that produces the `Error: Attribute 'program' does not exist ('path')` error.
20926|IMO even in German, French we should not all caps these. In English they are:  ![capture](https://cloud.githubusercontent.com/assets/1931590/15113772/95697056-15f6-11e6-9b7e-0f5ea3ee6055.png)
20927|The differences that you are seeing in JS and HTML are because we have different tokenizers than http://tmtheme-editor.herokuapp.com. The scopes that tokenenizers should emit are only loosely specified, so there's no easy right or wrong. But if you have a specific request, please make a request with: - code example showing a specific token - the scope you are expecting for that token
20928|"This is the launcher.json:  ``` json {             ""name"": ""test"",             ""type"": ""node"",             ""request"": ""launch"",             ""program"": ""${workspaceRoot}/node_modules/mocha/bin/mocha"",             ""stopOnEntry"": false,             ""args"": [""test/ui-tests/*-tests.js""],             ""cwd"": ""${workspaceRoot}"",             ""preLaunchTask"": null,             ""runtimeExecutable"": null,             ""runtimeArgs"": [                 ""--nolazy""             ],             ""env"": {             },             ""externalConsole"": false,             ""sourceMaps"": false,             ""outDir"": null } ```"
20929|This issue was moved to Microsoft/TypeScript-TmLanguage#164
20930|duplicate of https://github.com/Microsoft/TypeScript-TmLanguage/issues/121
20931|@jaume-solis See Ben's comment.
20932|@alexandrudima thanks, I was able to reproduce from insiders on windows too.
20933|Th coloring of the provided sample looks all fine to me. Closing. @vsccarl Scott, if I overlooked something, please reopen with more detailed information.
20934|The JavaScript quick fixes were lost when we updated to Salsa.
20935|@skolmer it is possible to have a watcher task as a `preLaunchTask` in `launch.json`. Just checkout the VScode typescript extension template - it has a watching preLaunchTask. What is your watch task, can you create a small reproducable sample for which we can try to reproduce this.  @dbaeumer I guess it might happen that I am not getting an 'inactive' event from the tasks framework for @skolmer use case
20936|@isidorn not sure if you or @joaomoreno
20937|:+1:
20938|That is me, dup of #195 It should only happen on the last added watch expression
20939|I aggre! For some very special use cases, passing in overtype mode can be very useful (for example to create a padded table in ascii mode).  And in OS X there is no physical key to toggle insert/overtype so this future feature will be necessary to be accessed by a command or in the status bar (like Word).
20940|@sandy081 please also try with VSCode 1.0 so we see if it is a regression
20941|I am also seeing this in the VARIABLES pane  ![capture](https://cloud.githubusercontent.com/assets/1931590/15114933/a63c7df0-15fc-11e6-8e56-95db5450362a.png)
20942|@isidorn [This](https://github.com/skolmer/react-hot-boilerplate-vscode) is the project boilerplate I'm working on. It has a watching task that runs webpack-dev-server. If you set `development` task as a prelauchTask in launch.json and hit <kbd>F5</kbd> you can reproduce the described behavior.
20943|@dbaeumer Then it is a different issue. In the explorer are the twisties aligned?
20944|@dbaeumer I double checked and I am not getting the Inactive event from the tasks framework in this case. Forwarding to you
20945|Closing, all fine. The confirmation dialog only needs to appear with closing VS code, not just the editor.
20946|Incidentally, @chrisdias, I don't see the debug toolbar disappear when switching to the explorer viewlet while in debug mode. As @bgashler1 mentions above, the debug toolbar might be enough feedback to communicate the state of the debugger as long as it doesn't disappear when switching to another viewlet when in debug mode?
20947|The debug toolbar does not dissapear
20948|It seems to be 1px lower than it should on linux. I also see it for the explorer - though it is less visible
20949|"@dbaeumer   tsc --v Version 1.8.10  On the terminal I ran ""tsc"" from within project directory, the compiler did its job. But editing and saving files subsequently from vscode didn't trigger an rebuild."
20950|@bpasero why don't we add a win / mac / linux css class top level, similar to what we do with `vs-dark`. That way I could style this twistie differently for linux (move it on 1px up)
20951|Dup of #6184
20952|"@lukaschal Duplicate shortcut keys in [textFileServices.nls.resx.lcl](https://monacotools.visualstudio.com/DefaultCollection/Monaco/_git/MonacoLocalization#path=%2FLocalize%2Fchs%2Fvscode%2Fsrc%2Fvs%2Fworkbench%2Fparts%2Ffiles%2Felectron-browser%2FtextFileServices.nls.resx.lcl&version=GBmaster&_a=contents)     <Item ItemId="";dontSave"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[Do&amp;&amp;n't Save]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">             <Val><![CDATA[不保存(&amp;&amp;S)]]></Val>           </Tgt>         </Str>         <Disp Icon=""Str"" />         <Modified By=""ICizkova"" DateTime=""2016-03-10T16:02:41Z"" />       </Item>       <Item ItemId="";save"" ItemType=""0;.resx"" PsrId=""211"" Leaf=""true"">         <Str Cat=""Text"">           <Val><![CDATA[&amp;&amp;Save]]></Val>           <Tgt Cat=""Text"" Stat=""Loc"" Appr=""PreApproved"" Orig=""New"">             <Val><![CDATA[保存(&amp;&amp;S)]]></Val>           </Tgt>         </Str>         <Disp Icon=""Str"" />         <Modified By=""ICizkova"" DateTime=""2016-03-10T16:02:41Z"" />       </Item>  Note &amp;&amp; denotes a mnemonic"
20953|"Shortcut moved to ""N"" according to source.  File: src\vs\workbench\parts\files\electron-browser\textFileServices.nls.resx ID: src\vs\workbench\parts\files\electron-browser\textFileServices.nls.resx SRC: Do&amp;&amp;n't Save TGT: 不保存(&amp;&amp;N)"
20954|Looks like in https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/search/node/textSearch.ts#L116 we are getting the new line characters (CR, LF, Bell (?)) and this causes the pattern to not execute because it is not going multiline.
20955|"@lukaschal  Key combination, keyname elements are in, e.g. deu [keyCodes.nls.resx.lcl](https://monacotools.visualstudio.com/DefaultCollection/Monaco/_git/MonacoLocalization#path=%2FLocalize%2Fdeu%2Fvscode%2Fsrc%2Fvs%2Fbase%2Fcommon%2FkeyCodes.nls.resx.lcl&version=GBmaster&_a=contents)  Please review all of the languages, note the keys are in pair (short and long),  such as ""ctrlKey"" and ""ctrlKey.long"", some of the short key may have to be shortened"
20956|@Janne252 hm, would you be able to provide a sample extension that I could run to reproduce this? I believe it has something to do with how the URI is created and flowing through the system. Thanks!
20957|Waiting for linguistic input.
20958|I'm the author of https://marketplace.visualstudio.com/items?itemName=GuardRex.status-bar-tasks  It would make sense for the output generated from the tasks fired off by the extension to appear in the existing Tasks output pane. As it stands, I had to create my own pane, which I called 'Status Bar Tasks.' Users now have two panes for basically the same ouput: If they execute a task using the command palette, the output goes to 'Tasks;' and if they execute a task from my extension, it goes to the pane that I setup.
20959|:+1:
20960|> if the Terminal application is not running, does VS Code make the Terminal application start  No.  I've created a screen cast: https://youtu.be/xpZOi9hqT4M  Should also mention that I have a case _sensitive_ file system. (You may notice that I'm using typescript 1.9.0-dev, ref #5161.)
20961|@dbaeumer I shared already a part of the project tree at the issue description. Is this enough or do you need more? Unfortunately the code is not opensource.  The strange thing is, that it worked with VSCode before version 1 with this configuration. Do I need to change something with the update to version 1? I didn't found anything in the release description
20962|"I'm sorry, I was wrong about the toolbar disappearing when you switch viewlets. The thing that I was thinking about was that you have to bring up the debug viewlet to be able to press the ""Play"" button. When I move away from the debug viewlet, there is no button to press, and I like to press the button rather than hit F5 for some reason. I apologize for the confusion.  Going back to the original question... the problem is that we don't bring up the debug viewlet when we hit a breakpoint as aggressively as before. As brad says we have the toolbar in view and we have the orange status bar.  Does the badge in the activity bar help us here?"
20963|"I'd be all for a command being added to configure this for the current user. Though I have to wonder why you don't just provide an option for installing the context menu to all users and then sticking the registry settings in the HKLM hive. Running a system as a non-admin should be what we are all doing these days right?   I converted the registry keys posted by @joaomoreno above into a PowerShell script. Only the script will install the keys at HKLM so it will work for all users on the system. If you only want the context menu for the current user then just change the `$regHive` variable to 'HKCU:'  ``` ## Configure Open with VSCode Context Menu ##  # Get CPU architecture and configure VSCode location $isOSx64 = (Get-WmiObject -Class Win32_ComputerSystem).SystemType -match '(x64)' $programFiles = If ($isOSx64) { ""%PROGRAMFILES(X86)%"" } Else { ""%PROGRAMFILES%"" } $vscodeLoc = [Environment]::ExpandEnvironmentVariables($programFiles) + '\Microsoft VS Code\Code.exe' $regHive = 'HKLM:'   # Change this to 'HKCU:' if you only want this for your current user  # Configure Open with VSCode for files New-Item -Path ""$regHive\SOFTWARE\Classes\*\shell\VSCode"" Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\*\shell\VSCode"" -Name '(Default)' -Type ExpandString -Value 'Open with VSCode' Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\*\shell\VSCode"" -Name 'Icon' -Type ExpandString -Value ""$vscodeLoc"" New-Item -Path ""$regHive\SOFTWARE\Classes\*\shell\VSCode\command"" Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\*\shell\VSCode\command"" -Name '(Default)' -Type ExpandString -Value ""`""$vscodeLoc`"" `""%1`""""  # Configure Open with VSCode for Directories New-Item -Path ""$regHive\SOFTWARE\Classes\directory\shell\VSCode"" Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\directory\shell\VSCode"" -Name '(Default)' -Type ExpandString -Value 'Open with VSCode' Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\directory\shell\VSCode"" -Name 'Icon' -Type ExpandString -Value ""$vscodeLoc"" New-Item -Path ""$regHive\SOFTWARE\Classes\directory\shell\VSCode\command"" Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\directory\shell\VSCode\command"" -Name '(Default)' -Type ExpandString -Value ""`""$vscodeLoc`"" `""%V`""""  # Configure Open with VSCode for Directories while inside the directory (right-click on empty space) New-Item -Path ""$regHive\SOFTWARE\Classes\directory\background\shell\VSCode"" Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\directory\background\shell\VSCode"" -Name '(Default)' -Type ExpandString -Value 'Open with VSCode' Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\directory\background\shell\VSCode"" -Name 'Icon' -Type ExpandString -Value ""$vscodeLoc"" New-Item -Path ""$regHive\SOFTWARE\Classes\directory\background\shell\VSCode\command"" Set-ItemProperty -LiteralPath ""$regHive\SOFTWARE\Classes\directory\background\shell\VSCode\command"" -Name '(Default)' -Type ExpandString -Value ""`""$vscodeLoc`"" `""%V`"""" ```"
20964|@arve0 mentioning the case sensitive file system might have helped to find the problem: the node-debug extension references an AppleScript helper through a path with the wrong character case.  Could you please change the name of the Apple Script helper from `TerminalHelper.scpt` to `terminalHelper.scpt`. You can find the helper inside the VS Code application bundle:  `/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/extensions/node-debug/out/node/TerminalHelper.scpt`
20965|Sweet! That worked 🎉 Thanks.
20966|@bpasero [https://github.com/Janne252/vscode-uri-test](https://github.com/Janne252/vscode-uri-test)
20967|@isidorn error shows up nicely but stopped reason is missing; see https://github.com/Microsoft/vscode/issues/6214
20968|I've noticed this as well. Not sure how it tries to detect what version of GIT I have installed, but I did not install Git to the default location (I chose c:\dev\git) so I don't know if that has something to do with it or not
20969|The Ctrl+A also selects all text on the editor windows instead of the debug console.
20970|Still repros on latest code-alpha on Windows 10.
20971|@isidorn I've confirmed the fix.  Thanks!
20972|Thanks!!
20973|"@dbaeumer here it is  ``` json {   ""compilerOptions"": {     ""target"": ""es5"",     ""module"": ""commonjs"",     ""preserveConstEnums"": false,     ""moduleResolution"": ""node"",     ""noImplicitAny"": true,     ""sourceMap"": false,     ""inlineSourceMap"": false   },   ""files"": [     ""admin-reference.d.ts"",     ""reference.d.ts""   ] } ```  ## reference.d.ts  ``` ts /// <reference path=""typings/generic.d.ts"" />  /// <reference path=""javascripts/checker.ts"" /> /// <reference path=""javascripts/form.ts"" />  //grunt-start /// <reference path=""javascripts/modules/academia.ts"" /> /// <reference path=""javascripts/modules/analytics.ts"" /> /// <reference path=""javascripts/modules/base.ts"" /> /// <reference path=""javascripts/modules/bluebirdfill.ts"" /> /// <reference path=""javascripts/modules/cep.ts"" /> /// <reference path=""javascripts/modules/cleanmask.ts"" /> /// <reference path=""javascripts/modules/cnpj.ts"" /> /// <reference path=""javascripts/modules/cpf.ts"" /> /// <reference path=""javascripts/modules/currency.ts"" /> /// <reference path=""javascripts/modules/email.ts"" /> /// <reference path=""javascripts/modules/equalizer.ts"" /> /// <reference path=""javascripts/modules/facebook.ts"" /> /// <reference path=""javascripts/modules/file.ts"" /> /// <reference path=""javascripts/modules/flatten.ts"" /> /// <reference path=""javascripts/modules/length.ts"" /> /// <reference path=""javascripts/modules/loading.ts"" /> /// <reference path=""javascripts/modules/login.ts"" /> /// <reference path=""javascripts/modules/maps.ts"" /> /// <reference path=""javascripts/modules/mask.ts"" /> /// <reference path=""javascripts/modules/nascimento.ts"" /> /// <reference path=""javascripts/modules/pad.ts"" /> /// <reference path=""javascripts/modules/percentage.ts"" /> /// <reference path=""javascripts/modules/pheryResource.ts"" /> /// <reference path=""javascripts/modules/planner.ts"" /> /// <reference path=""javascripts/modules/preload.ts"" /> /// <reference path=""javascripts/modules/resume.ts"" /> /// <reference path=""javascripts/modules/scroll.ts"" /> /// <reference path=""javascripts/modules/stacktrace.ts"" /> /// <reference path=""javascripts/modules/user.ts"" /> /// <reference path=""javascripts/app/main.ts"" /> /// <reference path=""javascripts/app/sections/checkout.ts"" /> /// <reference path=""javascripts/app/sections/done.ts"" /> /// <reference path=""javascripts/app/sections/index.ts"" /> /// <reference path=""javascripts/app/sections/indique.ts"" /> /// <reference path=""javascripts/app/sections/plans.ts"" /> //grunt-end  /// <reference path=""content/clients/reference.d.ts"" /> ```  ## admin-reference.d.ts  ``` ts /// <reference path=""typings/generic.d.ts"" />  //grunt-start /// <reference path=""javascripts/modules/academia.ts"" /> /// <reference path=""javascripts/modules/analytics.ts"" /> /// <reference path=""javascripts/modules/base.ts"" /> /// <reference path=""javascripts/modules/bluebirdfill.ts"" /> /// <reference path=""javascripts/modules/cep.ts"" /> /// <reference path=""javascripts/modules/cleanmask.ts"" /> /// <reference path=""javascripts/modules/cnpj.ts"" /> /// <reference path=""javascripts/modules/cpf.ts"" /> /// <reference path=""javascripts/modules/currency.ts"" /> /// <reference path=""javascripts/modules/email.ts"" /> /// <reference path=""javascripts/modules/equalizer.ts"" /> /// <reference path=""javascripts/modules/facebook.ts"" /> /// <reference path=""javascripts/modules/file.ts"" /> /// <reference path=""javascripts/modules/flatten.ts"" /> /// <reference path=""javascripts/modules/length.ts"" /> /// <reference path=""javascripts/modules/loading.ts"" /> /// <reference path=""javascripts/modules/login.ts"" /> /// <reference path=""javascripts/modules/maps.ts"" /> /// <reference path=""javascripts/modules/mask.ts"" /> /// <reference path=""javascripts/modules/nascimento.ts"" /> /// <reference path=""javascripts/modules/pad.ts"" /> /// <reference path=""javascripts/modules/percentage.ts"" /> /// <reference path=""javascripts/modules/pheryResource.ts"" /> /// <reference path=""javascripts/modules/planner.ts"" /> /// <reference path=""javascripts/modules/preload.ts"" /> /// <reference path=""javascripts/modules/resume.ts"" /> /// <reference path=""javascripts/modules/scroll.ts"" /> /// <reference path=""javascripts/modules/stacktrace.ts"" /> /// <reference path=""javascripts/modules/user.ts"" /> /// <reference path=""javascripts/admin/admin.ts"" /> /// <reference path=""javascripts/admin/main/dash.ts"" /> /// <reference path=""javascripts/admin/main/login.ts"" /> //grunt-end  ```  the file in question that I tried the ""Find all references"" is the `javascripts/modules/planner.ts` one  If it has any statistical significance, the project have 8000ish LOC"
20974|@Tyriar Looks like some other changes fixed the modal issue. But now if you click more than once, the dialog will only show one at a time, but will continue to pop up how ever many times you click clean regardless of choosing clean or cancel.
20975|Thanks for the updates, I verified and getting debug console window all the time with my setting. But I observed that application behavior got changed for task window. I used to get task window all the time whenever I performed CTRL+SHIFT+B (build command) but now task window is not displaying all the time. With the latest alpha build I observed that user needs to explicitly open task window to see the build output. Did we also make the task window configurable? If so what are the settings I can use to get it all the time for build action. Basically my intention here is that console windows (task and debug) should be interchangeable with user's action and of course according to local setting.
20976|@dbaeumer can comment on the task window. As far as I know that is also dependent on the setting in your tasks.json
20977|I think this is just how our path detection works, and the new paths are not detected. @bpasero ?
20978|"@arliang can you please provide a screenshot, or even better a gif?  For me it works fine   <img width=""610"" alt=""screen shot 2016-05-09 at 21 44 43"" src=""https://cloud.githubusercontent.com/assets/1926584/15125843/48a49dfc-162f-11e6-8686-31d1f773f94c.png"">"
20979|"OOPS! I forgot setting in tasks.json ""showOutput"": ""always"". Now It is working flawlessly. Thanks again."
20980|The currently implemented folding strategy is based purely on the indentation of lines. A folding region starts when a line has a smaller indent than one or more following lines, and ends when there is a line with the same or smaller indent.  To be more smart and to, for example, understand go multiline strings, we will have to go one step further and introduce language agnostic folding regions. We have issue #3422 for this.
20981|@ashutoshraina, are you referring to the dark-blue background color and the light blue outline colors of the modal?
20982|I just updated my original post. This issue only occurs if I enable 3D acceleration on the VirtualBox. It has to do with the latest version of Chrome (50?)
20983|I was working with the [smoke test repo](https://github.com/Microsoft/vscode-smoketest-express) but I'm not able to repro on the latest build. I'll reopen if any other builds repro.
20984|I don't why was this closed? nobody else has this issue?
20985|Three weeks ago I really wanted tabs. I even put off switching to VSC for a while since it didn't have tabs. Now that I've spent a couple weeks using VSC, I don't even want tabs. At this point I think they'd get in my way.  I hope when this is built it will be optional so those of us who want it can continue in the current environment.
20986|"FYI: the Electron crash service process that lies underneath uses a system global unique pipe name (""\\.\pipe\$1 Crash Service""  ==> ""VSCode Crash Service"") and if this pipe is already open (e.g. from a second copy of VSCode running) then it will print this error. So, it is probably a bug/design flaw in Electron rather than VSCode itself.  I have no idea whether the original VSCode process's crash service process is able to handle secondary VSCode processes' crashes or not, or if you exit the original, if it also terminates the crash service and leaves secondary VSCode processes without a crash service. But hopefully this explains to you why you see an error message there. :P  For reference, https://github.com/electron/electron/blob/master/atom/common/crash_reporter/win/crash_service.cc#L300"
20987|Related to #459
20988|Related #459
20989|Related #459
20990|@chrisdias any thoughts on user stylesheets here?
20991|Thanks for the bug fix.. :clap:
20992|As someone who really likes vertical tabs (they scale much better and work better on widescreen displays), I’m wondering: Why do you need both tabs and “open editors”. If the latter is basically “working files” with tab behavior then that’s all I’d need/want.
20993|the same issue with NodeJS v6.1.0 and VSCode 1.1.0
20994|Check your editor.wrappingColumn setting in user settings. Looks like it's set to 1 character. 300 is the default.
20995|I want to add my vote to making sure the tabs are optional.  I really dislike editor tabs and much prefer the panel on the left side of the window.  I understand adding them for the people who want them, but please, don't force them on us.  Not having them is one of the things I _like_ about this editor.
20996|@Mirodil are you debugging node v6 with VS Code 1.1 in 'attach' mode? If yes, please launch node with `--debug-brk` instead of `--debug`. Does it make a difference?
20997|yes, it works with `--debug-brk` flag
20998|"@Mirodil thanks for trying. Here is the explanation:  VS Code injects code into node.js to work around slowness issues with large data structures. For reasons we do not yet understand this injected code fixes the issue in node v6 that requesting the call stack results in an ""Internal error: illegal access"" error. VS Code injects the code with an 'evaluate' request. The injected code uses a `require(...)` which is only available if node is stopped. This is only the case if node is started with `--debug-brk`. If only `--debug` is used, code injection fails and our magic 'fix' cannot work.  We hope that the node v6 issue will be eventually fixed."
20999|thank you, I got it
21000|I recon this `smartStep` option only works with TypeScript? Can we (pure js users) has this option also? For stepping only into project files and jumping over 'uninteresting code' like node_modules/**? Particularly #3215
